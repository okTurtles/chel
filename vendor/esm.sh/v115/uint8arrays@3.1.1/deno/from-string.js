/* esm.sh - esbuild bundle(uint8arrays@3.1.1/from-string) deno production */
import{bases as f}from"/v115/multiformats@9.9.0/deno/basics.js";function o(r){return globalThis.Buffer!=null?new Uint8Array(r.buffer,r.byteOffset,r.byteLength):r}function l(r=0){return globalThis.Buffer!=null&&globalThis.Buffer.allocUnsafe!=null?o(globalThis.Buffer.allocUnsafe(r)):new Uint8Array(r)}function a(r,e,t,c){return{name:r,prefix:e,encoder:{name:r,prefix:e,encode:t},decoder:{decode:c}}}var u=a("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),n=a("ascii","a",r=>{let e="a";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return e},r=>{r=r.substring(1);let e=l(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);return e}),s={utf8:u,"utf-8":u,hex:f.base16,latin1:n,ascii:n,binary:n,...f},i=s;function U(r,e="utf8"){let t=i[e];if(!t)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?o(globalThis.Buffer.from(r,"utf-8")):t.decoder.decode(`${t.prefix}${r}`)}export{U as fromString};
//# sourceMappingURL=from-string.js.map
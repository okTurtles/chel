/* esm.sh - esbuild bundle(multiformats@9.9.0/basics) deno production */
var Ie=Object.defineProperty;var d=(r,e)=>{for(var t in e)Ie(r,t,{get:e[t],enumerable:!0})};var ee={};d(ee,{identity:()=>ke});function Ne(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),D=0;D<t.length;D++)t[D]=255;for(var o=0;o<r.length;o++){var n=r.charAt(o),u=n.charCodeAt(0);if(t[u]!==255)throw new TypeError(n+" is ambiguous");t[u]=o}var i=r.length,h=r.charAt(0),I=Math.log(i)/Math.log(256),f=Math.log(256)/Math.log(i);function N(s){if(s instanceof Uint8Array||(ArrayBuffer.isView(s)?s=new Uint8Array(s.buffer,s.byteOffset,s.byteLength):Array.isArray(s)&&(s=Uint8Array.from(s))),!(s instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(s.length===0)return"";for(var p=0,S=0,l=0,E=s.length;l!==E&&s[l]===0;)l++,p++;for(var w=(E-l)*f+1>>>0,b=new Uint8Array(w);l!==E;){for(var x=s[l],v=0,C=w-1;(x!==0||v<S)&&C!==-1;C--,v++)x+=256*b[C]>>>0,b[C]=x%i>>>0,x=x/i>>>0;if(x!==0)throw new Error("Non-zero carry");S=v,l++}for(var y=w-S;y!==w&&b[y]===0;)y++;for(var R=h.repeat(p);y<w;++y)R+=r.charAt(b[y]);return R}function k(s){if(typeof s!="string")throw new TypeError("Expected String");if(s.length===0)return new Uint8Array;var p=0;if(s[p]!==" "){for(var S=0,l=0;s[p]===h;)S++,p++;for(var E=(s.length-p)*I+1>>>0,w=new Uint8Array(E);s[p];){var b=t[s.charCodeAt(p)];if(b===255)return;for(var x=0,v=E-1;(b!==0||x<l)&&v!==-1;v--,x++)b+=i*w[v]>>>0,w[v]=b%256>>>0,b=b/256>>>0;if(b!==0)throw new Error("Non-zero carry");l=x,p++}if(s[p]!==" "){for(var C=E-l;C!==E&&w[C]===0;)C++;for(var y=new Uint8Array(S+(E-C)),R=S;C!==E;)y[R++]=w[C++];return y}}}function ze(s){var p=k(s);if(p)return p;throw new Error(`Non-${e} character`)}return{encode:N,decodeUnsafe:k,decode:ze}}var Me=Ne,Oe=Me,Ce=Oe;var W={};d(W,{coerce:()=>m,empty:()=>Ee,equals:()=>G,fromHex:()=>Le,fromString:()=>K,isBinary:()=>Ve,toHex:()=>Te,toString:()=>Q});var Ee=new Uint8Array(0),Te=r=>r.reduce((e,t)=>e+t.toString(16).padStart(2,"0"),""),Le=r=>{let e=r.match(/../g);return e?new Uint8Array(e.map(t=>parseInt(t,16))):Ee},G=(r,e)=>{if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0},m=r=>{if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")},Ve=r=>r instanceof ArrayBuffer||ArrayBuffer.isView(r),K=r=>new TextEncoder().encode(r),Q=r=>new TextDecoder().decode(r);var H=class{constructor(e,t,D){this.name=e,this.prefix=t,this.baseEncode=D}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},Z=class{constructor(e,t,D){if(this.name=e,this.prefix=t,t.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=D}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return we(this,e)}},Y=class{constructor(e){this.decoders=e}or(e){return we(this,e)}decode(e){let t=e[0],D=this.decoders[t];if(D)return D.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}},we=(r,e)=>new Y({...r.decoders||{[r.prefix]:r},...e.decoders||{[e.prefix]:e}}),_=class{constructor(e,t,D,o){this.name=e,this.prefix=t,this.baseEncode=D,this.baseDecode=o,this.encoder=new H(e,t,D),this.decoder=new Z(e,t,o)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}},M=({name:r,prefix:e,encode:t,decode:D})=>new _(r,e,t,D),A=({prefix:r,name:e,alphabet:t})=>{let{encode:D,decode:o}=Ce(t,e);return M({prefix:r,name:e,encode:D,decode:n=>m(o(n))})},Pe=(r,e,t,D)=>{let o={};for(let f=0;f<e.length;++f)o[e[f]]=f;let n=r.length;for(;r[n-1]==="=";)--n;let u=new Uint8Array(n*t/8|0),i=0,h=0,I=0;for(let f=0;f<n;++f){let N=o[r[f]];if(N===void 0)throw new SyntaxError(`Non-${D} character`);h=h<<t|N,i+=t,i>=8&&(i-=8,u[I++]=255&h>>i)}if(i>=t||255&h<<8-i)throw new SyntaxError("Unexpected end of data");return u},je=(r,e,t)=>{let D=e[e.length-1]==="=",o=(1<<t)-1,n="",u=0,i=0;for(let h=0;h<r.length;++h)for(i=i<<8|r[h],u+=8;u>t;)u-=t,n+=e[o&i>>u];if(u&&(n+=e[o&i<<t-u]),D)for(;n.length*t&7;)n+="=";return n},a=({name:r,prefix:e,bitsPerChar:t,alphabet:D})=>M({prefix:e,name:r,encode(o){return je(o,D,t)},decode(o){return Pe(o,D,t,r)}});var ke=M({prefix:"\0",name:"identity",encode:r=>Q(r),decode:r=>K(r)});var te={};d(te,{base2:()=>Re});var Re=a({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var re={};d(re,{base8:()=>qe});var qe=a({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var De={};d(De,{base10:()=>$e});var $e=A({prefix:"9",name:"base10",alphabet:"0123456789"});var oe={};d(oe,{base16:()=>Je,base16upper:()=>Xe});var Je=a({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),Xe=a({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var ne={};d(ne,{base32:()=>O,base32hex:()=>We,base32hexpad:()=>Ze,base32hexpadupper:()=>Ye,base32hexupper:()=>He,base32pad:()=>Ke,base32padupper:()=>Qe,base32upper:()=>Ge,base32z:()=>_e});var O=a({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),Ge=a({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),Ke=a({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),Qe=a({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),We=a({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),He=a({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),Ze=a({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),Ye=a({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),_e=a({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var ue={};d(ue,{base36:()=>et,base36upper:()=>tt});var et=A({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),tt=A({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var se={};d(se,{base58btc:()=>g,base58flickr:()=>rt});var g=A({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),rt=A({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var ie={};d(ie,{base64:()=>Dt,base64pad:()=>ot,base64url:()=>nt,base64urlpad:()=>ut});var Dt=a({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),ot=a({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),nt=a({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),ut=a({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var ae={};d(ae,{base256emoji:()=>dt});var xe=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),st=xe.reduce((r,e,t)=>(r[t]=e,r),[]),it=xe.reduce((r,e,t)=>(r[e.codePointAt(0)]=t,r),[]);function at(r){return r.reduce((e,t)=>(e+=st[t],e),"")}function ct(r){let e=[];for(let t of r){let D=it[t.codePointAt(0)];if(D===void 0)throw new Error(`Non-base256emoji character: ${t}`);e.push(D)}return new Uint8Array(e)}var dt=M({prefix:"\u{1F680}",name:"base256emoji",encode:at,decode:ct});var fe={};d(fe,{sha256:()=>zt,sha512:()=>It});var pe={};d(pe,{Hasher:()=>q,from:()=>$});var L={};d(L,{Digest:()=>z,create:()=>F,decode:()=>de,equals:()=>he});var P={};d(P,{decode:()=>T,encodeTo:()=>B,encodingLength:()=>U});var ht=ve,ge=128,pt=127,ft=~pt,bt=Math.pow(2,31);function ve(r,e,t){e=e||[],t=t||0;for(var D=t;r>=bt;)e[t++]=r&255|ge,r/=128;for(;r&ft;)e[t++]=r&255|ge,r>>>=7;return e[t]=r|0,ve.bytes=t-D+1,e}var mt=ce,lt=128,ye=127;function ce(r,D){var t=0,D=D||0,o=0,n=D,u,i=r.length;do{if(n>=i)throw ce.bytes=0,new RangeError("Could not decode varint");u=r[n++],t+=o<28?(u&ye)<<o:(u&ye)*Math.pow(2,o),o+=7}while(u>=lt);return ce.bytes=n-D,t}var Ct=Math.pow(2,7),Et=Math.pow(2,14),wt=Math.pow(2,21),xt=Math.pow(2,28),gt=Math.pow(2,35),yt=Math.pow(2,42),vt=Math.pow(2,49),At=Math.pow(2,56),Ft=Math.pow(2,63),St=function(r){return r<Ct?1:r<Et?2:r<wt?3:r<xt?4:r<gt?5:r<yt?6:r<vt?7:r<At?8:r<Ft?9:10},Bt={encode:ht,decode:mt,encodingLength:St},Ut=Bt,V=Ut;var T=(r,e=0)=>[V.decode(r,e),V.decode.bytes],B=(r,e,t=0)=>(V.encode(r,e,t),e),U=r=>V.encodingLength(r);var F=(r,e)=>{let t=e.byteLength,D=U(r),o=D+U(t),n=new Uint8Array(o+t);return B(r,n,0),B(t,n,D),n.set(e,o),new z(r,t,e,n)},de=r=>{let e=m(r),[t,D]=T(e),[o,n]=T(e.subarray(D)),u=e.subarray(D+n);if(u.byteLength!==o)throw new Error("Incorrect length");return new z(t,o,u,e)},he=(r,e)=>r===e?!0:r.code===e.code&&r.size===e.size&&G(r.bytes,e.bytes),z=class{constructor(e,t,D,o){this.code=e,this.size=t,this.digest=D,this.bytes=o}};var $=({name:r,code:e,encode:t})=>new q(r,e,t),q=class{constructor(e,t,D){this.name=e,this.code=t,this.encode=D}digest(e){if(e instanceof Uint8Array){let t=this.encode(e);return t instanceof Uint8Array?F(this.code,t):t.then(D=>F(this.code,D))}else throw Error("Unknown type, must be binary type")}};var Ae=r=>async e=>new Uint8Array(await crypto.subtle.digest(r,e)),zt=$({name:"sha2-256",code:18,encode:Ae("SHA-256")}),It=$({name:"sha2-512",code:19,encode:Ae("SHA-512")});var be={};d(be,{identity:()=>Ot});var Fe=0,Nt="identity",Se=m,Mt=r=>F(Fe,Se(r)),Ot={code:Fe,name:Nt,encode:Se,digest:Mt};var me={};d(me,{code:()=>Lt,decode:()=>Pt,encode:()=>Vt,name:()=>Tt});var Tt="raw",Lt=85,Vt=r=>m(r),Pt=r=>m(r);var le={};d(le,{code:()=>qt,decode:()=>Jt,encode:()=>$t,name:()=>Rt});var jt=new TextEncoder,kt=new TextDecoder,Rt="json",qt=512,$t=r=>jt.encode(JSON.stringify(r)),Jt=r=>JSON.parse(kt.decode(r));var c=class{constructor(e,t,D,o){this.code=t,this.version=e,this.multihash=D,this.bytes=o,this.byteOffset=o.byteOffset,this.byteLength=o.byteLength,this.asCID=this,this._baseCache=new Map,Object.defineProperties(this,{byteOffset:X,byteLength:X,code:J,version:J,multihash:J,bytes:J,_baseCache:X,asCID:X})}toV0(){switch(this.version){case 0:return this;default:{let{code:e,multihash:t}=this;if(e!==j)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==Qt)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return c.createV0(t)}}}toV1(){switch(this.version){case 0:{let{code:e,digest:t}=this.multihash,D=F(e,t);return c.createV1(this.code,D)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}equals(e){return e&&this.code===e.code&&this.version===e.version&&he(this.multihash,e.multihash)}toString(e){let{bytes:t,version:D,_baseCache:o}=this;switch(D){case 0:return Gt(t,o,e||g.encoder);default:return Kt(t,o,e||O.encoder)}}toJSON(){return{code:this.code,version:this.version,hash:this.multihash.bytes}}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return"CID("+this.toString()+")"}static isCID(e){return Ht(/^0\.0/,Zt),!!(e&&(e[Ue]||e.asCID===e))}get toBaseEncodedString(){throw new Error("Deprecated, use .toString()")}get codec(){throw new Error('"codec" property is deprecated, use integer "code" property instead')}get buffer(){throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")}get multibaseName(){throw new Error('"multibaseName" property is deprecated')}get prefix(){throw new Error('"prefix" property is deprecated')}static asCID(e){if(e instanceof c)return e;if(e!=null&&e.asCID===e){let{version:t,code:D,multihash:o,bytes:n}=e;return new c(t,D,o,n||Be(t,D,o.bytes))}else if(e!=null&&e[Ue]===!0){let{version:t,multihash:D,code:o}=e,n=de(D);return c.create(t,o,n)}else return null}static create(e,t,D){if(typeof t!="number")throw new Error("String codecs are no longer supported");switch(e){case 0:{if(t!==j)throw new Error(`Version 0 CID must use dag-pb (code: ${j}) block encoding`);return new c(e,t,D,D.bytes)}case 1:{let o=Be(e,t,D.bytes);return new c(e,t,D,o)}default:throw new Error("Invalid version")}}static createV0(e){return c.create(0,j,e)}static createV1(e,t){return c.create(1,e,t)}static decode(e){let[t,D]=c.decodeFirst(e);if(D.length)throw new Error("Incorrect length");return t}static decodeFirst(e){let t=c.inspectBytes(e),D=t.size-t.multihashSize,o=m(e.subarray(D,D+t.multihashSize));if(o.byteLength!==t.multihashSize)throw new Error("Incorrect length");let n=o.subarray(t.multihashSize-t.digestSize),u=new z(t.multihashCode,t.digestSize,n,o);return[t.version===0?c.createV0(u):c.createV1(t.codec,u),e.subarray(t.size)]}static inspectBytes(e){let t=0,D=()=>{let[N,k]=T(e.subarray(t));return t+=k,N},o=D(),n=j;if(o===18?(o=0,t=0):o===1&&(n=D()),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);let u=t,i=D(),h=D(),I=t+h,f=I-u;return{version:o,codec:n,multihashCode:i,digestSize:h,multihashSize:f,size:I}}static parse(e,t){let[D,o]=Xt(e,t),n=c.decode(o);return n._baseCache.set(D,e),n}},Xt=(r,e)=>{switch(r[0]){case"Q":{let t=e||g;return[g.prefix,t.decode(`${g.prefix}${r}`)]}case g.prefix:{let t=e||g;return[g.prefix,t.decode(r)]}case O.prefix:{let t=e||O;return[O.prefix,t.decode(r)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[r[0],e.decode(r)]}}},Gt=(r,e,t)=>{let{prefix:D}=t;if(D!==g.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);let o=e.get(D);if(o==null){let n=t.encode(r).slice(1);return e.set(D,n),n}else return o},Kt=(r,e,t)=>{let{prefix:D}=t,o=e.get(D);if(o==null){let n=t.encode(r);return e.set(D,n),n}else return o},j=112,Qt=18,Be=(r,e,t)=>{let D=U(r),o=D+U(e),n=new Uint8Array(o+t.byteLength);return B(r,n,0),B(e,n,D),n.set(t,o),n},Ue=Symbol.for("@ipld/js-cid/CID"),J={writable:!1,configurable:!1,enumerable:!0},X={writable:!1,enumerable:!1,configurable:!1},Wt="0.0.0-dev",Ht=(r,e)=>{if(r.test(Wt))console.warn(e);else throw new Error(e)},Zt=`CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;var Sr={...ee,...te,...re,...De,...oe,...ne,...ue,...se,...ie,...ae},Br={...fe,...be},Ur={raw:me,json:le};export{c as CID,Sr as bases,W as bytes,Ur as codecs,L as digest,pe as hasher,Br as hashes,P as varint};
//# sourceMappingURL=basics.js.map
/* esm.sh - esbuild bundle(multiformats@11.0.2/bytes) denonext production */
var n=new Uint8Array(0),i=e=>e.reduce((r,t)=>r+t.toString(16).padStart(2,"0"),""),f=e=>{let r=e.match(/../g);return r?new Uint8Array(r.map(t=>parseInt(t,16))):n},s=(e,r)=>{if(e===r)return!0;if(e.byteLength!==r.byteLength)return!1;for(let t=0;t<e.byteLength;t++)if(e[t]!==r[t])return!1;return!0},c=e=>{if(e instanceof Uint8Array&&e.constructor.name==="Uint8Array")return e;if(e instanceof ArrayBuffer)return new Uint8Array(e);if(ArrayBuffer.isView(e))return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw new Error("Unknown type, must be binary type")},o=e=>e instanceof ArrayBuffer||ArrayBuffer.isView(e),y=e=>new TextEncoder().encode(e),u=e=>new TextDecoder().decode(e);export{c as coerce,n as empty,s as equals,f as fromHex,y as fromString,o as isBinary,i as toHex,u as toString};
//# sourceMappingURL=bytes.js.map
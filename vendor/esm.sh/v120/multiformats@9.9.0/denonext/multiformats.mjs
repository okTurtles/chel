/* esm.sh - esbuild bundle(multiformats@9.9.0) denonext production */
var M=Object.defineProperty;var d=(r,t)=>{for(var e in t)M(r,e,{get:t[e],enumerable:!0})};import{CID as W}from"/v120/multiformats@9.9.0/denonext/cid.js";var w={};d(w,{decode:()=>H,encodeTo:()=>O,encodingLength:()=>V});var m=p,f=128,u=127,x=~u,A=Math.pow(2,31);function p(r,t,e){t=t||[],e=e||0;for(var n=e;r>=A;)t[e++]=r&255|f,r/=128;for(;r&x;)t[e++]=r&255|f,r>>>=7;return t[e]=r|0,p.bytes=e-n+1,t}var b=s,N=128,h=127;function s(r,n){var e=0,n=n||0,a=0,c=n,i,v=r.length;do{if(c>=v)throw s.bytes=0,new RangeError("Could not decode varint");i=r[c++],e+=a<28?(i&h)<<a:(i&h)*Math.pow(2,a),a+=7}while(i>=N);return s.bytes=c-n,e}var L=Math.pow(2,7),S=Math.pow(2,14),B=Math.pow(2,21),U=Math.pow(2,28),T=Math.pow(2,35),l=Math.pow(2,42),E=Math.pow(2,49),I=Math.pow(2,56),R=Math.pow(2,63),_=function(r){return r<L?1:r<S?2:r<B?3:r<U?4:r<T?5:r<l?6:r<E?7:r<I?8:r<R?9:10},C={encode:m,decode:b,encodingLength:_},D=C,o=D;var H=(r,t=0)=>[o.decode(r,t),o.decode.bytes],O=(r,t,e=0)=>(o.encode(r,t,e),t),V=r=>o.encodingLength(r);var g={};d(g,{coerce:()=>j,empty:()=>y,equals:()=>q,fromHex:()=>k,fromString:()=>F,isBinary:()=>z,toHex:()=>$,toString:()=>G});var y=new Uint8Array(0),$=r=>r.reduce((t,e)=>t+e.toString(16).padStart(2,"0"),""),k=r=>{let t=r.match(/../g);return t?new Uint8Array(t.map(e=>parseInt(e,16))):y},q=(r,t)=>{if(r===t)return!0;if(r.byteLength!==t.byteLength)return!1;for(let e=0;e<r.byteLength;e++)if(r[e]!==t[e])return!1;return!0},j=r=>{if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")},z=r=>r instanceof ArrayBuffer||ArrayBuffer.isView(r),F=r=>new TextEncoder().encode(r),G=r=>new TextDecoder().decode(r);import*as X from"/v120/multiformats@9.9.0/denonext/hashes/hasher.js";import*as Y from"/v120/multiformats@9.9.0/denonext/hashes/digest.js";export{W as CID,g as bytes,Y as digest,X as hasher,w as varint};
//# sourceMappingURL=multiformats.mjs.map
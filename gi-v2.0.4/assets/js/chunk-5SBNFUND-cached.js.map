{
  "version": 3,
  "sources": ["../../../node_modules/blakejs/util.js", "../../../node_modules/blakejs/blake2b.js", "../../../node_modules/blakejs/blake2s.js", "../../../node_modules/blakejs/index.js", "../../../node_modules/scrypt-async/scrypt-async.js", "../../../node_modules/tweetnacl/nacl-fast.js", "../../../node_modules/@chelonia/lib/node_modules/turtledash/dist/esm/index.js", "../../../node_modules/@chelonia/multiformats/dist/esm/bytes.mjs", "../../../node_modules/@chelonia/multiformats/dist/esm/base-x.mjs", "../../../node_modules/@chelonia/multiformats/dist/esm/bases/base.mjs", "../../../node_modules/@chelonia/multiformats/dist/esm/bases/base32.mjs", "../../../node_modules/@chelonia/multiformats/dist/esm/bases/base58.mjs", "../../../node_modules/@chelonia/multiformats/dist/esm/blake2b.mjs", "../../../node_modules/@chelonia/multiformats/dist/esm/vendor/varint.mjs", "../../../node_modules/@chelonia/multiformats/dist/esm/varint.mjs", "../../../node_modules/@chelonia/multiformats/dist/esm/hashes/digest.mjs", "../../../node_modules/@chelonia/multiformats/dist/esm/hasher.mjs", "../../../node_modules/@chelonia/multiformats/dist/esm/blake2bstream.mjs", "../../../node_modules/@chelonia/multiformats/dist/esm/cid.mjs", "../../../node_modules/@chelonia/crypto/dist/esm/index.mjs", "../../../node_modules/@chelonia/lib/dist/esm/functions.mjs", "../../../node_modules/@chelonia/lib/dist/esm/signedData.mjs", "../../../node_modules/@chelonia/lib/dist/esm/encryptedData.mjs", "../../../node_modules/@chelonia/lib/dist/esm/SPMessage.mjs"],
  "sourcesContent": ["const ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  let ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (typeof input === 'string') {\n    const encoder = new TextEncoder()\n    ret = encoder.encode(input)\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map\n    .call(bytes, function (n) {\n      return (n < 16 ? '0' : '') + n.toString(16)\n    })\n    .join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  let msg = '\\n' + label + ' = '\n  for (let i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  let startMs = new Date().getTime()\n\n  const input = new Uint8Array(N)\n  for (let i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  const genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (let i = 0; i < M; i++) {\n    const hashHex = hashFn(input)\n    const hashMs = new Date().getTime()\n    const ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(\n      Math.round((N / (1 << 20) / (ms / 1000)) * 100) / 100 + ' MB PER SECOND'\n    )\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n", "// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  const o0 = v[a] + v[b]\n  let o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  let o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  let o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return arr[i] ^ (arr[i + 1] << 8) ^ (arr[i + 2] << 16) ^ (arr[i + 3] << 24)\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  const x0 = m[ix]\n  const x1 = m[ix + 1]\n  const y0 = m[iy]\n  const y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  let xor0 = v[d] ^ v[a]\n  let xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nconst BLAKE2B_IV32 = new Uint32Array([\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372,\n  0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c,\n  0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n])\n\nconst SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13,\n  6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1,\n  9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4,\n  10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5,\n  15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7,\n  14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2,\n  13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0,\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6,\n  1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nconst SIGMA82 = new Uint8Array(\n  SIGMA8.map(function (x) {\n    return x * 2\n  })\n)\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nconst v = new Uint32Array(32)\nconst m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  let i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// reusable parameterBlock\nconst parameterBlock = new Uint8Array([\n  0,\n  0,\n  0,\n  0, //  0: outlen, keylen, fanout, depth\n  0,\n  0,\n  0,\n  0, //  4: leaf length, sequential mode\n  0,\n  0,\n  0,\n  0, //  8: node offset\n  0,\n  0,\n  0,\n  0, // 12: node offset\n  0,\n  0,\n  0,\n  0, // 16: node depth, inner length, rfu\n  0,\n  0,\n  0,\n  0, // 20: rfu\n  0,\n  0,\n  0,\n  0, // 24: rfu\n  0,\n  0,\n  0,\n  0, // 28: rfu\n  0,\n  0,\n  0,\n  0, // 32: salt\n  0,\n  0,\n  0,\n  0, // 36: salt\n  0,\n  0,\n  0,\n  0, // 40: salt\n  0,\n  0,\n  0,\n  0, // 44: salt\n  0,\n  0,\n  0,\n  0, // 48: personal\n  0,\n  0,\n  0,\n  0, // 52: personal\n  0,\n  0,\n  0,\n  0, // 56: personal\n  0,\n  0,\n  0,\n  0 // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\n// Takes an optinal Uint8Array salt\n// Takes an optinal Uint8Array personal\nfunction blake2bInit (outlen, key, salt, personal) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n  if (salt && salt.length !== 16) {\n    throw new Error('Illegal salt, expected Uint8Array with length is 16')\n  }\n  if (personal && personal.length !== 16) {\n    throw new Error('Illegal personal, expected Uint8Array with length is 16')\n  }\n\n  // state, 'param block'\n  const ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize parameterBlock before usage\n  parameterBlock.fill(0)\n  parameterBlock[0] = outlen\n  if (key) parameterBlock[1] = key.length\n  parameterBlock[2] = 1 // fanout\n  parameterBlock[3] = 1 // depth\n  if (salt) parameterBlock.set(salt, 32)\n  if (personal) parameterBlock.set(personal, 48)\n\n  // initialize hash state\n  for (let i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameterBlock, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 128) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2b (input, key, outlen, salt, personal) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n  if (salt) {\n    salt = util.normalizeInput(salt)\n  }\n  if (personal) {\n    personal = util.normalizeInput(personal)\n  }\n\n  // do the math\n  const ctx = blake2bInit(outlen, key, salt, personal)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2bHex (input, key, outlen, salt, personal) {\n  const output = blake2b(input, key, outlen, salt, personal)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n", "// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nconst BLAKE2S_IV = new Uint32Array([\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19\n])\n\nconst SIGMA = new Uint8Array([\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  14,\n  10,\n  4,\n  8,\n  9,\n  15,\n  13,\n  6,\n  1,\n  12,\n  0,\n  2,\n  11,\n  7,\n  5,\n  3,\n  11,\n  8,\n  12,\n  0,\n  5,\n  2,\n  15,\n  13,\n  10,\n  14,\n  3,\n  6,\n  7,\n  1,\n  9,\n  4,\n  7,\n  9,\n  3,\n  1,\n  13,\n  12,\n  11,\n  14,\n  2,\n  6,\n  5,\n  10,\n  4,\n  0,\n  15,\n  8,\n  9,\n  0,\n  5,\n  7,\n  2,\n  4,\n  10,\n  15,\n  14,\n  1,\n  11,\n  12,\n  6,\n  8,\n  3,\n  13,\n  2,\n  12,\n  6,\n  10,\n  0,\n  11,\n  8,\n  3,\n  4,\n  13,\n  7,\n  5,\n  15,\n  14,\n  1,\n  9,\n  12,\n  5,\n  1,\n  15,\n  14,\n  13,\n  4,\n  10,\n  0,\n  7,\n  6,\n  3,\n  9,\n  2,\n  8,\n  11,\n  13,\n  11,\n  7,\n  14,\n  12,\n  1,\n  3,\n  9,\n  5,\n  0,\n  15,\n  4,\n  8,\n  6,\n  2,\n  10,\n  6,\n  15,\n  14,\n  9,\n  11,\n  3,\n  0,\n  8,\n  12,\n  2,\n  13,\n  7,\n  1,\n  4,\n  10,\n  5,\n  10,\n  2,\n  8,\n  4,\n  7,\n  6,\n  1,\n  5,\n  15,\n  11,\n  9,\n  14,\n  3,\n  12,\n  13,\n  0\n])\n\n// Compression function. \"last\" flag indicates last block\nconst v = new Uint32Array(16)\nconst m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  let i = 0\n  for (i = 0; i < 8; i++) {\n    // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= ctx.t / 0x100000000 // high 32 bits\n  if (last) {\n    // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) {\n    // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  const keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  const ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint8Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 64) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xff\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  const ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  const output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n", "const b2b = require('./blake2b')\nconst b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n", "/*!\n * Fast \"async\" scrypt implementation in JavaScript.\n * Copyright (c) 2013-2016 Dmitry Chestnykh | BSD License\n * https://github.com/dchest/scrypt-async-js\n */\n\n/**\n * scrypt(password, salt, options, callback)\n *\n * where\n *\n * password and salt are strings or arrays of bytes (Array of Uint8Array)\n * options is\n *\n * {\n *    N:      // CPU/memory cost parameter, must be power of two\n *            // (alternatively, you can specify logN)\n *    r:      // block size\n *    p:      // parallelization parameter\n *    dkLen:  // length of derived key, default = 32\n *    encoding: // optional encoding:\n *                    \"base64\" - standard Base64 encoding\n *                    \"hex\" \u2014 hex encoding,\n *                    \"binary\" \u2014 Uint8Array,\n *                    undefined/null - Array of bytes\n *    interruptStep: // optional, steps to split calculations (default is 0)\n * }\n *\n * Derives a key from password and salt and calls callback\n * with derived key as the only argument.\n *\n * Calculations are interrupted with setImmediate (or zero setTimeout) at the\n * given interruptSteps to avoid freezing the browser. If it's undefined or zero,\n * the callback is called immediately after the calculation, avoiding setImmediate.\n *\n * Legacy way (only supports p = 1) to call this function is:\n *\n * scrypt(password, salt, logN, r, dkLen, [interruptStep], callback, [encoding])\n *\n * In legacy API, if interruptStep is not given, it defaults to 1000.\n * Pass 0 to have callback called immediately.\n *\n */\nfunction scrypt(password, salt, logN, r, dkLen, interruptStep, callback, encoding) {\n  'use strict';\n\n  function SHA256(m) {\n    /** @const */ var K = [\n      0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n      0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n      0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n      0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n      0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n      0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n      0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n      0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n      0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n      0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n      0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n      0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n      0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n    ];\n\n    var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a,\n        h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19,\n        w = new Array(64);\n\n    function blocks(p) {\n      var off = 0, len = p.length;\n      while (len >= 64) {\n        var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7,\n            u, i, j, t1, t2;\n\n        for (i = 0; i < 16; i++) {\n          j = off + i*4;\n          w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                 ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n        }\n\n        for (i = 16; i < 64; i++) {\n          u = w[i-2];\n          t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n          u = w[i-15];\n          t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n          w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n        }\n\n        for (i = 0; i < 64; i++) {\n          t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n               ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n               ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n          t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n               ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n          h = g;\n          g = f;\n          f = e;\n          e = (d + t1) | 0;\n          d = c;\n          c = b;\n          b = a;\n          a = (t1 + t2) | 0;\n        }\n\n        h0 = (h0 + a) | 0;\n        h1 = (h1 + b) | 0;\n        h2 = (h2 + c) | 0;\n        h3 = (h3 + d) | 0;\n        h4 = (h4 + e) | 0;\n        h5 = (h5 + f) | 0;\n        h6 = (h6 + g) | 0;\n        h7 = (h7 + h) | 0;\n\n        off += 64;\n        len -= 64;\n      }\n    }\n\n    blocks(m);\n\n    var i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n    p.push(0x80);\n    for (i = bytesLeft + 1; i < numZeros; i++) p.push(0);\n    p.push((bitLenHi>>>24) & 0xff);\n    p.push((bitLenHi>>>16) & 0xff);\n    p.push((bitLenHi>>>8)  & 0xff);\n    p.push((bitLenHi>>>0)  & 0xff);\n    p.push((bitLenLo>>>24) & 0xff);\n    p.push((bitLenLo>>>16) & 0xff);\n    p.push((bitLenLo>>>8)  & 0xff);\n    p.push((bitLenLo>>>0)  & 0xff);\n\n    blocks(p);\n\n    return [\n      (h0>>>24) & 0xff, (h0>>>16) & 0xff, (h0>>>8) & 0xff, (h0>>>0) & 0xff,\n      (h1>>>24) & 0xff, (h1>>>16) & 0xff, (h1>>>8) & 0xff, (h1>>>0) & 0xff,\n      (h2>>>24) & 0xff, (h2>>>16) & 0xff, (h2>>>8) & 0xff, (h2>>>0) & 0xff,\n      (h3>>>24) & 0xff, (h3>>>16) & 0xff, (h3>>>8) & 0xff, (h3>>>0) & 0xff,\n      (h4>>>24) & 0xff, (h4>>>16) & 0xff, (h4>>>8) & 0xff, (h4>>>0) & 0xff,\n      (h5>>>24) & 0xff, (h5>>>16) & 0xff, (h5>>>8) & 0xff, (h5>>>0) & 0xff,\n      (h6>>>24) & 0xff, (h6>>>16) & 0xff, (h6>>>8) & 0xff, (h6>>>0) & 0xff,\n      (h7>>>24) & 0xff, (h7>>>16) & 0xff, (h7>>>8) & 0xff, (h7>>>0) & 0xff\n    ];\n  }\n\n  function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n    // compress password if it's longer than hash block length\n    if(password.length > 64) {\n      // SHA256 expects password to be an Array. If it's not\n      // (i.e. it doesn't have .push method), convert it to one.\n      password = SHA256(password.push ? password : Array.prototype.slice.call(password, 0));\n    }\n\n    var i, innerLen = 64 + salt.length + 4,\n        inner = new Array(innerLen),\n        outerKey = new Array(64),\n        dk = [];\n\n    // inner = (password ^ ipad) || salt || counter\n    for (i = 0; i < 64; i++) inner[i] = 0x36;\n    for (i = 0; i < password.length; i++) inner[i] ^= password[i];\n    for (i = 0; i < salt.length; i++) inner[64+i] = salt[i];\n    for (i = innerLen - 4; i < innerLen; i++) inner[i] = 0;\n\n    // outerKey = password ^ opad\n    for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n    for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n    // increments counter inside inner\n    function incrementCounter() {\n      for (var i = innerLen-1; i >= innerLen-4; i--) {\n        inner[i]++;\n        if (inner[i] <= 0xff) return;\n        inner[i] = 0;\n      }\n    }\n\n    // output blocks = SHA256(outerKey || SHA256(inner)) ...\n    while (dkLen >= 32) {\n      incrementCounter();\n      dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n      dkLen -= 32;\n    }\n    if (dkLen > 0) {\n      incrementCounter();\n      dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n    }\n    return dk;\n  }\n\n  function salsaXOR(tmp, B, bin, bout) {\n    var j0  = tmp[0]  ^ B[bin++],\n        j1  = tmp[1]  ^ B[bin++],\n        j2  = tmp[2]  ^ B[bin++],\n        j3  = tmp[3]  ^ B[bin++],\n        j4  = tmp[4]  ^ B[bin++],\n        j5  = tmp[5]  ^ B[bin++],\n        j6  = tmp[6]  ^ B[bin++],\n        j7  = tmp[7]  ^ B[bin++],\n        j8  = tmp[8]  ^ B[bin++],\n        j9  = tmp[9]  ^ B[bin++],\n        j10 = tmp[10] ^ B[bin++],\n        j11 = tmp[11] ^ B[bin++],\n        j12 = tmp[12] ^ B[bin++],\n        j13 = tmp[13] ^ B[bin++],\n        j14 = tmp[14] ^ B[bin++],\n        j15 = tmp[15] ^ B[bin++],\n        u, i;\n\n    var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n        x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n        x15 = j15;\n\n    for (i = 0; i < 8; i += 2) {\n      u =  x0 + x12;   x4 ^= u<<7  | u>>>(32-7);\n      u =  x4 +  x0;   x8 ^= u<<9  | u>>>(32-9);\n      u =  x8 +  x4;  x12 ^= u<<13 | u>>>(32-13);\n      u = x12 +  x8;   x0 ^= u<<18 | u>>>(32-18);\n\n      u =  x5 +  x1;   x9 ^= u<<7  | u>>>(32-7);\n      u =  x9 +  x5;  x13 ^= u<<9  | u>>>(32-9);\n      u = x13 +  x9;   x1 ^= u<<13 | u>>>(32-13);\n      u =  x1 + x13;   x5 ^= u<<18 | u>>>(32-18);\n\n      u = x10 +  x6;  x14 ^= u<<7  | u>>>(32-7);\n      u = x14 + x10;   x2 ^= u<<9  | u>>>(32-9);\n      u =  x2 + x14;   x6 ^= u<<13 | u>>>(32-13);\n      u =  x6 +  x2;  x10 ^= u<<18 | u>>>(32-18);\n\n      u = x15 + x11;   x3 ^= u<<7  | u>>>(32-7);\n      u =  x3 + x15;   x7 ^= u<<9  | u>>>(32-9);\n      u =  x7 +  x3;  x11 ^= u<<13 | u>>>(32-13);\n      u = x11 +  x7;  x15 ^= u<<18 | u>>>(32-18);\n\n      u =  x0 +  x3;   x1 ^= u<<7  | u>>>(32-7);\n      u =  x1 +  x0;   x2 ^= u<<9  | u>>>(32-9);\n      u =  x2 +  x1;   x3 ^= u<<13 | u>>>(32-13);\n      u =  x3 +  x2;   x0 ^= u<<18 | u>>>(32-18);\n\n      u =  x5 +  x4;   x6 ^= u<<7  | u>>>(32-7);\n      u =  x6 +  x5;   x7 ^= u<<9  | u>>>(32-9);\n      u =  x7 +  x6;   x4 ^= u<<13 | u>>>(32-13);\n      u =  x4 +  x7;   x5 ^= u<<18 | u>>>(32-18);\n\n      u = x10 +  x9;  x11 ^= u<<7  | u>>>(32-7);\n      u = x11 + x10;   x8 ^= u<<9  | u>>>(32-9);\n      u =  x8 + x11;   x9 ^= u<<13 | u>>>(32-13);\n      u =  x9 +  x8;  x10 ^= u<<18 | u>>>(32-18);\n\n      u = x15 + x14;  x12 ^= u<<7  | u>>>(32-7);\n      u = x12 + x15;  x13 ^= u<<9  | u>>>(32-9);\n      u = x13 + x12;  x14 ^= u<<13 | u>>>(32-13);\n      u = x14 + x13;  x15 ^= u<<18 | u>>>(32-18);\n    }\n\n    B[bout++] = tmp[0]  = (x0  + j0)  | 0;\n    B[bout++] = tmp[1]  = (x1  + j1)  | 0;\n    B[bout++] = tmp[2]  = (x2  + j2)  | 0;\n    B[bout++] = tmp[3]  = (x3  + j3)  | 0;\n    B[bout++] = tmp[4]  = (x4  + j4)  | 0;\n    B[bout++] = tmp[5]  = (x5  + j5)  | 0;\n    B[bout++] = tmp[6]  = (x6  + j6)  | 0;\n    B[bout++] = tmp[7]  = (x7  + j7)  | 0;\n    B[bout++] = tmp[8]  = (x8  + j8)  | 0;\n    B[bout++] = tmp[9]  = (x9  + j9)  | 0;\n    B[bout++] = tmp[10] = (x10 + j10) | 0;\n    B[bout++] = tmp[11] = (x11 + j11) | 0;\n    B[bout++] = tmp[12] = (x12 + j12) | 0;\n    B[bout++] = tmp[13] = (x13 + j13) | 0;\n    B[bout++] = tmp[14] = (x14 + j14) | 0;\n    B[bout++] = tmp[15] = (x15 + j15) | 0;\n  }\n\n  function blockCopy(dst, di, src, si, len) {\n    while (len--) dst[di++] = src[si++];\n  }\n\n  function blockXOR(dst, di, src, si, len) {\n    while (len--) dst[di++] ^= src[si++];\n  }\n\n  function blockMix(tmp, B, bin, bout, r) {\n    blockCopy(tmp, 0, B, bin + (2*r-1)*16, 16);\n    for (var i = 0; i < 2*r; i += 2) {\n      salsaXOR(tmp, B, bin + i*16,      bout + i*8);\n      salsaXOR(tmp, B, bin + i*16 + 16, bout + i*8 + r*16);\n    }\n  }\n\n  function integerify(B, bi, r) {\n    return B[bi+(2*r-1)*16];\n  }\n\n  function stringToUTF8Bytes(s) {\n    var arr = [];\n    for (var i = 0; i < s.length; i++) {\n      var c = s.charCodeAt(i);\n      if (c < 0x80) {\n        arr.push(c);\n      } else if (c < 0x800) {\n        arr.push(0xc0 | c >> 6);\n        arr.push(0x80 | c & 0x3f);\n      } else if (c < 0xd800) {\n        arr.push(0xe0 | c >> 12);\n        arr.push(0x80 | (c >> 6) & 0x3f);\n        arr.push(0x80 | c & 0x3f);\n      } else {\n        if (i >= s.length - 1) {\n          throw new Error('invalid string');\n        }\n        i++; // get one more character\n        c = (c & 0x3ff) << 10;\n        c |= s.charCodeAt(i) & 0x3ff;\n        c += 0x10000;\n\n        arr.push(0xf0 | c >> 18);\n        arr.push(0x80 | (c >> 12) & 0x3f);\n        arr.push(0x80 | (c >> 6) & 0x3f);\n        arr.push(0x80 | c & 0x3f);\n      }\n    }\n    return arr;\n  }\n\n  function bytesToHex(p) {\n    /** @const */\n    var enc = '0123456789abcdef'.split('');\n\n    var len = p.length,\n        arr = [],\n        i = 0;\n\n    for (; i < len; i++) {\n        arr.push(enc[(p[i]>>>4) & 15]);\n        arr.push(enc[(p[i]>>>0) & 15]);\n    }\n    return arr.join('');\n  }\n\n  function bytesToBase64(p) {\n    /** @const */\n    var enc = ('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz' +\n              '0123456789+/').split('');\n\n    var len = p.length,\n        arr = [],\n        i = 0,\n        a, b, c, t;\n\n    while (i < len) {\n      a = i < len ? p[i++] : 0;\n      b = i < len ? p[i++] : 0;\n      c = i < len ? p[i++] : 0;\n      t = (a << 16) + (b << 8) + c;\n      arr.push(enc[(t >>> 3 * 6) & 63]);\n      arr.push(enc[(t >>> 2 * 6) & 63]);\n      arr.push(enc[(t >>> 1 * 6) & 63]);\n      arr.push(enc[(t >>> 0 * 6) & 63]);\n    }\n    if (len % 3 > 0) {\n      arr[arr.length-1] = '=';\n      if (len % 3 === 1) arr[arr.length-2] = '=';\n    }\n    return arr.join('');\n  }\n\n\n  // Generate key.\n\n  var MAX_UINT = (-1)>>>0,\n      p = 1;\n\n  if (typeof logN === \"object\") {\n    // Called as: scrypt(password, salt, opts, callback)\n    if (arguments.length > 4) {\n      throw new Error('scrypt: incorrect number of arguments');\n    }\n\n    var opts = logN;\n\n    callback = r;\n    logN = opts.logN;\n    if (typeof logN === 'undefined') {\n      if (typeof opts.N !== 'undefined') {\n        if (opts.N < 2 || opts.N > MAX_UINT)\n          throw new Error('scrypt: N is out of range');\n\n        if ((opts.N & (opts.N - 1)) !== 0)\n          throw new Error('scrypt: N is not a power of 2');\n\n        logN = Math.log(opts.N) / Math.LN2;\n      } else {\n        throw new Error('scrypt: missing N parameter');\n      }\n    }\n\n    // XXX: If opts.p or opts.dkLen is 0, it will be set to the default value\n    // instead of throwing due to incorrect value. To avoid breaking\n    // compatibility, this will only be changed in the next major version.\n    p = opts.p || 1;\n    r = opts.r;\n    dkLen = opts.dkLen || 32;\n    interruptStep = opts.interruptStep || 0;\n    encoding = opts.encoding;\n  }\n\n  if (p < 1)\n    throw new Error('scrypt: invalid p');\n\n  if (r <= 0)\n    throw new Error('scrypt: invalid r');\n\n  if (logN < 1 || logN > 31)\n    throw new Error('scrypt: logN must be between 1 and 31');\n\n\n  var N = (1<<logN)>>>0,\n      XY, V, B, tmp;\n\n  if (r*p >= 1<<30 || r > MAX_UINT/128/p || r > MAX_UINT/256 || N > MAX_UINT/128/r)\n    throw new Error('scrypt: parameters are too large');\n\n  // Decode strings.\n  if (typeof password === 'string')\n    password = stringToUTF8Bytes(password);\n  if (typeof salt === 'string')\n    salt = stringToUTF8Bytes(salt);\n\n  if (typeof Int32Array !== 'undefined') {\n    //XXX We can use Uint32Array, but Int32Array is faster in Safari.\n    XY = new Int32Array(64*r);\n    V = new Int32Array(32*N*r);\n    tmp = new Int32Array(16);\n  } else {\n    XY = [];\n    V = [];\n    tmp = new Array(16);\n  }\n  B = PBKDF2_HMAC_SHA256_OneIter(password, salt, p*128*r);\n\n  var xi = 0, yi = 32 * r;\n\n  function smixStart(pos) {\n    for (var i = 0; i < 32*r; i++) {\n      var j = pos + i*4;\n      XY[xi+i] = ((B[j+3] & 0xff)<<24) | ((B[j+2] & 0xff)<<16) |\n                 ((B[j+1] & 0xff)<<8)  | ((B[j+0] & 0xff)<<0);\n    }\n  }\n\n  function smixStep1(start, end) {\n    for (var i = start; i < end; i += 2) {\n      blockCopy(V, i*(32*r), XY, xi, 32*r);\n      blockMix(tmp, XY, xi, yi, r);\n\n      blockCopy(V, (i+1)*(32*r), XY, yi, 32*r);\n      blockMix(tmp, XY, yi, xi, r);\n    }\n  }\n\n  function smixStep2(start, end) {\n    for (var i = start; i < end; i += 2) {\n      var j = integerify(XY, xi, r) & (N-1);\n      blockXOR(XY, xi, V, j*(32*r), 32*r);\n      blockMix(tmp, XY, xi, yi, r);\n\n      j = integerify(XY, yi, r) & (N-1);\n      blockXOR(XY, yi, V, j*(32*r), 32*r);\n      blockMix(tmp, XY, yi, xi, r);\n    }\n  }\n\n  function smixFinish(pos) {\n    for (var i = 0; i < 32*r; i++) {\n      var j = XY[xi+i];\n      B[pos + i*4 + 0] = (j>>>0)  & 0xff;\n      B[pos + i*4 + 1] = (j>>>8)  & 0xff;\n      B[pos + i*4 + 2] = (j>>>16) & 0xff;\n      B[pos + i*4 + 3] = (j>>>24) & 0xff;\n    }\n  }\n\n  var nextTick = (typeof setImmediate !== 'undefined') ? setImmediate : setTimeout;\n\n  function interruptedFor(start, end, step, fn, donefn) {\n    (function performStep() {\n      nextTick(function() {\n        fn(start, start + step < end ? start + step : end);\n        start += step;\n        if (start < end)\n          performStep();\n        else\n          donefn();\n        });\n    })();\n  }\n\n  function getResult(enc) {\n      var result = PBKDF2_HMAC_SHA256_OneIter(password, B, dkLen);\n      if (enc === 'base64')\n        return bytesToBase64(result);\n      else if (enc === 'hex')\n        return bytesToHex(result);\n      else if (enc === 'binary')\n        return new Uint8Array(result);\n      else\n        return result;\n  }\n\n  // Blocking variant.\n  function calculateSync() {\n    for (var i = 0; i < p; i++) {\n      smixStart(i*128*r);\n      smixStep1(0, N);\n      smixStep2(0, N);\n      smixFinish(i*128*r);\n    }\n    callback(getResult(encoding));\n  }\n\n  // Async variant.\n  function calculateAsync(i) {\n      smixStart(i*128*r);\n      interruptedFor(0, N, interruptStep*2, smixStep1, function() {\n        interruptedFor(0, N, interruptStep*2, smixStep2, function () {\n          smixFinish(i*128*r);\n          if (i + 1 < p) {\n            nextTick(function() { calculateAsync(i + 1); });\n          } else {\n            callback(getResult(encoding));\n          }\n        });\n      });\n  }\n\n  if (typeof interruptStep === 'function') {\n    // Called as: scrypt(...,      callback, [encoding])\n    //  shifting: scrypt(..., interruptStep,  callback, [encoding])\n    encoding = callback;\n    callback = interruptStep;\n    interruptStep = 1000;\n  }\n\n  if (interruptStep <= 0) {\n    calculateSync();\n  } else {\n    calculateAsync(0);\n  }\n}\n\nif (typeof module !== 'undefined') module.exports = scrypt;\n", "(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n", "// manually implemented lodash functions are better than even:\n// https://github.com/lodash/babel-plugin-lodash\n// additional tiny versions of lodash functions are available in VueScript2\nexport function mapValues(obj, fn, o = {}) {\n    for (const key in obj) {\n        o[key] = fn(obj[key]);\n    }\n    return o;\n}\nexport function mapObject(obj, fn) {\n    return Object.fromEntries(Object.entries(obj).map(fn));\n}\nexport function pick(o, props) {\n    const x = Object.create(null);\n    for (const k of props) {\n        if (has(o, k)) {\n            x[k] = o[k];\n        }\n    }\n    return x;\n}\nexport function pickWhere(o, where) {\n    const x = Object.create(null);\n    for (const k in o) {\n        if (where(o[k])) {\n            x[k] = o[k];\n        }\n    }\n    return x;\n}\nexport function choose(array, indices) {\n    const x = [];\n    for (const idx of indices) {\n        x.push(array[idx]);\n    }\n    return x;\n}\nexport function omit(o, props) {\n    const x = Object.create(null);\n    for (const k in o) {\n        if (!props.includes(k)) {\n            x[k] = o[k];\n        }\n    }\n    return x;\n}\nexport function cloneDeep(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\nfunction isMergeableObject(val) {\n    const nonNullObject = val && typeof val === 'object';\n    return (nonNullObject &&\n        Object.prototype.toString.call(val) !== '[object RegExp]' &&\n        Object.prototype.toString.call(val) !== '[object Date]');\n}\nexport function merge(obj, src) {\n    const res = obj;\n    for (const key in src) {\n        const clone = isMergeableObject(src[key]) ? cloneDeep(src[key]) : undefined;\n        let x;\n        if (clone && isMergeableObject((x = res[key]))) {\n            merge(x, clone);\n            continue;\n        }\n        res[key] = clone || src[key];\n    }\n    return res;\n}\nexport function delay(msec) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, msec);\n    });\n}\nexport function randomBytes(length) {\n    return crypto.getRandomValues(new Uint8Array(length));\n}\nexport function randomHexString(length) {\n    return Array.from(randomBytes(length), byte => (byte % 16).toString(16)).join('');\n}\nexport function normalizeString(str) {\n    return str\n        // [1]. Normalize strings by replacing intial and final punctuation marks,\n        // which typically are used in smart quote substitution, with a standad\n        // character\n        // (reference issue: https://github.com/okTurtles/group-income/issues/2479)\n        .replace(/[\\p{Pf}\\p{Pi}]/gu, \"'\")\n        // [2]. Normalize the string based on 'Canonical equivalence'. eg) 'Am\u00E9lie' !== 'Ame\u0301lie' even when they are visually identical because their unicode sequences are different.\n        //      (reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize#canonical_equivalence_normalization)\n        .normalize('NFC');\n}\nexport function randomIntFromRange(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\nexport function randomFromArray(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n}\nexport function linearScale([d1, d2], [r1, r2]) {\n    // generate a function that takes a value between d1 and d2 and then\n    // returns a linearly-scaled output whose min and max values are r1 and r2 respectively.\n    const [dSpan, rSpan] = [d2 - d1, r2 - r1];\n    return function (value) {\n        if (value <= d1) {\n            return r1;\n        }\n        else if (value >= d2) {\n            return r2;\n        }\n        else {\n            const percent = (value - d1) / dSpan;\n            return r1 + rSpan * percent;\n        }\n    };\n}\nexport function flatten(arr) {\n    let flat = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (Array.isArray(arr[i])) {\n            flat = flat.concat(arr[i]);\n        }\n        else {\n            flat.push(arr[i]);\n        }\n    }\n    return flat;\n}\nexport function zip(...arr) {\n    const zipped = [];\n    let max = 0;\n    arr.forEach((current) => (max = Math.max(max, current.length)));\n    for (const current of arr) {\n        for (let i = 0; i < max; i++) {\n            zipped[i] = zipped[i] || [];\n            zipped[i].push(current[i]);\n        }\n    }\n    return zipped;\n}\nexport function uniq(array) {\n    return Array.from(new Set(array));\n}\nexport function union(...arrays) {\n    return uniq(Array.prototype.concat.apply([], arrays));\n}\nexport function intersection(a1, ...arrays) {\n    return uniq(a1).filter(v1 => arrays.every(v2 => v2.indexOf(v1) >= 0));\n}\nexport function difference(a1, ...arrays) {\n    const a2 = Array.prototype.concat.apply([], arrays);\n    return a1.filter(v => a2.indexOf(v) === -1);\n}\nexport function deepEqualJSONType(a, b) {\n    if (a === b)\n        return true;\n    if (a == null || b == null || typeof (a) !== typeof (b))\n        return false;\n    if (typeof a !== 'object')\n        return a === b;\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length)\n            return false;\n    }\n    else if (![Object.prototype, null].includes(Object.getPrototypeOf(a))) {\n        throw new Error(`not JSON type: ${a}`);\n    }\n    for (const key in a) {\n        if (!deepEqualJSONType(a[key], b[key]))\n            return false;\n    }\n    return true;\n}\nexport function hashableRepresentation(unsorted) {\n    if (!unsorted || typeof unsorted !== 'object') {\n        return unsorted;\n    }\n    if (Array.isArray(unsorted)) {\n        return unsorted.map(v => hashableRepresentation(v));\n    }\n    else {\n        return Object.keys(unsorted).sort().reduce((acc, curKey) => {\n            acc.push([\n                curKey,\n                hashableRepresentation(unsorted[curKey])\n            ]);\n            return acc;\n        }, []);\n    }\n}\n/**\n * Modified version of: https://github.com/component/debounce/blob/master/index.js\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear'\n * that is a function which will clear the timer to prevent previously scheduled executions.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param func function to wrap\n * @param wait timeout in ms (`100`)\n * @param immediate whether to execute at the beginning (`false`)\n * @api public\n */\nexport function debounce(func, wait, immediate) {\n    let timeout, args, context, timestamp, result;\n    if (wait == null)\n        wait = 100;\n    function later() {\n        const last = performance.now() - timestamp;\n        if (last < wait && last >= 0) {\n            timeout = setTimeout(later, wait - last);\n        }\n        else {\n            timeout = undefined;\n            if (!immediate) {\n                result = func.apply(context, args);\n                args = undefined;\n                context = undefined;\n            }\n        }\n    }\n    const debounced = function (...args_) {\n        args = args_;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        context = this;\n        timestamp = performance.now();\n        const callNow = immediate && !timeout;\n        if (!timeout)\n            timeout = setTimeout(later, wait);\n        if (callNow) {\n            result = func.apply(context, args);\n            args = undefined;\n            context = undefined;\n        }\n        return result;\n    };\n    debounced.clear = function () {\n        if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n        }\n    };\n    debounced.flush = function () {\n        if (timeout) {\n            result = func.apply(context, args);\n            args = undefined;\n            context = undefined;\n            clearTimeout(timeout);\n            timeout = undefined;\n        }\n    };\n    return debounced;\n}\nexport function throttle(func, delay) {\n    // reference: https://www.geeksforgeeks.org/javascript-throttling/\n    // Previously called time of the function\n    let prev = 0;\n    return (...args) => {\n        // Current called time of the function\n        const now = new Date().getTime();\n        // If difference is greater than delay call\n        if (now - prev > delay) {\n            prev = now;\n            return func(...args);\n        }\n    };\n}\n/**\n * Gets the value at `path` of `obj`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n */\nexport function get(obj, path, defaultValue) {\n    if (!path.length) {\n        return obj;\n    }\n    else if (obj == null) {\n        return defaultValue;\n    }\n    let result = obj;\n    let i = 0;\n    while (result && i < path.length) {\n        result = result[path[i]];\n        i++;\n    }\n    return result === undefined ? defaultValue : result;\n}\nexport const has = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n", "export const empty = new Uint8Array(0);\nexport function toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nexport function fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nexport function equals(aa, bb) {\n    if (aa === bb) {\n        return true;\n    }\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') {\n        return o;\n    }\n    if (o instanceof ArrayBuffer) {\n        return new Uint8Array(o);\n    }\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nexport function isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nexport function fromString(str) {\n    return new TextEncoder().encode(str);\n}\nexport function toString(b) {\n    return new TextDecoder().decode(b);\n}\n", "/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array) { }\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;\n", "import { coerce } from '../bytes.mjs';\nimport basex from '../base-x.mjs';\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        /* c8 ignore next 3 */\n        if (prefix.codePointAt(0) === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefix.codePointAt(0);\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nexport function or(left, right) {\n    var _a, _b;\n    return new ComposedDecoder(Object.assign(Object.assign({}, ((_a = left.decoders) !== null && _a !== void 0 ? _a : { [left.prefix]: left })), ((_b = right.decoders) !== null && _b !== void 0 ? _b : { [right.prefix]: right })));\n}\nexport class Codec {\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nexport function from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nexport function baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = basex(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => coerce(decode(text))\n    });\n}\nfunction decode(string, alphabet, bitsPerChar, name) {\n    // Build the character lookup table:\n    const codes = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        codes[alphabet[i]] = i;\n    }\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = codes[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\n/**\n * RFC4648 Factory\n */\nexport function rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabet, bitsPerChar, name);\n        }\n    });\n}\n", "/* eslint-disable */\nimport { rfc4648 } from './base.mjs';\nexport const base32 = rfc4648({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n", "import { baseX } from './base.mjs';\nexport const base58btc = baseX({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n", "// File generated by build.js, do not edit\nimport blakejs from 'blakejs';\nimport * as bytes from './bytes.mjs';\nimport { from } from './hasher.mjs';\nconst { blake2b } = blakejs;\nexport const blake2b8 = from({\n    name: 'blake2b-8',\n    code: 0xb201,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 1))\n});\nexport const blake2b16 = from({\n    name: 'blake2b-16',\n    code: 0xb202,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 2))\n});\nexport const blake2b24 = from({\n    name: 'blake2b-24',\n    code: 0xb203,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 3))\n});\nexport const blake2b32 = from({\n    name: 'blake2b-32',\n    code: 0xb204,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 4))\n});\nexport const blake2b40 = from({\n    name: 'blake2b-40',\n    code: 0xb205,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 5))\n});\nexport const blake2b48 = from({\n    name: 'blake2b-48',\n    code: 0xb206,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 6))\n});\nexport const blake2b56 = from({\n    name: 'blake2b-56',\n    code: 0xb207,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 7))\n});\nexport const blake2b64 = from({\n    name: 'blake2b-64',\n    code: 0xb208,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 8))\n});\nexport const blake2b72 = from({\n    name: 'blake2b-72',\n    code: 0xb209,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 9))\n});\nexport const blake2b80 = from({\n    name: 'blake2b-80',\n    code: 0xb20a,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 10))\n});\nexport const blake2b88 = from({\n    name: 'blake2b-88',\n    code: 0xb20b,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 11))\n});\nexport const blake2b96 = from({\n    name: 'blake2b-96',\n    code: 0xb20c,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 12))\n});\nexport const blake2b104 = from({\n    name: 'blake2b-104',\n    code: 0xb20d,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 13))\n});\nexport const blake2b112 = from({\n    name: 'blake2b-112',\n    code: 0xb20e,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 14))\n});\nexport const blake2b120 = from({\n    name: 'blake2b-120',\n    code: 0xb20f,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 15))\n});\nexport const blake2b128 = from({\n    name: 'blake2b-128',\n    code: 0xb210,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 16))\n});\nexport const blake2b136 = from({\n    name: 'blake2b-136',\n    code: 0xb211,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 17))\n});\nexport const blake2b144 = from({\n    name: 'blake2b-144',\n    code: 0xb212,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 18))\n});\nexport const blake2b152 = from({\n    name: 'blake2b-152',\n    code: 0xb213,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 19))\n});\nexport const blake2b160 = from({\n    name: 'blake2b-160',\n    code: 0xb214,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 20))\n});\nexport const blake2b168 = from({\n    name: 'blake2b-168',\n    code: 0xb215,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 21))\n});\nexport const blake2b176 = from({\n    name: 'blake2b-176',\n    code: 0xb216,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 22))\n});\nexport const blake2b184 = from({\n    name: 'blake2b-184',\n    code: 0xb217,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 23))\n});\nexport const blake2b192 = from({\n    name: 'blake2b-192',\n    code: 0xb218,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 24))\n});\nexport const blake2b200 = from({\n    name: 'blake2b-200',\n    code: 0xb219,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 25))\n});\nexport const blake2b208 = from({\n    name: 'blake2b-208',\n    code: 0xb21a,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 26))\n});\nexport const blake2b216 = from({\n    name: 'blake2b-216',\n    code: 0xb21b,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 27))\n});\nexport const blake2b224 = from({\n    name: 'blake2b-224',\n    code: 0xb21c,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 28))\n});\nexport const blake2b232 = from({\n    name: 'blake2b-232',\n    code: 0xb21d,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 29))\n});\nexport const blake2b240 = from({\n    name: 'blake2b-240',\n    code: 0xb21e,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 30))\n});\nexport const blake2b248 = from({\n    name: 'blake2b-248',\n    code: 0xb21f,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 31))\n});\nexport const blake2b256 = from({\n    name: 'blake2b-256',\n    code: 0xb220,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 32))\n});\nexport const blake2b264 = from({\n    name: 'blake2b-264',\n    code: 0xb221,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 33))\n});\nexport const blake2b272 = from({\n    name: 'blake2b-272',\n    code: 0xb222,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 34))\n});\nexport const blake2b280 = from({\n    name: 'blake2b-280',\n    code: 0xb223,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 35))\n});\nexport const blake2b288 = from({\n    name: 'blake2b-288',\n    code: 0xb224,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 36))\n});\nexport const blake2b296 = from({\n    name: 'blake2b-296',\n    code: 0xb225,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 37))\n});\nexport const blake2b304 = from({\n    name: 'blake2b-304',\n    code: 0xb226,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 38))\n});\nexport const blake2b312 = from({\n    name: 'blake2b-312',\n    code: 0xb227,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 39))\n});\nexport const blake2b320 = from({\n    name: 'blake2b-320',\n    code: 0xb228,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 40))\n});\nexport const blake2b328 = from({\n    name: 'blake2b-328',\n    code: 0xb229,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 41))\n});\nexport const blake2b336 = from({\n    name: 'blake2b-336',\n    code: 0xb22a,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 42))\n});\nexport const blake2b344 = from({\n    name: 'blake2b-344',\n    code: 0xb22b,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 43))\n});\nexport const blake2b352 = from({\n    name: 'blake2b-352',\n    code: 0xb22c,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 44))\n});\nexport const blake2b360 = from({\n    name: 'blake2b-360',\n    code: 0xb22d,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 45))\n});\nexport const blake2b368 = from({\n    name: 'blake2b-368',\n    code: 0xb22e,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 46))\n});\nexport const blake2b376 = from({\n    name: 'blake2b-376',\n    code: 0xb22f,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 47))\n});\nexport const blake2b384 = from({\n    name: 'blake2b-384',\n    code: 0xb230,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 48))\n});\nexport const blake2b392 = from({\n    name: 'blake2b-392',\n    code: 0xb231,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 49))\n});\nexport const blake2b400 = from({\n    name: 'blake2b-400',\n    code: 0xb232,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 50))\n});\nexport const blake2b408 = from({\n    name: 'blake2b-408',\n    code: 0xb233,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 51))\n});\nexport const blake2b416 = from({\n    name: 'blake2b-416',\n    code: 0xb234,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 52))\n});\nexport const blake2b424 = from({\n    name: 'blake2b-424',\n    code: 0xb235,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 53))\n});\nexport const blake2b432 = from({\n    name: 'blake2b-432',\n    code: 0xb236,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 54))\n});\nexport const blake2b440 = from({\n    name: 'blake2b-440',\n    code: 0xb237,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 55))\n});\nexport const blake2b448 = from({\n    name: 'blake2b-448',\n    code: 0xb238,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 56))\n});\nexport const blake2b456 = from({\n    name: 'blake2b-456',\n    code: 0xb239,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 57))\n});\nexport const blake2b464 = from({\n    name: 'blake2b-464',\n    code: 0xb23a,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 58))\n});\nexport const blake2b472 = from({\n    name: 'blake2b-472',\n    code: 0xb23b,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 59))\n});\nexport const blake2b480 = from({\n    name: 'blake2b-480',\n    code: 0xb23c,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 60))\n});\nexport const blake2b488 = from({\n    name: 'blake2b-488',\n    code: 0xb23d,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 61))\n});\nexport const blake2b496 = from({\n    name: 'blake2b-496',\n    code: 0xb23e,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 62))\n});\nexport const blake2b504 = from({\n    name: 'blake2b-504',\n    code: 0xb23f,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 63))\n});\nexport const blake2b512 = from({\n    name: 'blake2b-512',\n    code: 0xb240,\n    encode: (input) => bytes.coerce(blake2b(input, undefined, 64))\n});\n", "/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;\n", "/* eslint-disable */\nimport varint from './vendor/varint.mjs';\nexport function decode(data, offset = 0) {\n    const code = varint.decode(data, offset);\n    return [code, varint.decode.bytes];\n}\nexport function encodeTo(int, target, offset = 0) {\n    varint.encode(int, target, offset);\n    return target;\n}\nexport function encodingLength(int) {\n    return varint.encodingLength(int);\n}\n", "/* eslint-disable */\nimport { coerce, equals as equalBytes } from '../bytes.mjs';\nimport * as varint from '../varint.mjs';\n/**\n * Creates a multihash digest.\n */\nexport function create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = varint.encodingLength(code);\n    const digestOffset = sizeOffset + varint.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    varint.encodeTo(code, bytes, 0);\n    varint.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nexport function decode(multihash) {\n    const bytes = coerce(multihash);\n    const [code, sizeOffset] = varint.decode(bytes);\n    const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            equalBytes(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nexport class Digest {\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n", "/* eslint-disable */\nimport * as Digest from './hashes/digest.mjs';\nexport function from({ name, code, encode }) {\n    return new Hasher(name, code, encode);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nexport class Hasher {\n    constructor(name, code, encode) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n    }\n    digest(input) {\n        if (input instanceof Uint8Array || input instanceof ReadableStream) {\n            const result = this.encode(input);\n            return result instanceof Uint8Array\n                ? Digest.create(this.code, result)\n                /* c8 ignore next 1 */\n                : result.then(digest => Digest.create(this.code, digest));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport blakejs from 'blakejs';\nimport * as bytes from './bytes.mjs';\nimport { from } from './hasher.mjs';\nconst { blake2b, blake2bInit, blake2bUpdate, blake2bFinal } = blakejs;\nexport const blake2b256stream = from({\n    name: 'blake2b-256',\n    code: 0xb220,\n    encode: (input) => __awaiter(void 0, void 0, void 0, function* () {\n        if (input instanceof ReadableStream) {\n            const ctx = blake2bInit(32);\n            const reader = input.getReader();\n            for (;;) {\n                const result = yield reader.read();\n                if (result.done)\n                    break;\n                blake2bUpdate(ctx, bytes.coerce(result.value));\n            }\n            return blake2bFinal(ctx);\n        }\n        else {\n            return bytes.coerce(blake2b(input, undefined, 32));\n        }\n    })\n});\n", "var _a;\nimport { base32 } from './bases/base32.mjs';\nimport { base58btc } from './bases/base58.mjs';\nimport { coerce } from './bytes.mjs';\nimport * as Digest from './hashes/digest.mjs';\nimport * as varint from './varint.mjs';\n// This way TS will also expose all the types from module\nexport * from './link/interface.mjs';\nexport function format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base !== null && base !== void 0 ? base : base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base !== null && base !== void 0 ? base : base32.encoder));\n    }\n}\nexport function toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nexport function fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nexport class CID {\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this[_a] = 'CID';\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = Digest.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            Digest.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    // Legacy\n    [(_a = Symbol.toStringTag, Symbol.for('nodejs.util.inspect.custom'))]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes !== null && bytes !== void 0 ? bytes : encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = Digest.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = varint.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base !== null && base !== void 0 ? base : base58btc;\n            return [\n                base58btc.prefix,\n                decoder.decode(`${base58btc.prefix}${source}`)\n            ];\n        }\n        case base58btc.prefix: {\n            const decoder = base !== null && base !== void 0 ? base : base58btc;\n            return [base58btc.prefix, decoder.decode(source)];\n        }\n        case base32.prefix: {\n            const decoder = base !== null && base !== void 0 ? base : base32;\n            return [base32.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = varint.encodingLength(version);\n    const hashOffset = codeOffset + varint.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    varint.encodeTo(version, bytes, 0);\n    varint.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n", "import { base58btc, blake2b256 } from '@chelonia/multiformats';\nimport scrypt from 'scrypt-async';\nimport nacl from 'tweetnacl';\nconst bufToStr = (() => {\n    const textDecoder = new TextDecoder();\n    return (buf) => {\n        return textDecoder.decode(buf);\n    };\n})();\nconst strToBuf = (() => {\n    const textEncoder = new TextEncoder();\n    return (str) => {\n        return textEncoder.encode(str);\n    };\n})();\nconst blake32Hash = (data) => {\n    const uint8array = typeof data === 'string' ? strToBuf(data) : data;\n    const digest = blake2b256.digest(uint8array);\n    // While `digest.digest` is only 32 bytes long in this case,\n    // `digest.bytes` is 36 bytes because it includes a multiformat prefix.\n    return base58btc.encode(digest.bytes);\n};\nconst b64ToBuf = (data) => new Uint8Array(atob(data)\n    .split('')\n    .map((b) => b.charCodeAt(0)));\n// ENULL and SNULL are 'null' algorithms for asymmetric encryption and\n// signatures, respectively. They are useful for development and testing because\n// their values can easily be inspected by hand but they offer ABSOLUTELY NO\n// PROTECTION and should *NEVER* be used in production.\nexport const ENULL = 'eNULL';\nexport const SNULL = 'sNULL';\nexport const EDWARDS25519SHA512BATCH = 'edwards25519sha512batch';\nexport const CURVE25519XSALSA20POLY1305 = 'curve25519xsalsa20poly1305';\nexport const XSALSA20POLY1305 = 'xsalsa20poly1305';\n// 32 bytes of keying material, used for external keys (such as files)\nexport const EXTERNALKM32 = 'externalkm32';\nif (process.env.NODE_ENV === 'production' && process.env.ENABLE_UNSAFE_NULL_CRYPTO === 'true') {\n    throw new Error('ENABLE_UNSAFE_NULL_CRYPTO cannot be enabled in production mode');\n}\nconst bytesOrObjectToB64 = (ary) => {\n    if (!(ary instanceof Uint8Array)) {\n        throw TypeError('Unsupported type');\n    }\n    return btoa(Array.from(ary)\n        .map((c) => String.fromCharCode(c))\n        .join(''));\n};\nexport const keygen = (type) => {\n    if (process.env.ENABLE_UNSAFE_NULL_CRYPTO === 'true' && (type === ENULL || type === SNULL)) {\n        const res = {\n            type,\n            publicKey: bytesOrObjectToB64(nacl.randomBytes(18))\n        };\n        Object.defineProperty(res, 'secretKey', { value: res.publicKey });\n        return res;\n    }\n    if (type === EDWARDS25519SHA512BATCH) {\n        const key = nacl.sign.keyPair();\n        const res = {\n            type,\n            publicKey: key.publicKey\n        };\n        // prevents 'secretKey' from being enumerated or appearing in JSON\n        Object.defineProperty(res, 'secretKey', { value: key.secretKey });\n        return res;\n    }\n    else if (type === CURVE25519XSALSA20POLY1305) {\n        const key = nacl.box.keyPair();\n        const res = {\n            type,\n            publicKey: key.publicKey\n        };\n        Object.defineProperty(res, 'secretKey', { value: key.secretKey });\n        return res;\n    }\n    else if (type === XSALSA20POLY1305) {\n        const res = {\n            type\n        };\n        Object.defineProperty(res, 'secretKey', { value: nacl.randomBytes(nacl.secretbox.keyLength) });\n        return res;\n    }\n    else if (type === EXTERNALKM32) {\n        const res = {\n            type\n        };\n        Object.defineProperty(res, 'secretKey', { value: nacl.randomBytes(32) });\n        return res;\n    }\n    throw new Error('Unsupported key type');\n};\nexport const generateSalt = () => {\n    return bytesOrObjectToB64(nacl.randomBytes(18));\n};\nexport const deriveKeyFromPassword = (type, password, salt) => {\n    if (process.env.ENABLE_UNSAFE_NULL_CRYPTO === 'true' && (type === ENULL || type === SNULL)) {\n        const v = blake32Hash(blake32Hash(salt) + blake32Hash(password));\n        return Promise.resolve({\n            type,\n            secretKey: v,\n            publicKey: v\n        });\n    }\n    if (![EDWARDS25519SHA512BATCH, CURVE25519XSALSA20POLY1305, XSALSA20POLY1305].includes(type)) {\n        return Promise.reject(new Error('Unsupported type'));\n    }\n    return new Promise((resolve) => {\n        scrypt(password, salt, {\n            N: 16384,\n            r: 8,\n            p: 1,\n            dkLen: type === EDWARDS25519SHA512BATCH ? nacl.sign.seedLength : type === CURVE25519XSALSA20POLY1305 ? nacl.box.secretKeyLength : type === XSALSA20POLY1305 ? nacl.secretbox.keyLength : 0,\n            encoding: 'binary'\n        }, (derivedKey) => {\n            const buffer = new Uint8Array(derivedKey);\n            if (type === EDWARDS25519SHA512BATCH) {\n                const key = nacl.sign.keyPair.fromSeed(buffer);\n                resolve({\n                    type,\n                    secretKey: key.secretKey,\n                    publicKey: key.publicKey\n                });\n            }\n            else if (type === CURVE25519XSALSA20POLY1305) {\n                const key = nacl.box.keyPair.fromSecretKey(buffer);\n                resolve({\n                    type,\n                    secretKey: key.secretKey,\n                    publicKey: key.publicKey\n                });\n            }\n            else if (type === XSALSA20POLY1305) {\n                resolve({\n                    type,\n                    secretKey: buffer\n                });\n            }\n        });\n    });\n};\n// Format: [type, publicKey, secretKey]: [string, string, null] | [string, null, string]\n// Using an array instead of an object ensures that the object is serialized in order since the JSON specification does not define the order for object keys\n// and therefore different it could vary across implementations\nexport const serializeKey = (key, saveSecretKey) => {\n    if (process.env.ENABLE_UNSAFE_NULL_CRYPTO === 'true' && (key.type === ENULL || key.type === SNULL)) {\n        return JSON.stringify([\n            key.type,\n            saveSecretKey ? null : key.publicKey,\n            saveSecretKey ? key.secretKey : null\n        ], undefined, 0);\n    }\n    if (key.type === EDWARDS25519SHA512BATCH || key.type === CURVE25519XSALSA20POLY1305) {\n        if (!saveSecretKey) {\n            if (!key.publicKey) {\n                throw new Error('Unsupported operation: no public key to export');\n            }\n            return JSON.stringify([\n                key.type,\n                bytesOrObjectToB64(key.publicKey),\n                null\n            ], undefined, 0);\n        }\n        if (!key.secretKey) {\n            throw new Error('Unsupported operation: no secret key to export');\n        }\n        return JSON.stringify([\n            key.type,\n            null,\n            bytesOrObjectToB64(key.secretKey)\n        ], undefined, 0);\n    }\n    else if (key.type === XSALSA20POLY1305) {\n        if (!saveSecretKey) {\n            throw new Error('Unsupported operation: no public key to export');\n        }\n        if (!key.secretKey) {\n            throw new Error('Unsupported operation: no secret key to export');\n        }\n        return JSON.stringify([\n            key.type,\n            null,\n            bytesOrObjectToB64(key.secretKey)\n        ], undefined, 0);\n    }\n    throw new Error('Unsupported key type');\n};\nexport const deserializeKey = (data) => {\n    const keyData = JSON.parse(data);\n    if (!keyData || keyData.length !== 3) {\n        throw new Error('Invalid key object');\n    }\n    if (process.env.ENABLE_UNSAFE_NULL_CRYPTO === 'true' && (keyData[0] === ENULL || keyData[0] === SNULL)) {\n        const res = {\n            type: keyData[0]\n        };\n        if (keyData[2]) {\n            Object.defineProperty(res, 'secretKey', { value: keyData[2] });\n            res.publicKey = keyData[2];\n        }\n        else {\n            res.publicKey = keyData[1];\n        }\n        return res;\n    }\n    if (keyData[0] === EDWARDS25519SHA512BATCH) {\n        if (keyData[2]) {\n            const key = nacl.sign.keyPair.fromSecretKey(b64ToBuf(keyData[2]));\n            const res = {\n                type: keyData[0],\n                publicKey: key.publicKey\n            };\n            Object.defineProperty(res, 'secretKey', { value: key.secretKey });\n            return res;\n        }\n        else if (keyData[1]) {\n            return {\n                type: keyData[0],\n                publicKey: new Uint8Array(b64ToBuf(keyData[1]))\n            };\n        }\n        throw new Error('Missing secret or public key');\n    }\n    else if (keyData[0] === CURVE25519XSALSA20POLY1305) {\n        if (keyData[2]) {\n            const key = nacl.box.keyPair.fromSecretKey(b64ToBuf(keyData[2]));\n            const res = {\n                type: keyData[0],\n                publicKey: key.publicKey\n            };\n            Object.defineProperty(res, 'secretKey', { value: key.secretKey });\n            return res;\n        }\n        else if (keyData[1]) {\n            return {\n                type: keyData[0],\n                publicKey: new Uint8Array(b64ToBuf(keyData[1]))\n            };\n        }\n        throw new Error('Missing secret or public key');\n    }\n    else if (keyData[0] === XSALSA20POLY1305) {\n        if (!keyData[2]) {\n            throw new Error('Secret key missing');\n        }\n        const res = {\n            type: keyData[0]\n        };\n        Object.defineProperty(res, 'secretKey', { value: new Uint8Array(b64ToBuf(keyData[2])) });\n        return res;\n    }\n    throw new Error('Unsupported key type');\n};\nexport const keygenOfSameType = (inKey) => {\n    const key = typeof inKey === 'string' ? deserializeKey(inKey) : inKey;\n    return keygen(key.type);\n};\nexport const keyId = (inKey) => {\n    const key = typeof inKey === 'string' ? deserializeKey(inKey) : inKey;\n    const serializedKey = serializeKey(key, !key.publicKey);\n    return blake32Hash(serializedKey);\n};\nexport const sign = (inKey, data) => {\n    const key = typeof inKey === 'string' ? deserializeKey(inKey) : inKey;\n    if (process.env.ENABLE_UNSAFE_NULL_CRYPTO === 'true' && key.type === SNULL) {\n        if (!key.secretKey) {\n            throw new Error('Secret key missing');\n        }\n        return key.secretKey + ';' + blake32Hash(data);\n    }\n    if (key.type !== EDWARDS25519SHA512BATCH) {\n        throw new Error('Unsupported algorithm');\n    }\n    if (!key.secretKey) {\n        throw new Error('Secret key missing');\n    }\n    const messageUint8 = strToBuf(data);\n    const signature = nacl.sign.detached(messageUint8, key.secretKey);\n    const base64Signature = bytesOrObjectToB64(signature);\n    return base64Signature;\n};\nexport const verifySignature = (inKey, data, signature) => {\n    const key = typeof inKey === 'string' ? deserializeKey(inKey) : inKey;\n    if (process.env.ENABLE_UNSAFE_NULL_CRYPTO === 'true' && key.type === SNULL) {\n        if (!key.publicKey) {\n            throw new Error('Public key missing');\n        }\n        if ((key.publicKey + ';' + blake32Hash(data)) !== signature) {\n            throw new Error('Invalid signature');\n        }\n        return;\n    }\n    if (key.type !== EDWARDS25519SHA512BATCH) {\n        throw new Error('Unsupported algorithm');\n    }\n    if (!key.publicKey) {\n        throw new Error('Public key missing');\n    }\n    const decodedSignature = b64ToBuf(signature);\n    const messageUint8 = strToBuf(data);\n    const result = nacl.sign.detached.verify(messageUint8, decodedSignature, key.publicKey);\n    if (!result) {\n        throw new Error('Invalid signature');\n    }\n};\n/**\n * @param inKey - Encryption key to use\n * @param data - Data to encrypt\n * @param ad - Additional data (the AD in AEAD), used for validation\n */\nexport const encrypt = (inKey, data, ad) => {\n    const key = typeof inKey === 'string' ? deserializeKey(inKey) : inKey;\n    if (process.env.ENABLE_UNSAFE_NULL_CRYPTO === 'true' && key.type === ENULL) {\n        if (!key.publicKey) {\n            throw new Error('Public key missing');\n        }\n        return `${key.publicKey};${data};${ad !== null && ad !== void 0 ? ad : ''}`;\n    }\n    if (key.type === XSALSA20POLY1305) {\n        if (!key.secretKey) {\n            throw new Error('Secret key missing');\n        }\n        const nonce = nacl.randomBytes(nacl.secretbox.nonceLength);\n        let encryptionNonce;\n        if (ad) {\n            encryptionNonce = new Uint8Array(nonce);\n            const adHash = nacl.hash(strToBuf(ad));\n            const len = Math.min(adHash.length, nonce.length);\n            for (let i = 0; i < len; i++) {\n                encryptionNonce[i] ^= adHash[i];\n            }\n        }\n        else {\n            encryptionNonce = nonce;\n        }\n        const messageUint8 = strToBuf(data);\n        const box = nacl.secretbox(messageUint8, encryptionNonce, key.secretKey);\n        const fullMessage = new Uint8Array(nonce.length + box.length);\n        fullMessage.set(nonce);\n        fullMessage.set(box, nonce.length);\n        const base64FullMessage = bytesOrObjectToB64(fullMessage);\n        return base64FullMessage;\n    }\n    else if (key.type === CURVE25519XSALSA20POLY1305) {\n        if (!key.publicKey) {\n            throw new Error('Public key missing');\n        }\n        const nonce = nacl.randomBytes(nacl.box.nonceLength);\n        let encryptionNonce;\n        if (ad) {\n            encryptionNonce = new Uint8Array(nonce);\n            const adHash = nacl.hash(strToBuf(ad));\n            const len = Math.min(adHash.length, nonce.length);\n            for (let i = 0; i < len; i++) {\n                encryptionNonce[i] ^= adHash[i];\n            }\n        }\n        else {\n            encryptionNonce = nonce;\n        }\n        const messageUint8 = strToBuf(data);\n        const ephemeralKey = nacl.box.keyPair();\n        const box = nacl.box(messageUint8, encryptionNonce, key.publicKey, ephemeralKey.secretKey);\n        // Attempt to discard the data in memory for ephemeralKey.secretKey\n        crypto.getRandomValues(ephemeralKey.secretKey);\n        ephemeralKey.secretKey.fill(0);\n        const fullMessage = new Uint8Array(nacl.box.publicKeyLength + nonce.length + box.length);\n        fullMessage.set(ephemeralKey.publicKey);\n        fullMessage.set(nonce, nacl.box.publicKeyLength);\n        fullMessage.set(box, nacl.box.publicKeyLength + nonce.length);\n        const base64FullMessage = bytesOrObjectToB64(fullMessage);\n        return base64FullMessage;\n    }\n    throw new Error('Unsupported algorithm');\n};\nexport const decrypt = (inKey, data, ad) => {\n    const key = typeof inKey === 'string' ? deserializeKey(inKey) : inKey;\n    if (process.env.ENABLE_UNSAFE_NULL_CRYPTO === 'true' && key.type === ENULL) {\n        if (!key.secretKey) {\n            throw new Error('Secret key missing');\n        }\n        if (!data.startsWith(key.secretKey + ';') || !data.endsWith(';' + (ad !== null && ad !== void 0 ? ad : ''))) {\n            throw new Error('Additional data mismatch');\n        }\n        return data.slice(String(key.secretKey).length + 1, data.length - 1 - (ad !== null && ad !== void 0 ? ad : '').length);\n    }\n    if (key.type === XSALSA20POLY1305) {\n        if (!key.secretKey) {\n            throw new Error('Secret key missing');\n        }\n        const messageWithNonceAsUint8Array = b64ToBuf(data);\n        const nonce = messageWithNonceAsUint8Array.slice(0, nacl.secretbox.nonceLength);\n        const message = messageWithNonceAsUint8Array.slice(nacl.secretbox.nonceLength, messageWithNonceAsUint8Array.length);\n        if (ad) {\n            const adHash = nacl.hash(strToBuf(ad));\n            const len = Math.min(adHash.length, nonce.length);\n            for (let i = 0; i < len; i++) {\n                nonce[i] ^= adHash[i];\n            }\n        }\n        const decrypted = nacl.secretbox.open(message, nonce, key.secretKey);\n        if (!decrypted) {\n            throw new Error('Could not decrypt message');\n        }\n        return bufToStr(decrypted);\n    }\n    else if (key.type === CURVE25519XSALSA20POLY1305) {\n        if (!key.secretKey) {\n            throw new Error('Secret key missing');\n        }\n        const messageWithNonceAsUint8Array = b64ToBuf(data);\n        const ephemeralPublicKey = messageWithNonceAsUint8Array.slice(0, nacl.box.publicKeyLength);\n        const nonce = messageWithNonceAsUint8Array.slice(nacl.box.publicKeyLength, nacl.box.publicKeyLength + nacl.box.nonceLength);\n        const message = messageWithNonceAsUint8Array.slice(nacl.box.publicKeyLength + nacl.box.nonceLength);\n        if (ad) {\n            const adHash = nacl.hash(strToBuf(ad));\n            const len = Math.min(adHash.length, nonce.length);\n            for (let i = 0; i < len; i++) {\n                nonce[i] ^= adHash[i];\n            }\n        }\n        const decrypted = nacl.box.open(message, nonce, ephemeralPublicKey, key.secretKey);\n        if (!decrypted) {\n            throw new Error('Could not decrypt message');\n        }\n        return bufToStr(decrypted);\n    }\n    throw new Error('Unsupported algorithm');\n};\n", "import { base58btc } from '@chelonia/multiformats/bases/base58';\nimport { blake2b256 } from '@chelonia/multiformats/blake2b';\nimport { blake2b256stream } from '@chelonia/multiformats/blake2bstream';\nimport { CID } from '@chelonia/multiformats/cid';\n// Use 'buffer' instead of 'node:buffer' to polyfill in the browser\nimport { Buffer } from 'buffer';\n// Values from https://github.com/multiformats/multicodec/blob/master/table.csv\nexport const multicodes = {\n    RAW: 0x00,\n    JSON: 0x0200,\n    SHELTER_CONTRACT_MANIFEST: 0x511e00,\n    SHELTER_CONTRACT_TEXT: 0x511e01,\n    SHELTER_CONTRACT_DATA: 0x511e02,\n    SHELTER_FILE_MANIFEST: 0x511e03,\n    SHELTER_FILE_CHUNK: 0x511e04\n};\nexport const parseCID = (cid) => {\n    if (!cid || cid.length < 52 || cid.length > 64) {\n        throw new RangeError('CID length too short or too long');\n    }\n    const parsed = CID.parse(cid, base58btc);\n    if (parsed.version !== 1 ||\n        parsed.multihash.code !== blake2b256.code ||\n        !Object.values(multicodes).includes(parsed.code)) {\n        throw new Error('Invalid CID');\n    }\n    return parsed;\n};\nexport const maybeParseCID = (cid) => {\n    try {\n        return parseCID(cid);\n    }\n    catch {\n        // Ignore errors if the CID couldn't be parsed\n        return null;\n    }\n};\nexport async function createCIDfromStream(data, multicode = multicodes.RAW) {\n    const uint8array = typeof data === 'string' ? new TextEncoder().encode(data) : data;\n    const digest = await blake2b256stream.digest(uint8array);\n    return CID.create(1, multicode, digest).toString(base58btc);\n}\n// TODO: implement a streaming hashing function for large files.\n// Note: in fact this returns a serialized CID, not a CID object.\nexport function createCID(data, multicode = multicodes.RAW) {\n    const uint8array = typeof data === 'string' ? new TextEncoder().encode(data) : data;\n    const digest = blake2b256.digest(uint8array);\n    return CID.create(1, multicode, digest).toString(base58btc);\n}\nexport function blake32Hash(data) {\n    const uint8array = typeof data === 'string' ? new TextEncoder().encode(data) : data;\n    const digest = blake2b256.digest(uint8array);\n    // While `digest.digest` is only 32 bytes long in this case,\n    // `digest.bytes` is 36 bytes because it includes a multiformat prefix.\n    return base58btc.encode(digest.bytes);\n}\n// NOTE: to preserve consistency across browser and node, we use the Buffer\n//       class. We could use btoa and atob in web browsers (functions that\n//       are unavailable on Node.js), but they do not support Unicode,\n//       and you have to jump through some hoops to get it to work:\n//       https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/btoa#Unicode_strings\n//       These hoops might result in inconsistencies between Node.js and the frontend.\nexport const b64ToBuf = (b64) => Buffer.from(b64, 'base64');\nexport const b64ToStr = (b64) => b64ToBuf(b64).toString('utf8');\nexport const bufToB64 = (buf) => Buffer.from(buf).toString('base64');\nexport const strToBuf = (str) => Buffer.from(str, 'utf8');\nexport const strToB64 = (str) => strToBuf(str).toString('base64');\nexport const bytesToB64 = (ary) => Buffer.from(ary).toString('base64');\n// Generate an UUID from a `PushSubscription'\nexport const getSubscriptionId = async (subscriptionInfo) => {\n    const textEncoder = new TextEncoder();\n    // <https://w3c.github.io/push-api/#pushsubscription-interface>\n    const endpoint = textEncoder.encode(subscriptionInfo.endpoint);\n    // <https://w3c.github.io/push-api/#pushencryptionkeyname-enumeration>\n    const p256dh = textEncoder.encode(subscriptionInfo.keys.p256dh);\n    const auth = textEncoder.encode(subscriptionInfo.keys.auth);\n    const canonicalForm = new ArrayBuffer(8 +\n        (4 + endpoint.byteLength) + (2 + p256dh.byteLength) +\n        (2 + auth.byteLength));\n    const canonicalFormU8 = new Uint8Array(canonicalForm);\n    const canonicalFormDV = new DataView(canonicalForm);\n    let offset = 0;\n    canonicalFormDV.setFloat64(offset, subscriptionInfo.expirationTime == null\n        ? NaN\n        : subscriptionInfo.expirationTime, false);\n    offset += 8;\n    canonicalFormDV.setUint32(offset, endpoint.byteLength, false);\n    offset += 4;\n    canonicalFormU8.set(endpoint, offset);\n    offset += endpoint.byteLength;\n    canonicalFormDV.setUint16(offset, p256dh.byteLength, false);\n    offset += 2;\n    canonicalFormU8.set(p256dh, offset);\n    offset += p256dh.byteLength;\n    canonicalFormDV.setUint16(offset, auth.byteLength, false);\n    offset += 2;\n    canonicalFormU8.set(auth, offset);\n    const digest = await crypto.subtle.digest('SHA-384', canonicalForm);\n    const id = Buffer.from(digest.slice(0, 16));\n    id[6] = 0x80 | (id[6] & 0x0F);\n    id[8] = 0x80 | (id[8] & 0x3F);\n    return [\n        id.slice(0, 4),\n        id.slice(4, 6),\n        id.slice(6, 8),\n        id.slice(8, 10),\n        id.slice(10, 16)\n    ].map((p) => p.toString('hex')).join('-');\n};\n", "import { deserializeKey, keyId, serializeKey, sign, verifySignature } from '@chelonia/crypto';\nimport sbp from '@sbp/sbp';\nimport { has } from 'turtledash';\nimport { ChelErrorSignatureError, ChelErrorSignatureKeyNotFound, ChelErrorSignatureKeyUnauthorized } from './errors.mjs';\nimport { blake32Hash } from './functions.mjs';\nconst rootStateFn = () => sbp('chelonia/rootState');\n// `proto` & `wrapper` are utilities for `isSignedData`\nconst proto = Object.create(null, {\n    _isSignedData: {\n        value: true\n    }\n});\nconst wrapper = (o) => {\n    return Object.setPrototypeOf(o, proto);\n};\n// `isSignedData` will return true for objects created by the various\n// `signed*Data` functions. It's meant to implement functionality equivalent\n// to `o instanceof SignedData`\nexport const isSignedData = (o) => {\n    return !!o && !!Object.getPrototypeOf(o)?._isSignedData;\n};\n// TODO: Check for permissions and allowedActions; this requires passing some\n// additional context\nconst signData = function (stateOrContractID, sKeyId, data, extraFields, additionalKeys, additionalData) {\n    const state = typeof stateOrContractID === 'string' ? rootStateFn()[stateOrContractID] : stateOrContractID;\n    if (!additionalData) {\n        throw new ChelErrorSignatureError('Signature additional data must be provided');\n    }\n    // Has the key been revoked? If so, attempt to find an authorized key by the same name\n    const designatedKey = state?._vm?.authorizedKeys?.[sKeyId];\n    if (!designatedKey?.purpose.includes('sig')) {\n        throw new ChelErrorSignatureKeyNotFound(`Signing key ID ${sKeyId} is missing or is missing signing purpose`);\n    }\n    if (designatedKey._notAfterHeight != null) {\n        const name = state._vm.authorizedKeys[sKeyId].name;\n        const newKeyId = Object.values(state._vm?.authorizedKeys).find((v) => v._notAfterHeight == null && v.name === name && v.purpose.includes('sig'))?.id;\n        if (!newKeyId) {\n            throw new ChelErrorSignatureKeyNotFound(`Signing key ID ${sKeyId} has been revoked and no new key exists by the same name (${name})`);\n        }\n        sKeyId = newKeyId;\n    }\n    const key = additionalKeys[sKeyId];\n    if (!key) {\n        throw new ChelErrorSignatureKeyNotFound(`Missing signing key ${sKeyId}`);\n    }\n    const deserializedKey = typeof key === 'string' ? deserializeKey(key) : key;\n    const serializedData = JSON.stringify(data, (_, v) => {\n        if (v && has(v, 'serialize') && typeof v.serialize === 'function') {\n            if (v.serialize.length === 1) {\n                return v.serialize(additionalData);\n            }\n            else {\n                return v.serialize();\n            }\n        }\n        return v;\n    });\n    const payloadToSign = blake32Hash(`${blake32Hash(additionalData)}${blake32Hash(serializedData)}`);\n    return {\n        ...extraFields,\n        _signedData: [\n            serializedData,\n            keyId(deserializedKey),\n            sign(deserializedKey, payloadToSign)\n        ]\n    };\n};\n// TODO: Check for permissions and allowedActions; this requires passing the\n// entire SPMessage\nconst verifySignatureData = function (state, height, data, additionalData) {\n    if (!state) {\n        throw new ChelErrorSignatureError('Missing contract state');\n    }\n    if (!isRawSignedData(data)) {\n        throw new ChelErrorSignatureError('Invalid message format');\n    }\n    if (!Number.isSafeInteger(height) || height < 0) {\n        throw new ChelErrorSignatureError(`Height ${height} is invalid or out of range`);\n    }\n    const [serializedMessage, sKeyId, signature] = data._signedData;\n    const designatedKey = state._vm?.authorizedKeys?.[sKeyId];\n    if (!designatedKey || (height > designatedKey._notAfterHeight) || (height < designatedKey._notBeforeHeight) || !designatedKey.purpose.includes('sig')) {\n        // These errors (ChelErrorSignatureKeyUnauthorized) are serious and\n        // indicate a bug. Make them fatal when running integration tests\n        // (otherwise, they get swallowed and shown as a notification)\n        if (process.env.CI) {\n            console.error(`Key ${sKeyId} is unauthorized or expired for the current contract`, { designatedKey, height, state: JSON.parse(JSON.stringify(sbp('state/vuex/state'))) });\n            // An unhandled promise rejection will cause Cypress to fail\n            Promise.reject(new ChelErrorSignatureKeyUnauthorized(`Key ${sKeyId} is unauthorized or expired for the current contract`));\n        }\n        throw new ChelErrorSignatureKeyUnauthorized(`Key ${sKeyId} is unauthorized or expired for the current contract`);\n    }\n    // TODO\n    const deserializedKey = designatedKey.data;\n    const payloadToSign = blake32Hash(`${blake32Hash(additionalData)}${blake32Hash(serializedMessage)}`);\n    try {\n        verifySignature(deserializedKey, payloadToSign, signature);\n        const message = JSON.parse(serializedMessage);\n        return [sKeyId, message];\n    }\n    catch (e) {\n        throw new ChelErrorSignatureError(e?.message || e);\n    }\n};\nexport const signedOutgoingData = (stateOrContractID, sKeyId, data, additionalKeys) => {\n    if (!stateOrContractID || data === undefined || !sKeyId)\n        throw new TypeError('Invalid invocation');\n    if (!additionalKeys) {\n        additionalKeys = rootStateFn().secretKeys;\n    }\n    const extraFields = Object.create(null);\n    const boundStringValueFn = signData.bind(null, stateOrContractID, sKeyId, data, extraFields, additionalKeys);\n    const serializefn = (additionalData) => boundStringValueFn(additionalData || '');\n    return wrapper({\n        get signingKeyId() {\n            return sKeyId;\n        },\n        get serialize() {\n            return serializefn;\n        },\n        get toString() {\n            return (additionalData) => JSON.stringify(this.serialize(additionalData));\n        },\n        get valueOf() {\n            return () => data;\n        },\n        get recreate() {\n            return (data) => signedOutgoingData(stateOrContractID, sKeyId, data, additionalKeys);\n        },\n        get get() {\n            return (k) => extraFields[k];\n        },\n        get set() {\n            return (k, v) => {\n                extraFields[k] = v;\n            };\n        }\n    });\n};\n// Used for OP_CONTRACT as a state does not yet exist\nexport const signedOutgoingDataWithRawKey = (key, data) => {\n    const sKeyId = keyId(key);\n    const state = {\n        _vm: {\n            authorizedKeys: {\n                [sKeyId]: {\n                    purpose: ['sig'],\n                    data: serializeKey(key, false),\n                    _notBeforeHeight: 0,\n                    _notAfterHeight: undefined\n                }\n            }\n        }\n    };\n    const extraFields = Object.create(null);\n    const boundStringValueFn = signData.bind(null, state, sKeyId, data, extraFields, { [sKeyId]: key });\n    const serializefn = (additionalData) => boundStringValueFn(additionalData || '');\n    return wrapper({\n        get signingKeyId() {\n            return sKeyId;\n        },\n        get serialize() {\n            return serializefn;\n        },\n        get toString() {\n            return (additionalData) => JSON.stringify(this.serialize(additionalData));\n        },\n        get valueOf() {\n            return () => data;\n        },\n        get recreate() {\n            return (data) => signedOutgoingDataWithRawKey(key, data);\n        },\n        get get() {\n            return (k) => extraFields[k];\n        },\n        get set() {\n            return (k, v) => {\n                extraFields[k] = v;\n            };\n        }\n    });\n};\nexport const signedIncomingData = (contractID, state, data, height, additionalData, mapperFn) => {\n    const stringValueFn = () => data;\n    let verifySignedValue;\n    const verifySignedValueFn = () => {\n        if (verifySignedValue) {\n            return verifySignedValue[1];\n        }\n        verifySignedValue = verifySignatureData(state || rootStateFn()[contractID], height, data, additionalData);\n        if (mapperFn)\n            verifySignedValue[1] = mapperFn(verifySignedValue[1]);\n        return verifySignedValue[1];\n    };\n    return wrapper({\n        get signingKeyId() {\n            if (verifySignedValue)\n                return verifySignedValue[0];\n            return signedDataKeyId(data);\n        },\n        get serialize() {\n            return stringValueFn;\n        },\n        get context() {\n            return [contractID, data, height, additionalData];\n        },\n        get toString() {\n            return () => JSON.stringify(this.serialize());\n        },\n        get valueOf() {\n            return verifySignedValueFn;\n        },\n        get toJSON() {\n            return this.serialize;\n        },\n        get get() {\n            return (k) => k !== '_signedData' ? data[k] : undefined;\n        }\n    });\n};\nexport const signedDataKeyId = (data) => {\n    if (!isRawSignedData(data)) {\n        throw new ChelErrorSignatureError('Invalid message format');\n    }\n    return data._signedData[1];\n};\nexport const isRawSignedData = (data) => {\n    if (!data || typeof data !== 'object' || !has(data, '_signedData') || !Array.isArray(data._signedData) || data._signedData.length !== 3 || data._signedData.map(v => typeof v).filter(v => v !== 'string').length !== 0) {\n        return false;\n    }\n    return true;\n};\n// WARNING: The following function (rawSignedIncomingData) will not check signatures\nexport const rawSignedIncomingData = (data) => {\n    if (!isRawSignedData(data)) {\n        throw new ChelErrorSignatureError('Invalid message format');\n    }\n    const stringValueFn = () => data;\n    let verifySignedValue;\n    const verifySignedValueFn = () => {\n        if (verifySignedValue) {\n            return verifySignedValue[1];\n        }\n        verifySignedValue = [data._signedData[1], JSON.parse(data._signedData[0])];\n        return verifySignedValue[1];\n    };\n    return wrapper({\n        get signingKeyId() {\n            if (verifySignedValue)\n                return verifySignedValue[0];\n            return signedDataKeyId(data);\n        },\n        get serialize() {\n            return stringValueFn;\n        },\n        get toString() {\n            return () => JSON.stringify(this.serialize());\n        },\n        get valueOf() {\n            return verifySignedValueFn;\n        },\n        get toJSON() {\n            return this.serialize;\n        },\n        get get() {\n            return (k) => k !== '_signedData' ? data[k] : undefined;\n        }\n    });\n};\n", "import { decrypt, deserializeKey, encrypt, keyId, serializeKey } from '@chelonia/crypto';\nimport sbp from '@sbp/sbp';\nimport { has } from 'turtledash';\nimport { ChelErrorDecryptionError, ChelErrorDecryptionKeyNotFound, ChelErrorUnexpected } from './errors.mjs';\nimport { isRawSignedData, signedIncomingData } from './signedData.mjs';\nconst rootStateFn = () => sbp('chelonia/rootState');\n// `proto` & `wrapper` are utilities for `isEncryptedData`\nconst proto = Object.create(null, {\n    _isEncryptedData: {\n        value: true\n    }\n});\nconst wrapper = (o) => {\n    return Object.setPrototypeOf(o, proto);\n};\n// `isEncryptedData` will return true for objects created by the various\n// `encrypt*Data` functions. It's meant to implement functionality equivalent\n// to `o instanceof EncryptedData`\nexport const isEncryptedData = (o) => {\n    return !!o && !!Object.getPrototypeOf(o)?._isEncryptedData;\n};\n// TODO: Check for permissions and allowedActions; this requires passing some\n// additional context\nconst encryptData = function (stateOrContractID, eKeyId, data, additionalData) {\n    const state = typeof stateOrContractID === 'string' ? rootStateFn()[stateOrContractID] : stateOrContractID;\n    // Has the key been revoked? If so, attempt to find an authorized key by the same name\n    const designatedKey = state?._vm?.authorizedKeys?.[eKeyId];\n    if (!designatedKey?.purpose.includes('enc')) {\n        throw new Error(`Encryption key ID ${eKeyId} is missing or is missing encryption purpose`);\n    }\n    if (designatedKey._notAfterHeight != null) {\n        const name = state._vm.authorizedKeys[eKeyId].name;\n        const newKeyId = Object.values(state._vm?.authorizedKeys).find((v) => v._notAfterHeight == null && v.name === name && v.purpose.includes('enc'))?.id;\n        if (!newKeyId) {\n            throw new Error(`Encryption key ID ${eKeyId} has been revoked and no new key exists by the same name (${name})`);\n        }\n        eKeyId = newKeyId;\n    }\n    const key = state._vm?.authorizedKeys?.[eKeyId].data;\n    if (!key) {\n        throw new Error(`Missing encryption key ${eKeyId}`);\n    }\n    const deserializedKey = typeof key === 'string' ? deserializeKey(key) : key;\n    return [\n        keyId(deserializedKey),\n        encrypt(deserializedKey, JSON.stringify(data, (_, v) => {\n            if (v && has(v, 'serialize') && typeof v.serialize === 'function') {\n                if (v.serialize.length === 1) {\n                    return v.serialize(additionalData);\n                }\n                else {\n                    return v.serialize();\n                }\n            }\n            return v;\n        }), additionalData)\n    ];\n};\n// TODO: Check for permissions and allowedActions; this requires passing the\n// entire SPMessage\nconst decryptData = function (state, height, data, additionalKeys, additionalData, validatorFn) {\n    if (!state) {\n        throw new ChelErrorDecryptionError('Missing contract state');\n    }\n    // Compatibility with signedData (composed signed + encrypted data)\n    if (typeof data.valueOf === 'function')\n        data = data.valueOf();\n    if (!isRawEncryptedData(data)) {\n        throw new ChelErrorDecryptionError('Invalid message format');\n    }\n    const [eKeyId, message] = data;\n    const key = additionalKeys[eKeyId];\n    if (!key) {\n        throw new ChelErrorDecryptionKeyNotFound(`Key ${eKeyId} not found`, { cause: eKeyId });\n    }\n    // height as NaN is used to allow checking for revokedKeys as well as\n    // authorizedKeys when decrypting data. This is normally inappropriate because\n    // revoked keys should be considered compromised and not used for encrypting\n    // new data\n    // However, OP_KEY_SHARE may include data encrypted with some other contract's\n    // keys when a key rotation is done. This is done, along with OP_ATOMIC and\n    // OP_KEY_UPDATE to rotate keys in a contract while allowing member contracts\n    // to retrieve and use the new key material.\n    // In such scenarios, since the keys really live in that other contract, it is\n    // impossible to know if the keys had been revoked in the 'source' contract\n    // at the time the key rotation was done. This is also different from foreign\n    // keys because these encryption keys are not necessarily authorized in the\n    // contract issuing OP_KEY_SHARE, and what is important is to refer to the\n    // (keys in the) foreign contract explicitly, as an alternative to sending\n    // an OP_KEY_SHARE to that contract.\n    // Using revoked keys represents some security risk since, as mentioned, they\n    // should generlly be considered compromised. However, in the scenario above\n    // we can trust that the party issuing OP_KEY_SHARE is not maliciously using\n    // old (revoked) keys, because there is little to be gained from not doing\n    // this. If that party's intention were to leak or compromise keys, they can\n    // already do so by other means, since they have access to the raw secrets\n    // that OP_KEY_SHARE is meant to protect. Hence, this attack does not open up\n    // any new attack vectors or venues that were not already available using\n    // different means.\n    const designatedKey = state._vm?.authorizedKeys?.[eKeyId];\n    if (!designatedKey || (height > designatedKey._notAfterHeight) || (height < designatedKey._notBeforeHeight) || !designatedKey.purpose.includes('enc')) {\n        throw new ChelErrorUnexpected(`Key ${eKeyId} is unauthorized or expired for the current contract`);\n    }\n    const deserializedKey = typeof key === 'string' ? deserializeKey(key) : key;\n    try {\n        const result = JSON.parse(decrypt(deserializedKey, message, additionalData));\n        if (typeof validatorFn === 'function')\n            validatorFn(result, eKeyId);\n        return result;\n    }\n    catch (e) {\n        throw new ChelErrorDecryptionError(e?.message || e);\n    }\n};\nexport const encryptedOutgoingData = (stateOrContractID, eKeyId, data) => {\n    if (!stateOrContractID || data === undefined || !eKeyId)\n        throw new TypeError('Invalid invocation');\n    const boundStringValueFn = encryptData.bind(null, stateOrContractID, eKeyId, data);\n    return wrapper({\n        get encryptionKeyId() {\n            return eKeyId;\n        },\n        get serialize() {\n            return (additionalData) => boundStringValueFn(additionalData || '');\n        },\n        get toString() {\n            return (additionalData) => JSON.stringify(this.serialize(additionalData));\n        },\n        get valueOf() {\n            return () => data;\n        }\n    });\n};\n// Used for OP_CONTRACT as a state does not yet exist\nexport const encryptedOutgoingDataWithRawKey = (key, data) => {\n    if (data === undefined || !key)\n        throw new TypeError('Invalid invocation');\n    const eKeyId = keyId(key);\n    const state = {\n        _vm: {\n            authorizedKeys: {\n                [eKeyId]: {\n                    purpose: ['enc'],\n                    data: serializeKey(key, false),\n                    _notBeforeHeight: 0,\n                    _notAfterHeight: undefined\n                }\n            }\n        }\n    };\n    const boundStringValueFn = encryptData.bind(null, state, eKeyId, data);\n    return wrapper({\n        get encryptionKeyId() {\n            return eKeyId;\n        },\n        get serialize() {\n            return (additionalData) => boundStringValueFn(additionalData || '');\n        },\n        get toString() {\n            return (additionalData) => JSON.stringify(this.serialize(additionalData));\n        },\n        get valueOf() {\n            return () => data;\n        }\n    });\n};\nexport const encryptedIncomingData = (contractID, state, data, height, additionalKeys, additionalData, validatorFn) => {\n    let decryptedValue;\n    const decryptedValueFn = () => {\n        if (decryptedValue) {\n            return decryptedValue;\n        }\n        if (!state || !additionalKeys) {\n            const rootState = rootStateFn();\n            state = state || rootState[contractID];\n            additionalKeys = additionalKeys ?? rootState.secretKeys;\n        }\n        decryptedValue = decryptData(state, height, data, additionalKeys, additionalData || '', validatorFn);\n        if (isRawSignedData(decryptedValue)) {\n            decryptedValue = signedIncomingData(contractID, state, decryptedValue, height, additionalData || '');\n        }\n        return decryptedValue;\n    };\n    return wrapper({\n        get encryptionKeyId() {\n            return encryptedDataKeyId(data);\n        },\n        get serialize() {\n            return () => data;\n        },\n        get toString() {\n            return () => JSON.stringify(this.serialize());\n        },\n        get valueOf() {\n            return decryptedValueFn;\n        },\n        get toJSON() {\n            return this.serialize;\n        }\n    });\n};\nexport const encryptedIncomingForeignData = (contractID, _0, data, _1, additionalKeys, additionalData, validatorFn) => {\n    let decryptedValue;\n    const decryptedValueFn = () => {\n        if (decryptedValue) {\n            return decryptedValue;\n        }\n        const rootState = rootStateFn();\n        const state = rootState[contractID];\n        decryptedValue = decryptData(state, NaN, data, additionalKeys ?? rootState.secretKeys, additionalData || '', validatorFn);\n        if (isRawSignedData(decryptedValue)) {\n            // TODO: Specify height\n            return signedIncomingData(contractID, state, decryptedValue, NaN, additionalData || '');\n        }\n        return decryptedValue;\n    };\n    return wrapper({\n        get encryptionKeyId() {\n            return encryptedDataKeyId(data);\n        },\n        get serialize() {\n            return () => data;\n        },\n        get toString() {\n            return () => JSON.stringify(this.serialize());\n        },\n        get valueOf() {\n            return decryptedValueFn;\n        },\n        get toJSON() {\n            return this.serialize;\n        }\n    });\n};\nexport const encryptedIncomingDataWithRawKey = (key, data, additionalData) => {\n    if (data === undefined || !key)\n        throw new TypeError('Invalid invocation');\n    let decryptedValue;\n    const eKeyId = keyId(key);\n    const decryptedValueFn = () => {\n        if (decryptedValue) {\n            return decryptedValue;\n        }\n        const state = {\n            _vm: {\n                authorizedKeys: {\n                    [eKeyId]: {\n                        purpose: ['enc'],\n                        data: serializeKey(key, false),\n                        _notBeforeHeight: 0,\n                        _notAfterHeight: undefined\n                    }\n                }\n            }\n        };\n        decryptedValue = decryptData(state, NaN, data, { [eKeyId]: key }, additionalData || '');\n        return decryptedValue;\n    };\n    return wrapper({\n        get encryptionKeyId() {\n            return encryptedDataKeyId(data);\n        },\n        get serialize() {\n            return () => data;\n        },\n        get toString() {\n            return () => JSON.stringify(this.serialize());\n        },\n        get valueOf() {\n            return decryptedValueFn;\n        },\n        get toJSON() {\n            return this.serialize;\n        }\n    });\n};\nexport const encryptedDataKeyId = (data) => {\n    if (!isRawEncryptedData(data)) {\n        throw new ChelErrorDecryptionError('Invalid message format');\n    }\n    return data[0];\n};\nexport const isRawEncryptedData = (data) => {\n    if (!Array.isArray(data) || data.length !== 2 || data.map(v => typeof v).filter(v => v !== 'string').length !== 0) {\n        return false;\n    }\n    return true;\n};\nexport const unwrapMaybeEncryptedData = (data) => {\n    if (data == null)\n        return;\n    if (isEncryptedData(data)) {\n        try {\n            return {\n                encryptionKeyId: data.encryptionKeyId,\n                data: data.valueOf()\n            };\n        }\n        catch (e) {\n            console.warn('unwrapMaybeEncryptedData: Unable to decrypt', e);\n        }\n    }\n    else {\n        return {\n            encryptionKeyId: null,\n            data\n        };\n    }\n};\nexport const maybeEncryptedIncomingData = (contractID, state, data, height, additionalKeys, additionalData, validatorFn) => {\n    if (isRawEncryptedData(data)) {\n        return encryptedIncomingData(contractID, state, data, height, additionalKeys, additionalData, validatorFn);\n    }\n    else {\n        validatorFn?.(data, '');\n        return data;\n    }\n};\n", "import { keyId } from '@chelonia/crypto';\nimport { serdesDeserializeSymbol, serdesSerializeSymbol, serdesTagSymbol } from '@chelonia/serdes';\nimport { has } from 'turtledash';\nimport { encryptedIncomingData, encryptedIncomingForeignData, maybeEncryptedIncomingData, unwrapMaybeEncryptedData } from './encryptedData.mjs';\nimport { createCID, multicodes } from './functions.mjs';\nimport { isRawSignedData, isSignedData, rawSignedIncomingData, signedIncomingData } from './signedData.mjs';\n// Takes a raw message and processes it so that EncryptedData and SignedData\n// attributes are defined\nconst decryptedAndVerifiedDeserializedMessage = (head, headJSON, contractID, parsedMessage, additionalKeys, state) => {\n    const op = head.op;\n    const height = head.height;\n    const message = op === SPMessage.OP_ACTION_ENCRYPTED\n        ? encryptedIncomingData(contractID, state, parsedMessage, height, additionalKeys, headJSON, undefined)\n        : parsedMessage;\n    // If the operation is SPMessage.OP_KEY_ADD or SPMessage.OP_KEY_UPDATE,\n    // extract encrypted data from key.meta?.private?.content\n    if ([SPMessage.OP_KEY_ADD, SPMessage.OP_KEY_UPDATE].includes(op)) {\n        return message.map((key) => {\n            return maybeEncryptedIncomingData(contractID, state, key, height, additionalKeys, headJSON, (key) => {\n                if (key.meta?.private?.content) {\n                    key.meta.private.content = encryptedIncomingData(contractID, state, key.meta.private.content, height, additionalKeys, headJSON, (value) => {\n                        // Validator function to verify the key matches its expected ID\n                        const computedKeyId = keyId(value);\n                        if (computedKeyId !== key.id) {\n                            throw new Error(`Key ID mismatch. Expected to decrypt key ID ${key.id} but got ${computedKeyId}`);\n                        }\n                    });\n                }\n                // key.meta?.keyRequest?.contractID could be optionally encrypted\n                if (key.meta?.keyRequest?.reference) {\n                    try {\n                        key.meta.keyRequest.reference = maybeEncryptedIncomingData(contractID, state, key.meta.keyRequest.reference, height, additionalKeys, headJSON)?.valueOf();\n                    }\n                    catch {\n                        // If we couldn't decrypt it, this value is of no use to us (we\n                        // can't keep track of key requests and key shares), so we delete it\n                        delete key.meta.keyRequest.reference;\n                    }\n                }\n                // key.meta?.keyRequest?.contractID could be optionally encrypted\n                if (key.meta?.keyRequest?.contractID) {\n                    try {\n                        key.meta.keyRequest.contractID = maybeEncryptedIncomingData(contractID, state, key.meta.keyRequest.contractID, height, additionalKeys, headJSON)?.valueOf();\n                    }\n                    catch {\n                        // If we couldn't decrypt it, this value is of no use to us (we\n                        // can't keep track of key requests and key shares), so we delete it\n                        delete key.meta.keyRequest.contractID;\n                    }\n                }\n            });\n        });\n    }\n    // If the operation is SPMessage.OP_CONTRACT,\n    // extract encrypted data from keys?.[].meta?.private?.content\n    if (op === SPMessage.OP_CONTRACT) {\n        message.keys = message.keys?.map((key) => {\n            return maybeEncryptedIncomingData(contractID, state, key, height, additionalKeys, headJSON, (key) => {\n                if (!key.meta?.private?.content)\n                    return;\n                // The following two lines are commented out because this feature\n                // (using a foreign decryption contract) doesn't seem to be in use and\n                // the use case seems unclear.\n                // const decryptionFn = key.meta.private.foreignContractID ? encryptedIncomingForeignData : encryptedIncomingData\n                // const decryptionContract = key.meta.private.foreignContractID ? key.meta.private.foreignContractID : contractID\n                const decryptionFn = encryptedIncomingData;\n                const decryptionContract = contractID;\n                key.meta.private.content = decryptionFn(decryptionContract, state, key.meta.private.content, height, additionalKeys, headJSON, (value) => {\n                    const computedKeyId = keyId(value);\n                    if (computedKeyId !== key.id) {\n                        throw new Error(`Key ID mismatch. Expected to decrypt key ID ${key.id} but got ${computedKeyId}`);\n                    }\n                });\n            });\n        });\n    }\n    // If the operation is SPMessage.OP_KEY_SHARE,\n    // extract encrypted data from keys?.[].meta?.private?.content\n    if (op === SPMessage.OP_KEY_SHARE) {\n        return maybeEncryptedIncomingData(contractID, state, message, height, additionalKeys, headJSON, (message) => {\n            message.keys?.forEach((key) => {\n                if (!key.meta?.private?.content)\n                    return;\n                const decryptionFn = message.foreignContractID ? encryptedIncomingForeignData : encryptedIncomingData;\n                const decryptionContract = message.foreignContractID || contractID;\n                key.meta.private.content = decryptionFn(decryptionContract, state, key.meta.private.content, height, additionalKeys, headJSON, (value) => {\n                    const computedKeyId = keyId(value);\n                    if (computedKeyId !== key.id) {\n                        throw new Error(`Key ID mismatch. Expected to decrypt key ID ${key.id} but got ${computedKeyId}`);\n                    }\n                });\n            });\n        });\n    }\n    // If the operation is OP_KEY_REQUEST, the payload might be EncryptedData\n    // The ReplyWith attribute is SignedData\n    if (op === SPMessage.OP_KEY_REQUEST) {\n        return maybeEncryptedIncomingData(contractID, state, message, height, additionalKeys, headJSON, (msg) => {\n            msg.replyWith = signedIncomingData(msg.contractID, undefined, msg.replyWith, msg.height, headJSON);\n        });\n    }\n    // If the operation is OP_ACTION_UNENCRYPTED, it may contain an inner\n    // signature\n    // Actions must be signed using a key for the current contract\n    if (op === SPMessage.OP_ACTION_UNENCRYPTED && isRawSignedData(message)) {\n        return signedIncomingData(contractID, state, message, height, headJSON);\n    }\n    // Inner signatures are handled by EncryptedData\n    if (op === SPMessage.OP_ACTION_ENCRYPTED) {\n        return message;\n    }\n    if (op === SPMessage.OP_KEY_DEL) {\n        return message.map((key) => {\n            return maybeEncryptedIncomingData(contractID, state, key, height, additionalKeys, headJSON, undefined);\n        });\n    }\n    if (op === SPMessage.OP_KEY_REQUEST_SEEN) {\n        return maybeEncryptedIncomingData(contractID, state, parsedMessage, height, additionalKeys, headJSON, undefined);\n    }\n    // If the operation is OP_ATOMIC, call this function recursively\n    if (op === SPMessage.OP_ATOMIC) {\n        return message\n            .map(([opT, opV]) => [\n            opT,\n            decryptedAndVerifiedDeserializedMessage({ ...head, op: opT }, headJSON, contractID, opV, additionalKeys, state)\n        ]);\n    }\n    return message;\n};\nexport class SPMessage {\n    // flow type annotations to make flow happy\n    _mapping;\n    _head;\n    _message;\n    _signedMessageData;\n    _direction;\n    _decryptedValue;\n    _innerSigningKeyId;\n    static OP_CONTRACT = 'c';\n    static OP_ACTION_ENCRYPTED = 'ae'; // e2e-encrypted action\n    static OP_ACTION_UNENCRYPTED = 'au'; // publicly readable action\n    static OP_KEY_ADD = 'ka'; // add this key to the list of keys allowed to write to this contract, or update an existing key\n    static OP_KEY_DEL = 'kd'; // remove this key from authorized keys\n    static OP_KEY_UPDATE = 'ku'; // update key in authorized keys\n    static OP_PROTOCOL_UPGRADE = 'pu';\n    static OP_PROP_SET = 'ps'; // set a public key/value pair\n    static OP_PROP_DEL = 'pd'; // delete a public key/value pair\n    static OP_CONTRACT_AUTH = 'ca'; // authorize a contract\n    static OP_CONTRACT_DEAUTH = 'cd'; // deauthorize a contract\n    static OP_ATOMIC = 'a'; // atomic op\n    static OP_KEY_SHARE = 'ks'; // key share\n    static OP_KEY_REQUEST = 'kr'; // key request\n    static OP_KEY_REQUEST_SEEN = 'krs'; // key request response\n    // eslint-disable-next-line camelcase\n    static createV1_0({ contractID, previousHEAD = null, previousKeyOp = null, \n    // Height will be automatically set to the correct value when sending\n    // The reason to set it to Number.MAX_SAFE_INTEGER is so that we can\n    // temporarily process outgoing messages with signature validation\n    // still working\n    height = Number.MAX_SAFE_INTEGER, op, manifest }) {\n        const head = {\n            version: '1.0.0',\n            previousHEAD,\n            previousKeyOp,\n            height,\n            contractID,\n            op: op[0],\n            manifest\n        };\n        return new this(messageToParams(head, op[1]));\n    }\n    // SPMessage.cloneWith could be used when make a SPMessage object having the same id()\n    // https://github.com/okTurtles/group-income/issues/1503\n    static cloneWith(targetHead, targetOp, sources) {\n        const head = Object.assign({}, targetHead, sources);\n        return new this(messageToParams(head, targetOp[1]));\n    }\n    static deserialize(value, additionalKeys, state, unwrapMaybeEncryptedDataFn = unwrapMaybeEncryptedData) {\n        if (!value)\n            throw new Error(`deserialize bad value: ${value}`);\n        const { head: headJSON, ...parsedValue } = JSON.parse(value);\n        const head = JSON.parse(headJSON);\n        const contractID = head.op === SPMessage.OP_CONTRACT ? createCID(value, multicodes.SHELTER_CONTRACT_DATA) : head.contractID;\n        // Special case for OP_CONTRACT, since the keys are not yet present in the\n        // state\n        if (!state?._vm?.authorizedKeys && head.op === SPMessage.OP_CONTRACT) {\n            const value = rawSignedIncomingData(parsedValue);\n            const authorizedKeys = Object.fromEntries(value.valueOf()?.keys.map(wk => {\n                const k = unwrapMaybeEncryptedDataFn(wk);\n                if (!k)\n                    return null;\n                return [k.data.id, k.data];\n                // eslint-disable-next-line no-use-before-define\n            }).filter(Boolean));\n            state = {\n                _vm: {\n                    type: head.type,\n                    authorizedKeys\n                }\n            };\n        }\n        const signedMessageData = signedIncomingData(contractID, state, parsedValue, head.height, headJSON, (message) => decryptedAndVerifiedDeserializedMessage(head, headJSON, contractID, message, additionalKeys, state));\n        return new this({\n            direction: 'incoming',\n            mapping: { key: createCID(value, multicodes.SHELTER_CONTRACT_DATA), value },\n            head,\n            signedMessageData\n        });\n    }\n    static deserializeHEAD(value) {\n        if (!value)\n            throw new Error(`deserialize bad value: ${value}`);\n        let head, hash;\n        const result = {\n            get head() {\n                if (head === undefined) {\n                    head = JSON.parse(JSON.parse(value).head);\n                }\n                return head;\n            },\n            get hash() {\n                if (!hash) {\n                    hash = createCID(value, multicodes.SHELTER_CONTRACT_DATA);\n                }\n                return hash;\n            },\n            get contractID() {\n                return result.head?.contractID ?? result.hash;\n            },\n            // `description` is not a getter to prevent the value from being copied\n            // if the object is cloned or serialized\n            description() {\n                const type = this.head.op;\n                return `<op_${type}|${this.hash} of ${this.contractID}>`;\n            },\n            get isFirstMessage() {\n                return !result.head?.contractID;\n            }\n        };\n        return result;\n    }\n    constructor(params) {\n        this._direction = params.direction;\n        this._mapping = params.mapping;\n        this._head = params.head;\n        this._signedMessageData = params.signedMessageData;\n        // perform basic sanity check\n        const type = this.opType();\n        let atomicTopLevel = true;\n        const validate = (type, message) => {\n            switch (type) {\n                case SPMessage.OP_CONTRACT:\n                    if (!this.isFirstMessage() || !atomicTopLevel)\n                        throw new Error('OP_CONTRACT: must be first message');\n                    break;\n                case SPMessage.OP_ATOMIC:\n                    if (!atomicTopLevel) {\n                        throw new Error('OP_ATOMIC not allowed inside of OP_ATOMIC');\n                    }\n                    if (!Array.isArray(message)) {\n                        throw new TypeError('OP_ATOMIC must be of an array type');\n                    }\n                    atomicTopLevel = false;\n                    message.forEach(([t, m]) => validate(t, m));\n                    break;\n                case SPMessage.OP_KEY_ADD:\n                case SPMessage.OP_KEY_DEL:\n                case SPMessage.OP_KEY_UPDATE:\n                    if (!Array.isArray(message))\n                        throw new TypeError('OP_KEY_{ADD|DEL|UPDATE} must be of an array type');\n                    break;\n                case SPMessage.OP_KEY_SHARE:\n                case SPMessage.OP_KEY_REQUEST:\n                case SPMessage.OP_KEY_REQUEST_SEEN:\n                case SPMessage.OP_ACTION_ENCRYPTED:\n                case SPMessage.OP_ACTION_UNENCRYPTED:\n                    // nothing for now\n                    break;\n                default:\n                    throw new Error(`unsupported op: ${type}`);\n            }\n        };\n        // this._message is set as a getter to verify the signature only once the\n        // message contents are read\n        Object.defineProperty(this, '_message', {\n            get: ((validated) => () => {\n                const message = this._signedMessageData.valueOf();\n                // If we haven't validated the message, validate it now\n                if (!validated) {\n                    validate(type, message);\n                    validated = true;\n                }\n                return message;\n            })()\n        });\n    }\n    decryptedValue() {\n        if (this._decryptedValue)\n            return this._decryptedValue;\n        try {\n            const value = this.message();\n            // TODO: This uses `unwrapMaybeEncryptedData` instead of a configurable\n            // version based on `skipDecryptionAttempts`. This is fine based on current\n            // use, and also something else might be confusing based on the explicit\n            // name of this function, `decryptedValue`.\n            const data = unwrapMaybeEncryptedData(value);\n            // Did decryption succeed? (unwrapMaybeEncryptedData will return undefined\n            // on failure)\n            if (data?.data) {\n                // The data inside could be signed. In this case, we unwrap that to get\n                // to the inner contents\n                if (isSignedData(data.data)) {\n                    this._innerSigningKeyId = data.data.signingKeyId;\n                    this._decryptedValue = data.data.valueOf();\n                }\n                else {\n                    this._decryptedValue = data.data;\n                }\n            }\n            return this._decryptedValue;\n        }\n        catch {\n            // Signature or encryption error\n            // We don't log this error because it's already logged when the value is\n            // retrieved\n            return undefined;\n        }\n    }\n    innerSigningKeyId() {\n        if (!this._decryptedValue) {\n            this.decryptedValue();\n        }\n        return this._innerSigningKeyId;\n    }\n    head() { return this._head; }\n    message() { return this._message; }\n    op() { return [this.head().op, this.message()]; }\n    rawOp() { return [this.head().op, this._signedMessageData]; }\n    opType() { return this.head().op; }\n    opValue() { return this.message(); }\n    signingKeyId() { return this._signedMessageData.signingKeyId; }\n    manifest() { return this.head().manifest; }\n    description() {\n        const type = this.opType();\n        let desc = `<op_${type}`;\n        if (type === SPMessage.OP_ACTION_UNENCRYPTED) {\n            try {\n                const value = this.opValue().valueOf();\n                if (typeof value.action === 'string') {\n                    desc += `|${value.action}`;\n                }\n            }\n            catch (e) {\n                console.warn('Error on .description()', this.hash(), e);\n            }\n        }\n        return `${desc}|${this.hash()} of ${this.contractID()}>`;\n    }\n    isFirstMessage() { return !this.head().contractID; }\n    contractID() { return this.head().contractID || this.hash(); }\n    serialize() { return this._mapping.value; }\n    hash() { return this._mapping.key; }\n    previousKeyOp() { return this._head.previousKeyOp; }\n    height() { return this._head.height; }\n    id() {\n        // TODO: Schedule for later removal\n        throw new Error('SPMessage.id() was called but it has been removed');\n    }\n    direction() {\n        return this._direction;\n    }\n    // `isKeyOp` is used to filter out non-key operations for providing an\n    // abbreviated chain fo snapshot validation\n    isKeyOp() {\n        let value;\n        return !!(keyOps.includes(this.opType()) ||\n            (this.opType() === SPMessage.OP_ATOMIC && Array.isArray(value = this.opValue()) && value.some(([opT]) => {\n                return keyOps.includes(opT);\n            })));\n    }\n    static get [serdesTagSymbol]() {\n        return 'SPMessage';\n    }\n    static [serdesSerializeSymbol](m) {\n        return [m.serialize(), m.direction(), m.decryptedValue(), m.innerSigningKeyId()];\n    }\n    static [serdesDeserializeSymbol]([serialized, direction, decryptedValue, innerSigningKeyId]) {\n        const m = SPMessage.deserialize(serialized);\n        m._direction = direction;\n        m._decryptedValue = decryptedValue;\n        m._innerSigningKeyId = innerSigningKeyId;\n        return m;\n    }\n}\nfunction messageToParams(head, message) {\n    // NOTE: the JSON strings generated here must be preserved forever.\n    //       do not ever regenerate this message using the contructor.\n    //       instead store it using serialize() and restore it using deserialize().\n    //       The issue is that different implementations of JavaScript engines might generate different strings\n    //       when serializing JS objects using JSON.stringify\n    //       and that would lead to different hashes resulting from createCID.\n    //       So to get around this we save the serialized string upon creation\n    //       and keep a copy of it (instead of regenerating it as needed).\n    //       https://github.com/okTurtles/group-income/pull/1513#discussion_r1142809095\n    let mapping;\n    return {\n        direction: has(message, 'recreate') ? 'outgoing' : 'incoming',\n        // Lazy computation of mapping to prevent us from serializing outgoing\n        // atomic operations\n        get mapping() {\n            if (!mapping) {\n                const headJSON = JSON.stringify(head);\n                const messageJSON = { ...message.serialize(headJSON), head: headJSON };\n                const value = JSON.stringify(messageJSON);\n                mapping = {\n                    key: createCID(value, multicodes.SHELTER_CONTRACT_DATA),\n                    value\n                };\n            }\n            return mapping;\n        },\n        head,\n        signedMessageData: message\n    };\n}\n// Operations that affect valid keys\nconst keyOps = [SPMessage.OP_CONTRACT, SPMessage.OP_KEY_ADD, SPMessage.OP_KEY_DEL, SPMessage.OP_KEY_UPDATE];\n"],
  "mappings": "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EAAIN,GAAEG,CAAC,EAAG,CAAC,EAC5BH,GAAEK,CAAC,EAAIL,GAAEK,CAAC,EAAIL,GAAEM,CAAC,EACjBN,GAAEI,CAAC,EAAII,GAAOR,GAAEI,CAAC,EAAIJ,GAAEK,CAAC,EAAG,CAAC,CAC9B,CAKA,SAASG,GAAQC,EAAGF,EAAG,CACrB,OAAQE,IAAMF,EAAME,GAAM,GAAKF,CACjC,CAGA,IAAMG,GAAa,IAAI,YAAY,CACjC,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACF,CAAC,EAEKC,GAAQ,IAAI,WAAW,CAC3B,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,EACA,EACA,GACA,GACA,GACA,EACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,GACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,EACA,GACA,EACA,GACA,GACA,CACF,CAAC,EAGKX,GAAI,IAAI,YAAY,EAAE,EACtBY,GAAI,IAAI,YAAY,EAAE,EAC5B,SAASC,GAAiBC,EAAKC,EAAM,CACnC,IAAId,EAAI,EACR,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IAEjBD,GAAEC,CAAC,EAAIa,EAAI,EAAEb,CAAC,EACdD,GAAEC,EAAI,CAAC,EAAIS,GAAWT,CAAC,EAUzB,IAPAD,GAAE,EAAE,GAAKc,EAAI,EACbd,GAAE,EAAE,GAAKc,EAAI,EAAI,WACbC,IAEFf,GAAE,EAAE,EAAI,CAACA,GAAE,EAAE,GAGVC,EAAI,EAAGA,EAAI,GAAIA,IAElBW,GAAEX,CAAC,EAAIF,GAAUe,EAAI,EAAG,EAAIb,CAAC,EAO/B,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAElBC,GAAM,EAAG,EAAG,EAAG,GAAIU,GAAED,GAAMV,EAAI,GAAK,CAAC,CAAC,EAAGW,GAAED,GAAMV,EAAI,GAAK,CAAC,CAAC,CAAC,EAC7DC,GAAM,EAAG,EAAG,EAAG,GAAIU,GAAED,GAAMV,EAAI,GAAK,CAAC,CAAC,EAAGW,GAAED,GAAMV,EAAI,GAAK,CAAC,CAAC,CAAC,EAC7DC,GAAM,EAAG,EAAG,GAAI,GAAIU,GAAED,GAAMV,EAAI,GAAK,CAAC,CAAC,EAAGW,GAAED,GAAMV,EAAI,GAAK,CAAC,CAAC,CAAC,EAC9DC,GAAM,EAAG,EAAG,GAAI,GAAIU,GAAED,GAAMV,EAAI,GAAK,CAAC,CAAC,EAAGW,GAAED,GAAMV,EAAI,GAAK,CAAC,CAAC,CAAC,EAC9DC,GAAM,EAAG,EAAG,GAAI,GAAIU,GAAED,GAAMV,EAAI,GAAK,CAAC,CAAC,EAAGW,GAAED,GAAMV,EAAI,GAAK,CAAC,CAAC,CAAC,EAC9DC,GAAM,EAAG,EAAG,GAAI,GAAIU,GAAED,GAAMV,EAAI,GAAK,EAAE,CAAC,EAAGW,GAAED,GAAMV,EAAI,GAAK,EAAE,CAAC,CAAC,EAChEC,GAAM,EAAG,EAAG,EAAG,GAAIU,GAAED,GAAMV,EAAI,GAAK,EAAE,CAAC,EAAGW,GAAED,GAAMV,EAAI,GAAK,EAAE,CAAC,CAAC,EAC/DC,GAAM,EAAG,EAAG,EAAG,GAAIU,GAAED,GAAMV,EAAI,GAAK,EAAE,CAAC,EAAGW,GAAED,GAAMV,EAAI,GAAK,EAAE,CAAC,CAAC,EAIjE,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IACjBa,EAAI,EAAEb,CAAC,GAAKD,GAAEC,CAAC,EAAID,GAAEC,EAAI,CAAC,CAG9B,CAKA,SAASe,GAAaC,EAAQC,EAAK,CACjC,GAAI,EAAED,EAAS,GAAKA,GAAU,IAC5B,MAAM,IAAI,MAAM,+CAA+C,EAEjE,IAAME,EAASD,EAAMA,EAAI,OAAS,EAClC,GAAIA,GAAO,EAAEC,EAAS,GAAKA,GAAU,IACnC,MAAM,IAAI,MAAM,4CAA4C,EAG9D,IAAML,EAAM,CACV,EAAG,IAAI,YAAYJ,EAAU,EAC7B,EAAG,IAAI,WAAW,EAAE,EACpB,EAAG,EACH,EAAG,EACH,OAAQO,CACV,EACA,OAAAH,EAAI,EAAE,CAAC,GAAK,SAAcK,GAAU,EAAKF,EAErCE,EAAS,IACXC,GAAcN,EAAKI,CAAG,EACtBJ,EAAI,EAAI,IAGHA,CACT,CAIA,SAASM,GAAeN,EAAKO,EAAO,CAClC,QAASpB,EAAI,EAAGA,EAAIoB,EAAM,OAAQpB,IAC5Ba,EAAI,IAAM,KAEZA,EAAI,GAAKA,EAAI,EACbD,GAAgBC,EAAK,EAAK,EAC1BA,EAAI,EAAI,GAEVA,EAAI,EAAEA,EAAI,GAAG,EAAIO,EAAMpB,CAAC,CAE5B,CAIA,SAASqB,GAAcR,EAAK,CAE1B,IADAA,EAAI,GAAKA,EAAI,EACNA,EAAI,EAAI,IAEbA,EAAI,EAAEA,EAAI,GAAG,EAAI,EAEnBD,GAAgBC,EAAK,EAAI,EAGzB,IAAMS,EAAM,IAAI,WAAWT,EAAI,MAAM,EACrC,QAASb,EAAI,EAAGA,EAAIa,EAAI,OAAQb,IAC9BsB,EAAItB,CAAC,EAAKa,EAAI,EAAEb,GAAK,CAAC,GAAM,GAAKA,EAAI,GAAO,IAE9C,OAAOsB,CACT,CAUA,SAASC,GAASH,EAAOH,EAAKD,EAAQ,CAEpCA,EAASA,GAAU,GACnBI,EAAQvB,GAAK,eAAeuB,CAAK,EAGjC,IAAMP,EAAME,GAAYC,EAAQC,CAAG,EACnC,OAAAE,GAAcN,EAAKO,CAAK,EACjBC,GAAaR,CAAG,CACzB,CAUA,SAASW,GAAYJ,EAAOH,EAAKD,EAAQ,CACvC,IAAMS,EAASF,GAAQH,EAAOH,EAAKD,CAAM,EACzC,OAAOnB,GAAK,MAAM4B,CAAM,CAC1B,CAEA7B,GAAO,QAAU,CACf,QAAS2B,GACT,WAAYC,GACZ,YAAaT,GACb,cAAeI,GACf,aAAcE,EAChB,IChWA,IAAAK,GAAAC,GAAA,CAAAC,GAAAC,KAAA,KAAMC,GAAM,KACNC,GAAM,KAEZF,GAAO,QAAU,CACf,QAASC,GAAI,QACb,WAAYA,GAAI,WAChB,YAAaA,GAAI,YACjB,cAAeA,GAAI,cACnB,aAAcA,GAAI,aAClB,QAASC,GAAI,QACb,WAAYA,GAAI,WAChB,YAAaA,GAAI,YACjB,cAAeA,GAAI,cACnB,aAAcA,GAAI,YACpB,ICdA,IAAAC,GAAAC,GAAA,CAAAC,GAAAC,KAAA,CA2CA,SAASC,GAAOC,EAAUC,EAAMC,EAAMC,EAAGC,EAAOC,EAAeC,EAAUC,EAAU,CACjF,aAEA,SAASC,EAAOC,EAAG,CACH,IAAIC,EAAI,CACpB,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,UAAY,UAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,UAAY,UAChD,UAAY,UAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UACtC,EAEIC,EAAK,WAAYC,EAAK,WAAYC,EAAK,WAAYC,GAAK,WACxDC,GAAK,WAAYC,GAAK,WAAYC,GAAK,UAAYC,GAAK,WACxDC,GAAI,IAAI,MAAM,EAAE,EAEpB,SAASC,GAAOC,GAAG,CAEjB,QADIC,GAAM,EAAGC,EAAMF,GAAE,OACdE,GAAO,IAAI,CAChB,IAAIC,GAAIb,EAAIc,GAAIb,EAAIc,GAAIb,EAAIc,GAAIb,GAAIc,GAAIb,GAAIc,GAAIb,GAAIc,GAAIb,GAAIc,GAAIb,GAC5Dc,GAAGC,GAAGC,GAAGC,GAAIC,GAEjB,IAAKH,GAAI,EAAGA,GAAI,GAAIA,KAClBC,GAAIZ,GAAMW,GAAE,EACZd,GAAEc,EAAC,GAAMZ,GAAEa,EAAC,EAAI,MAAO,IAAQb,GAAEa,GAAE,CAAC,EAAI,MAAO,IACtCb,GAAEa,GAAE,CAAC,EAAI,MAAO,EAAMb,GAAEa,GAAE,CAAC,EAAI,IAG1C,IAAKD,GAAI,GAAIA,GAAI,GAAIA,KACnBD,GAAIb,GAAEc,GAAE,CAAC,EACTE,IAAOH,KAAI,GAAOA,IAAI,KAAaA,KAAI,GAAOA,IAAI,IAAYA,KAAI,GAElEA,GAAIb,GAAEc,GAAE,EAAE,EACVG,IAAOJ,KAAI,EAAMA,IAAI,KAAYA,KAAI,GAAOA,IAAI,IAAYA,KAAI,EAEhEb,GAAEc,EAAC,GAAOE,GAAKhB,GAAEc,GAAE,CAAC,EAAK,IAAOG,GAAKjB,GAAEc,GAAE,EAAE,EAAK,GAAM,EAGxD,IAAKA,GAAI,EAAGA,GAAI,GAAIA,KAClBE,MAAWP,KAAI,EAAMA,IAAI,KAAYA,KAAI,GAAOA,IAAI,KAC7CA,KAAI,GAAOA,IAAI,KAAcA,GAAIC,GAAM,CAACD,GAAIE,IAAO,IACnDC,IAAMrB,EAAEuB,EAAC,EAAId,GAAEc,EAAC,EAAK,GAAM,GAAM,EAExCG,KAASZ,KAAI,EAAMA,IAAI,KAAYA,KAAI,GAAOA,IAAI,KAC3CA,KAAI,GAAOA,IAAI,MAAcA,GAAIC,GAAMD,GAAIE,GAAMD,GAAIC,IAAO,EAEnEK,GAAID,GACJA,GAAID,GACJA,GAAID,GACJA,GAAKD,GAAIQ,GAAM,EACfR,GAAID,GACJA,GAAID,GACJA,GAAID,GACJA,GAAKW,GAAKC,GAAM,EAGlBzB,EAAMA,EAAKa,GAAK,EAChBZ,EAAMA,EAAKa,GAAK,EAChBZ,EAAMA,EAAKa,GAAK,EAChBZ,GAAMA,GAAKa,GAAK,EAChBZ,GAAMA,GAAKa,GAAK,EAChBZ,GAAMA,GAAKa,GAAK,EAChBZ,GAAMA,GAAKa,GAAK,EAChBZ,GAAMA,GAAKa,GAAK,EAEhBT,IAAO,GACPC,GAAO,EACT,CACF,CAEAH,GAAOX,CAAC,EAER,IAAIwB,GAAGI,GAAY5B,EAAE,OAAS,GAC1B6B,GAAY7B,EAAE,OAAS,UAAc,EACrC8B,GAAW9B,EAAE,QAAU,EACvB+B,GAAYH,GAAY,GAAM,GAAK,IACnChB,GAAIZ,EAAE,MAAMA,EAAE,OAAS4B,GAAW5B,EAAE,MAAM,EAG9C,IADAY,GAAE,KAAK,GAAI,EACNY,GAAII,GAAY,EAAGJ,GAAIO,GAAUP,KAAKZ,GAAE,KAAK,CAAC,EACnD,OAAAA,GAAE,KAAMiB,KAAW,GAAM,GAAI,EAC7BjB,GAAE,KAAMiB,KAAW,GAAM,GAAI,EAC7BjB,GAAE,KAAMiB,KAAW,EAAM,GAAI,EAC7BjB,GAAE,KAAMiB,KAAW,EAAM,GAAI,EAC7BjB,GAAE,KAAMkB,KAAW,GAAM,GAAI,EAC7BlB,GAAE,KAAMkB,KAAW,GAAM,GAAI,EAC7BlB,GAAE,KAAMkB,KAAW,EAAM,GAAI,EAC7BlB,GAAE,KAAMkB,KAAW,EAAM,GAAI,EAE7BnB,GAAOC,EAAC,EAED,CACJV,IAAK,GAAM,IAAOA,IAAK,GAAM,IAAOA,IAAK,EAAK,IAAOA,IAAK,EAAK,IAC/DC,IAAK,GAAM,IAAOA,IAAK,GAAM,IAAOA,IAAK,EAAK,IAAOA,IAAK,EAAK,IAC/DC,IAAK,GAAM,IAAOA,IAAK,GAAM,IAAOA,IAAK,EAAK,IAAOA,IAAK,EAAK,IAC/DC,KAAK,GAAM,IAAOA,KAAK,GAAM,IAAOA,KAAK,EAAK,IAAOA,KAAK,EAAK,IAC/DC,KAAK,GAAM,IAAOA,KAAK,GAAM,IAAOA,KAAK,EAAK,IAAOA,KAAK,EAAK,IAC/DC,KAAK,GAAM,IAAOA,KAAK,GAAM,IAAOA,KAAK,EAAK,IAAOA,KAAK,EAAK,IAC/DC,KAAK,GAAM,IAAOA,KAAK,GAAM,IAAOA,KAAK,EAAK,IAAOA,KAAK,EAAK,IAC/DC,KAAK,GAAM,IAAOA,KAAK,GAAM,IAAOA,KAAK,EAAK,IAAOA,KAAK,EAAK,GAClE,CACF,CAEA,SAASuB,EAA2BzC,EAAUC,EAAMG,EAAO,CAEtDJ,EAAS,OAAS,KAGnBA,EAAWQ,EAAOR,EAAS,KAAOA,EAAW,MAAM,UAAU,MAAM,KAAKA,EAAU,CAAC,CAAC,GAGtF,IAAIiC,EAAGS,EAAW,GAAKzC,EAAK,OAAS,EACjC0C,GAAQ,IAAI,MAAMD,CAAQ,EAC1BE,GAAW,IAAI,MAAM,EAAE,EACvBC,GAAK,CAAC,EAGV,IAAKZ,EAAI,EAAGA,EAAI,GAAIA,IAAKU,GAAMV,CAAC,EAAI,GACpC,IAAKA,EAAI,EAAGA,EAAIjC,EAAS,OAAQiC,IAAKU,GAAMV,CAAC,GAAKjC,EAASiC,CAAC,EAC5D,IAAKA,EAAI,EAAGA,EAAIhC,EAAK,OAAQgC,IAAKU,GAAM,GAAGV,CAAC,EAAIhC,EAAKgC,CAAC,EACtD,IAAKA,EAAIS,EAAW,EAAGT,EAAIS,EAAUT,IAAKU,GAAMV,CAAC,EAAI,EAGrD,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKW,GAASX,CAAC,EAAI,GACvC,IAAKA,EAAI,EAAGA,EAAIjC,EAAS,OAAQiC,IAAKW,GAASX,CAAC,GAAKjC,EAASiC,CAAC,EAG/D,SAASa,IAAmB,CAC1B,QAASb,GAAIS,EAAS,EAAGT,IAAKS,EAAS,EAAGT,KAAK,CAE7C,GADAU,GAAMV,EAAC,IACHU,GAAMV,EAAC,GAAK,IAAM,OACtBU,GAAMV,EAAC,EAAI,CACb,CACF,CAGA,KAAO7B,GAAS,IACd0C,GAAiB,EACjBD,GAAKA,GAAG,OAAOrC,EAAOoC,GAAS,OAAOpC,EAAOmC,EAAK,CAAC,CAAC,CAAC,EACrDvC,GAAS,GAEX,OAAIA,EAAQ,IACV0C,GAAiB,EACjBD,GAAKA,GAAG,OAAOrC,EAAOoC,GAAS,OAAOpC,EAAOmC,EAAK,CAAC,CAAC,EAAE,MAAM,EAAGvC,CAAK,CAAC,GAEhEyC,EACT,CAEA,SAASE,EAASC,EAAKC,EAAGC,EAAKC,EAAM,CACnC,IAAIC,EAAMJ,EAAI,CAAC,EAAKC,EAAEC,GAAK,EACvBG,GAAML,EAAI,CAAC,EAAKC,EAAEC,GAAK,EACvBI,GAAMN,EAAI,CAAC,EAAKC,EAAEC,GAAK,EACvBK,GAAMP,EAAI,CAAC,EAAKC,EAAEC,GAAK,EACvBM,GAAMR,EAAI,CAAC,EAAKC,EAAEC,GAAK,EACvBO,GAAMT,EAAI,CAAC,EAAKC,EAAEC,GAAK,EACvBQ,GAAMV,EAAI,CAAC,EAAKC,EAAEC,GAAK,EACvBS,GAAMX,EAAI,CAAC,EAAKC,EAAEC,GAAK,EACvBU,GAAMZ,EAAI,CAAC,EAAKC,EAAEC,GAAK,EACvBW,GAAMb,EAAI,CAAC,EAAKC,EAAEC,GAAK,EACvBY,GAAMd,EAAI,EAAE,EAAIC,EAAEC,GAAK,EACvBa,GAAMf,EAAI,EAAE,EAAIC,EAAEC,GAAK,EACvBc,GAAMhB,EAAI,EAAE,EAAIC,EAAEC,GAAK,EACvBe,GAAMjB,EAAI,EAAE,EAAIC,EAAEC,GAAK,EACvBgB,GAAMlB,EAAI,EAAE,EAAIC,EAAEC,GAAK,EACvBiB,GAAMnB,EAAI,EAAE,EAAIC,EAAEC,GAAK,EACvBlB,EAAGC,GAEHmC,GAAKhB,EAAIiB,GAAKhB,GAAIiB,GAAKhB,GAAIiB,GAAKhB,GAAIiB,GAAKhB,GAAIiB,GAAKhB,GAAIiB,GAAKhB,GAAIiB,GAAKhB,GACpEiB,GAAKhB,GAAIiB,GAAKhB,GAAIiB,GAAMhB,GAAKiB,GAAMhB,GAAKiB,GAAMhB,GAAKiB,GAAMhB,GAAKiB,GAAMhB,GACpEiB,GAAMhB,GAEV,IAAKlC,GAAI,EAAGA,GAAI,EAAGA,IAAK,EACtBD,EAAKoC,GAAKY,GAAOR,IAAMxC,GAAG,EAAKA,IAAK,GACpCA,EAAKwC,GAAMJ,GAAMQ,IAAM5C,GAAG,EAAKA,IAAK,GACpCA,EAAK4C,GAAMJ,GAAKQ,IAAOhD,GAAG,GAAKA,IAAK,GACpCA,EAAIgD,GAAOJ,GAAMR,IAAMpC,GAAG,GAAKA,IAAK,GAEpCA,EAAKyC,GAAMJ,GAAMQ,IAAM7C,GAAG,EAAKA,IAAK,GACpCA,EAAK6C,GAAMJ,GAAKQ,IAAOjD,GAAG,EAAKA,IAAK,GACpCA,EAAIiD,GAAOJ,GAAMR,IAAMrC,GAAG,GAAKA,IAAK,GACpCA,EAAKqC,GAAKY,GAAOR,IAAMzC,GAAG,GAAKA,IAAK,GAEpCA,EAAI8C,GAAOJ,GAAKQ,IAAOlD,GAAG,EAAKA,IAAK,GACpCA,EAAIkD,GAAMJ,GAAOR,IAAMtC,GAAG,EAAKA,IAAK,GACpCA,EAAKsC,GAAKY,GAAOR,IAAM1C,GAAG,GAAKA,IAAK,GACpCA,EAAK0C,GAAMJ,GAAKQ,IAAO9C,GAAG,GAAKA,IAAK,GAEpCA,EAAImD,GAAMJ,GAAOR,IAAMvC,GAAG,EAAKA,IAAK,GACpCA,EAAKuC,GAAKY,GAAOR,IAAM3C,GAAG,EAAKA,IAAK,GACpCA,EAAK2C,GAAMJ,GAAKQ,IAAO/C,GAAG,GAAKA,IAAK,GACpCA,EAAI+C,GAAOJ,GAAKQ,IAAOnD,GAAG,GAAKA,IAAK,GAEpCA,EAAKoC,GAAMG,GAAMF,IAAMrC,GAAG,EAAKA,IAAK,GACpCA,EAAKqC,GAAMD,GAAME,IAAMtC,GAAG,EAAKA,IAAK,GACpCA,EAAKsC,GAAMD,GAAME,IAAMvC,GAAG,GAAKA,IAAK,GACpCA,EAAKuC,GAAMD,GAAMF,IAAMpC,GAAG,GAAKA,IAAK,GAEpCA,EAAKyC,GAAMD,GAAME,IAAM1C,GAAG,EAAKA,IAAK,GACpCA,EAAK0C,GAAMD,GAAME,IAAM3C,GAAG,EAAKA,IAAK,GACpCA,EAAK2C,GAAMD,GAAMF,IAAMxC,GAAG,GAAKA,IAAK,GACpCA,EAAKwC,GAAMG,GAAMF,IAAMzC,GAAG,GAAKA,IAAK,GAEpCA,EAAI8C,GAAOD,GAAKE,IAAO/C,GAAG,EAAKA,IAAK,GACpCA,EAAI+C,GAAMD,GAAOF,IAAM5C,GAAG,EAAKA,IAAK,GACpCA,EAAK4C,GAAKG,GAAOF,IAAM7C,GAAG,GAAKA,IAAK,GACpCA,EAAK6C,GAAMD,GAAKE,IAAO9C,GAAG,GAAKA,IAAK,GAEpCA,EAAImD,GAAMD,GAAMF,IAAOhD,GAAG,EAAKA,IAAK,GACpCA,EAAIgD,GAAMG,GAAMF,IAAOjD,GAAG,EAAKA,IAAK,GACpCA,EAAIiD,GAAMD,GAAME,IAAOlD,GAAG,GAAKA,IAAK,GACpCA,EAAIkD,GAAMD,GAAME,IAAOnD,GAAG,GAAKA,IAAK,GAGtCiB,EAAEE,GAAM,EAAIH,EAAI,CAAC,EAAMoB,GAAMhB,EAAO,EACpCH,EAAEE,GAAM,EAAIH,EAAI,CAAC,EAAMqB,GAAMhB,GAAO,EACpCJ,EAAEE,GAAM,EAAIH,EAAI,CAAC,EAAMsB,GAAMhB,GAAO,EACpCL,EAAEE,GAAM,EAAIH,EAAI,CAAC,EAAMuB,GAAMhB,GAAO,EACpCN,EAAEE,GAAM,EAAIH,EAAI,CAAC,EAAMwB,GAAMhB,GAAO,EACpCP,EAAEE,GAAM,EAAIH,EAAI,CAAC,EAAMyB,GAAMhB,GAAO,EACpCR,EAAEE,GAAM,EAAIH,EAAI,CAAC,EAAM0B,GAAMhB,GAAO,EACpCT,EAAEE,GAAM,EAAIH,EAAI,CAAC,EAAM2B,GAAMhB,GAAO,EACpCV,EAAEE,GAAM,EAAIH,EAAI,CAAC,EAAM4B,GAAMhB,GAAO,EACpCX,EAAEE,GAAM,EAAIH,EAAI,CAAC,EAAM6B,GAAMhB,GAAO,EACpCZ,EAAEE,GAAM,EAAIH,EAAI,EAAE,EAAK8B,GAAMhB,GAAO,EACpCb,EAAEE,GAAM,EAAIH,EAAI,EAAE,EAAK+B,GAAMhB,GAAO,EACpCd,EAAEE,GAAM,EAAIH,EAAI,EAAE,EAAKgC,GAAMhB,GAAO,EACpCf,EAAEE,GAAM,EAAIH,EAAI,EAAE,EAAKiC,GAAMhB,GAAO,EACpChB,EAAEE,GAAM,EAAIH,EAAI,EAAE,EAAKkC,GAAMhB,GAAO,EACpCjB,EAAEE,GAAM,EAAIH,EAAI,EAAE,EAAKmC,GAAMhB,GAAO,CACtC,CAEA,SAASiB,EAAUC,EAAKC,EAAIC,EAAKC,EAAIjE,EAAK,CACxC,KAAOA,KAAO8D,EAAIC,GAAI,EAAIC,EAAIC,GAAI,CACpC,CAEA,SAASC,GAASJ,EAAKC,EAAIC,EAAKC,EAAIjE,EAAK,CACvC,KAAOA,KAAO8D,EAAIC,GAAI,GAAKC,EAAIC,GAAI,CACrC,CAEA,SAASE,GAAS1C,EAAKC,EAAGC,EAAKC,EAAMhD,EAAG,CACtCiF,EAAUpC,EAAK,EAAGC,EAAGC,GAAO,EAAE/C,EAAE,GAAG,GAAI,EAAE,EACzC,QAAS8B,GAAI,EAAGA,GAAI,EAAE9B,EAAG8B,IAAK,EAC5Bc,EAASC,EAAKC,EAAGC,EAAMjB,GAAE,GAASkB,EAAOlB,GAAE,CAAC,EAC5Cc,EAASC,EAAKC,EAAGC,EAAMjB,GAAE,GAAK,GAAIkB,EAAOlB,GAAE,EAAI9B,EAAE,EAAE,CAEvD,CAEA,SAASwF,GAAW1C,EAAG2C,EAAIzF,EAAG,CAC5B,OAAO8C,EAAE2C,GAAI,EAAEzF,EAAE,GAAG,EAAE,CACxB,CAEA,SAAS0F,GAAkBC,EAAG,CAE5B,QADIC,EAAM,CAAC,EACF9D,EAAI,EAAGA,EAAI6D,EAAE,OAAQ7D,IAAK,CACjC,IAAIP,EAAIoE,EAAE,WAAW7D,CAAC,EACtB,GAAIP,EAAI,IACNqE,EAAI,KAAKrE,CAAC,UACDA,EAAI,KACbqE,EAAI,KAAK,IAAOrE,GAAK,CAAC,EACtBqE,EAAI,KAAK,IAAOrE,EAAI,EAAI,UACfA,EAAI,MACbqE,EAAI,KAAK,IAAOrE,GAAK,EAAE,EACvBqE,EAAI,KAAK,IAAQrE,GAAK,EAAK,EAAI,EAC/BqE,EAAI,KAAK,IAAOrE,EAAI,EAAI,MACnB,CACL,GAAIO,GAAK6D,EAAE,OAAS,EAClB,MAAM,IAAI,MAAM,gBAAgB,EAElC7D,IACAP,GAAKA,EAAI,OAAU,GACnBA,GAAKoE,EAAE,WAAW7D,CAAC,EAAI,KACvBP,GAAK,MAELqE,EAAI,KAAK,IAAOrE,GAAK,EAAE,EACvBqE,EAAI,KAAK,IAAQrE,GAAK,GAAM,EAAI,EAChCqE,EAAI,KAAK,IAAQrE,GAAK,EAAK,EAAI,EAC/BqE,EAAI,KAAK,IAAOrE,EAAI,EAAI,CAC1B,CACF,CACA,OAAOqE,CACT,CAEA,SAASC,GAAW3E,EAAG,CAQrB,QANI4E,EAAM,mBAAmB,MAAM,EAAE,EAEjC1E,EAAMF,EAAE,OACR0E,EAAM,CAAC,EACP9D,EAAI,EAEDA,EAAIV,EAAKU,IACZ8D,EAAI,KAAKE,EAAK5E,EAAEY,CAAC,IAAI,EAAK,EAAE,CAAC,EAC7B8D,EAAI,KAAKE,EAAK5E,EAAEY,CAAC,IAAI,EAAK,EAAE,CAAC,EAEjC,OAAO8D,EAAI,KAAK,EAAE,CACpB,CAEA,SAASG,GAAc7E,EAAG,CAUxB,QARI4E,EAAO,mEACe,MAAM,EAAE,EAE9B1E,EAAMF,EAAE,OACR0E,EAAM,CAAC,EACP9D,EAAI,EACJT,GAAGC,GAAGC,GAAGyE,GAENlE,EAAIV,GACTC,GAAIS,EAAIV,EAAMF,EAAEY,GAAG,EAAI,EACvBR,GAAIQ,EAAIV,EAAMF,EAAEY,GAAG,EAAI,EACvBP,GAAIO,EAAIV,EAAMF,EAAEY,GAAG,EAAI,EACvBkE,IAAK3E,IAAK,KAAOC,IAAK,GAAKC,GAC3BqE,EAAI,KAAKE,EAAKE,KAAM,EAAI,EAAK,EAAE,CAAC,EAChCJ,EAAI,KAAKE,EAAKE,KAAM,EAAI,EAAK,EAAE,CAAC,EAChCJ,EAAI,KAAKE,EAAKE,KAAM,EAAI,EAAK,EAAE,CAAC,EAChCJ,EAAI,KAAKE,EAAKE,KAAM,EAAI,EAAK,EAAE,CAAC,EAElC,OAAI5E,EAAM,EAAI,IACZwE,EAAIA,EAAI,OAAO,CAAC,EAAI,IAChBxE,EAAM,IAAM,IAAGwE,EAAIA,EAAI,OAAO,CAAC,EAAI,MAElCA,EAAI,KAAK,EAAE,CACpB,CAKA,IAAIK,GAAY,KAAM,EAClB/E,GAAI,EAER,GAAI,OAAOnB,GAAS,SAAU,CAE5B,GAAI,UAAU,OAAS,EACrB,MAAM,IAAI,MAAM,uCAAuC,EAGzD,IAAImG,GAAOnG,EAIX,GAFAI,EAAWH,EACXD,EAAOmG,GAAK,KACR,OAAOnG,EAAS,IAClB,GAAI,OAAOmG,GAAK,EAAM,IAAa,CACjC,GAAIA,GAAK,EAAI,GAAKA,GAAK,EAAID,GACzB,MAAM,IAAI,MAAM,2BAA2B,EAE7C,GAAKC,GAAK,EAAKA,GAAK,EAAI,EACtB,MAAM,IAAI,MAAM,+BAA+B,EAEjDnG,EAAO,KAAK,IAAImG,GAAK,CAAC,EAAI,KAAK,GACjC,KACE,OAAM,IAAI,MAAM,6BAA6B,EAOjDhF,GAAIgF,GAAK,GAAK,EACdlG,EAAIkG,GAAK,EACTjG,EAAQiG,GAAK,OAAS,GACtBhG,EAAgBgG,GAAK,eAAiB,EACtC9F,EAAW8F,GAAK,QAClB,CAEA,GAAIhF,GAAI,EACN,MAAM,IAAI,MAAM,mBAAmB,EAErC,GAAIlB,GAAK,EACP,MAAM,IAAI,MAAM,mBAAmB,EAErC,GAAID,EAAO,GAAKA,EAAO,GACrB,MAAM,IAAI,MAAM,uCAAuC,EAGzD,IAAIoG,GAAK,GAAGpG,IAAQ,EAChBqG,GAAIC,GAAGvD,GAAGD,GAEd,GAAI7C,EAAEkB,IAAK,GAAG,IAAMlB,EAAIiG,GAAS,IAAI/E,IAAKlB,EAAIiG,GAAS,KAAOE,GAAIF,GAAS,IAAIjG,EAC7E,MAAM,IAAI,MAAM,kCAAkC,EAGhD,OAAOH,GAAa,WACtBA,EAAW6F,GAAkB7F,CAAQ,GACnC,OAAOC,GAAS,WAClBA,EAAO4F,GAAkB5F,CAAI,GAE3B,OAAO,WAAe,KAExBsG,GAAK,IAAI,WAAW,GAAGpG,CAAC,EACxBqG,GAAI,IAAI,WAAW,GAAGF,GAAEnG,CAAC,EACzB6C,GAAM,IAAI,WAAW,EAAE,IAEvBuD,GAAK,CAAC,EACNC,GAAI,CAAC,EACLxD,GAAM,IAAI,MAAM,EAAE,GAEpBC,GAAIR,EAA2BzC,EAAUC,EAAMoB,GAAE,IAAIlB,CAAC,EAEtD,IAAIsG,GAAK,EAAGC,GAAK,GAAKvG,EAEtB,SAASwG,GAAUC,EAAK,CACtB,QAAS3E,EAAI,EAAGA,EAAI,GAAG9B,EAAG8B,IAAK,CAC7B,IAAIC,EAAI0E,EAAM3E,EAAE,EAChBsE,GAAGE,GAAGxE,CAAC,GAAMgB,GAAEf,EAAE,CAAC,EAAI,MAAO,IAAQe,GAAEf,EAAE,CAAC,EAAI,MAAO,IACxCe,GAAEf,EAAE,CAAC,EAAI,MAAO,GAAQe,GAAEf,EAAE,CAAC,EAAI,MAAO,CACvD,CACF,CAEA,SAAS2E,GAAUC,EAAOC,EAAK,CAC7B,QAAS9E,EAAI6E,EAAO7E,EAAI8E,EAAK9E,GAAK,EAChCmD,EAAUoB,GAAGvE,GAAG,GAAG9B,GAAIoG,GAAIE,GAAI,GAAGtG,CAAC,EACnCuF,GAAS1C,GAAKuD,GAAIE,GAAIC,GAAIvG,CAAC,EAE3BiF,EAAUoB,IAAIvE,EAAE,IAAI,GAAG9B,GAAIoG,GAAIG,GAAI,GAAGvG,CAAC,EACvCuF,GAAS1C,GAAKuD,GAAIG,GAAID,GAAItG,CAAC,CAE/B,CAEA,SAAS6G,GAAUF,EAAOC,EAAK,CAC7B,QAAS9E,EAAI6E,EAAO7E,EAAI8E,EAAK9E,GAAK,EAAG,CACnC,IAAIC,EAAIyD,GAAWY,GAAIE,GAAItG,CAAC,EAAKmG,GAAE,EACnCb,GAASc,GAAIE,GAAID,GAAGtE,GAAG,GAAG/B,GAAI,GAAGA,CAAC,EAClCuF,GAAS1C,GAAKuD,GAAIE,GAAIC,GAAIvG,CAAC,EAE3B+B,EAAIyD,GAAWY,GAAIG,GAAIvG,CAAC,EAAKmG,GAAE,EAC/Bb,GAASc,GAAIG,GAAIF,GAAGtE,GAAG,GAAG/B,GAAI,GAAGA,CAAC,EAClCuF,GAAS1C,GAAKuD,GAAIG,GAAID,GAAItG,CAAC,CAC7B,CACF,CAEA,SAAS8G,GAAWL,EAAK,CACvB,QAAS3E,EAAI,EAAGA,EAAI,GAAG9B,EAAG8B,IAAK,CAC7B,IAAIC,EAAIqE,GAAGE,GAAGxE,CAAC,EACfgB,GAAE2D,EAAM3E,EAAE,EAAI,CAAC,EAAKC,IAAI,EAAM,IAC9Be,GAAE2D,EAAM3E,EAAE,EAAI,CAAC,EAAKC,IAAI,EAAM,IAC9Be,GAAE2D,EAAM3E,EAAE,EAAI,CAAC,EAAKC,IAAI,GAAM,IAC9Be,GAAE2D,EAAM3E,EAAE,EAAI,CAAC,EAAKC,IAAI,GAAM,GAChC,CACF,CAEA,IAAIgF,GAAY,OAAO,aAAiB,IAAe,aAAe,WAEtE,SAASC,GAAeL,EAAOC,EAAKK,EAAMC,EAAIC,EAAQ,EACnD,SAASC,IAAc,CACtBL,GAAS,UAAW,CAClBG,EAAGP,EAAOA,EAAQM,EAAOL,EAAMD,EAAQM,EAAOL,CAAG,EACjDD,GAASM,EACLN,EAAQC,EACVQ,GAAY,EAEZD,EAAO,CACT,CAAC,CACL,GAAG,CACL,CAEA,SAASE,GAAUvB,EAAK,CACpB,IAAIwB,EAAShF,EAA2BzC,EAAUiD,GAAG7C,CAAK,EAC1D,OAAI6F,IAAQ,SACHC,GAAcuB,CAAM,EACpBxB,IAAQ,MACRD,GAAWyB,CAAM,EACjBxB,IAAQ,SACR,IAAI,WAAWwB,CAAM,EAErBA,CACb,CAGA,SAASC,IAAgB,CACvB,QAASzF,EAAI,EAAGA,EAAIZ,GAAGY,IACrB0E,GAAU1E,EAAE,IAAI9B,CAAC,EACjB0G,GAAU,EAAGP,EAAC,EACdU,GAAU,EAAGV,EAAC,EACdW,GAAWhF,EAAE,IAAI9B,CAAC,EAEpBG,EAASkH,GAAUjH,CAAQ,CAAC,CAC9B,CAGA,SAASoH,GAAe1F,EAAG,CACvB0E,GAAU1E,EAAE,IAAI9B,CAAC,EACjBgH,GAAe,EAAGb,GAAGjG,EAAc,EAAGwG,GAAW,UAAW,CAC1DM,GAAe,EAAGb,GAAGjG,EAAc,EAAG2G,GAAW,UAAY,CAC3DC,GAAWhF,EAAE,IAAI9B,CAAC,EACd8B,EAAI,EAAIZ,GACV6F,GAAS,UAAW,CAAES,GAAe1F,EAAI,CAAC,CAAG,CAAC,EAE9C3B,EAASkH,GAAUjH,CAAQ,CAAC,CAEhC,CAAC,CACH,CAAC,CACL,CAEI,OAAOF,GAAkB,aAG3BE,EAAWD,EACXA,EAAWD,EACXA,EAAgB,KAGdA,GAAiB,EACnBqH,GAAc,EAEdC,GAAe,CAAC,CAEpB,CAEI,OAAO7H,GAAW,MAAaA,GAAO,QAAUC,MC/iBpD,IAAA6H,GAAAC,GAAA,CAAAC,GAAAC,KAAA,EAAC,SAASC,EAAM,CAChB,aAQA,IAAIC,EAAK,SAASC,EAAM,CACtB,IAAI,EAAGC,EAAI,IAAI,aAAa,EAAE,EAC9B,GAAID,EAAM,IAAK,EAAI,EAAG,EAAIA,EAAK,OAAQ,IAAKC,EAAE,CAAC,EAAID,EAAK,CAAC,EACzD,OAAOC,CACT,EAGIC,EAAc,UAAqB,CAAE,MAAM,IAAI,MAAM,SAAS,CAAG,EAEjEC,EAAK,IAAI,WAAW,EAAE,EACtBC,EAAK,IAAI,WAAW,EAAE,EAAGA,EAAG,CAAC,EAAI,EAErC,IAAIC,EAAMN,EAAG,EACTO,EAAMP,EAAG,CAAC,CAAC,CAAC,EACZQ,EAAUR,EAAG,CAAC,MAAQ,CAAC,CAAC,EACxBS,EAAIT,EAAG,CAAC,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,IAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAM,CAAC,EACvIU,EAAKV,EAAG,CAAC,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,IAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,IAAM,CAAC,EACxIW,EAAIX,EAAG,CAAC,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,IAAM,CAAC,EACvIY,EAAIZ,EAAG,CAAC,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAM,CAAC,EACvIa,GAAIb,EAAG,CAAC,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,IAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAM,CAAC,EAE3I,SAASc,GAAKC,EAAG,EAAGC,EAAGC,EAAG,CACxBF,EAAE,CAAC,EAAOC,GAAK,GAAM,IACrBD,EAAE,EAAE,CAAC,EAAKC,GAAK,GAAM,IACrBD,EAAE,EAAE,CAAC,EAAKC,GAAM,EAAK,IACrBD,EAAE,EAAE,CAAC,EAAIC,EAAI,IACbD,EAAE,EAAE,CAAC,EAAKE,GAAK,GAAO,IACtBF,EAAE,EAAE,CAAC,EAAKE,GAAK,GAAO,IACtBF,EAAE,EAAE,CAAC,EAAKE,GAAM,EAAM,IACtBF,EAAE,EAAE,CAAC,EAAIE,EAAI,GACf,CAEA,SAASC,GAAGH,EAAGI,EAAIC,EAAGC,EAAIC,EAAG,CAC3B,IAAIC,EAAEC,EAAI,EACV,IAAKD,EAAI,EAAGA,EAAID,EAAGC,IAAKC,GAAKT,EAAEI,EAAGI,CAAC,EAAEH,EAAEC,EAAGE,CAAC,EAC3C,OAAQ,EAAMC,EAAI,IAAO,GAAM,CACjC,CAEA,SAASC,GAAiBV,EAAGI,EAAIC,EAAGC,EAAI,CACtC,OAAOH,GAAGH,EAAEI,EAAGC,EAAEC,EAAG,EAAE,CACxB,CAEA,SAASK,GAAiBX,EAAGI,EAAIC,EAAGC,EAAI,CACtC,OAAOH,GAAGH,EAAEI,EAAGC,EAAEC,EAAG,EAAE,CACxB,CAEA,SAASM,GAAaC,EAAGC,EAAGC,EAAGC,EAAG,CAsBhC,QArBIC,EAAMD,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAG,CAAC,EAAI,MAAO,IAAMA,EAAG,CAAC,EAAI,MAAO,GAC9EE,EAAMH,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAG,CAAC,EAAI,MAAO,IAAMA,EAAG,CAAC,EAAI,MAAO,GAC9EI,EAAMJ,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAG,CAAC,EAAI,MAAO,IAAMA,EAAG,CAAC,EAAI,MAAO,GAC9EK,EAAML,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9EM,EAAMN,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9EO,EAAMN,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAG,CAAC,EAAI,MAAO,IAAMA,EAAG,CAAC,EAAI,MAAO,GAC9EO,EAAMT,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAG,CAAC,EAAI,MAAO,IAAMA,EAAG,CAAC,EAAI,MAAO,GAC9EU,GAAMV,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAG,CAAC,EAAI,MAAO,IAAMA,EAAG,CAAC,EAAI,MAAO,GAC9EW,EAAMX,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9EY,EAAMZ,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9Ea,EAAMX,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9EY,EAAMb,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9Ec,EAAMd,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9Ee,EAAMf,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9EgB,EAAMhB,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9EiB,EAAMhB,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAE9EiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,GACpEiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAMhB,EAAKiB,EAAMhB,EAAKiB,EAAMhB,EAAKiB,GAAMhB,EAAKiB,GAAMhB,EACpEiB,GAAMhB,EAAKiB,EAENzC,GAAI,EAAGA,GAAI,GAAIA,IAAK,EAC3ByC,EAAIhB,EAAKY,EAAM,EACfR,GAAMY,GAAG,EAAIA,IAAK,GAClBA,EAAIZ,EAAKJ,EAAK,EACdQ,GAAMQ,GAAG,EAAIA,IAAK,GAClBA,EAAIR,EAAKJ,EAAK,EACdQ,GAAOI,GAAG,GAAKA,IAAK,GACpBA,EAAIJ,EAAMJ,EAAK,EACfR,GAAMgB,GAAG,GAAKA,IAAK,GAEnBA,EAAIX,EAAKJ,EAAK,EACdQ,GAAMO,GAAG,EAAIA,IAAK,GAClBA,EAAIP,EAAKJ,EAAK,EACdQ,IAAOG,GAAG,EAAIA,IAAK,GACnBA,EAAIH,GAAMJ,EAAK,EACfR,GAAMe,GAAG,GAAKA,IAAK,GACnBA,EAAIf,EAAKY,GAAM,EACfR,GAAMW,GAAG,GAAKA,IAAK,GAEnBA,EAAIN,EAAMJ,EAAK,EACfQ,IAAOE,GAAG,EAAIA,IAAK,GACnBA,EAAIF,GAAMJ,EAAM,EAChBR,GAAMc,GAAG,EAAIA,IAAK,GAClBA,EAAId,EAAKY,GAAM,EACfR,GAAMU,GAAG,GAAKA,IAAK,GACnBA,EAAIV,EAAKJ,EAAK,EACdQ,GAAOM,GAAG,GAAKA,IAAK,GAEpBA,EAAID,GAAMJ,EAAM,EAChBR,GAAMa,GAAG,EAAIA,IAAK,GAClBA,EAAIb,EAAKY,GAAM,EACfR,GAAMS,GAAG,EAAIA,IAAK,GAClBA,EAAIT,EAAKJ,EAAK,EACdQ,GAAOK,GAAG,GAAKA,IAAK,GACpBA,EAAIL,EAAMJ,EAAK,EACfQ,IAAOC,GAAG,GAAKA,IAAK,GAEpBA,EAAIhB,EAAKG,EAAK,EACdF,GAAMe,GAAG,EAAIA,IAAK,GAClBA,EAAIf,EAAKD,EAAK,EACdE,GAAMc,GAAG,EAAIA,IAAK,GAClBA,EAAId,EAAKD,EAAK,EACdE,GAAMa,GAAG,GAAKA,IAAK,GACnBA,EAAIb,EAAKD,EAAK,EACdF,GAAMgB,GAAG,GAAKA,IAAK,GAEnBA,EAAIX,EAAKD,EAAK,EACdE,GAAMU,GAAG,EAAIA,IAAK,GAClBA,EAAIV,EAAKD,EAAK,EACdE,GAAMS,GAAG,EAAIA,IAAK,GAClBA,EAAIT,EAAKD,EAAK,EACdF,GAAMY,GAAG,GAAKA,IAAK,GACnBA,EAAIZ,EAAKG,EAAK,EACdF,GAAMW,GAAG,GAAKA,IAAK,GAEnBA,EAAIN,EAAMD,EAAK,EACfE,GAAOK,GAAG,EAAIA,IAAK,GACnBA,EAAIL,EAAMD,EAAM,EAChBF,GAAMQ,GAAG,EAAIA,IAAK,GAClBA,EAAIR,EAAKG,EAAM,EACfF,GAAMO,GAAG,GAAKA,IAAK,GACnBA,EAAIP,EAAKD,EAAK,EACdE,GAAOM,GAAG,GAAKA,IAAK,GAEpBA,EAAID,GAAMD,GAAM,EAChBF,GAAOI,GAAG,EAAIA,IAAK,GACnBA,EAAIJ,EAAMG,GAAM,EAChBF,IAAOG,GAAG,EAAIA,IAAK,GACnBA,EAAIH,GAAMD,EAAM,EAChBE,IAAOE,GAAG,GAAKA,IAAK,GACpBA,EAAIF,GAAMD,GAAM,EAChBE,IAAOC,GAAG,GAAKA,IAAK,GAErBhB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,GAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EAClBiB,EAAMA,EAAMhB,EAAM,EAClBiB,EAAMA,EAAMhB,EAAM,EAClBiB,EAAMA,EAAMhB,EAAM,EAClBiB,GAAMA,GAAMhB,EAAM,EAClBiB,GAAMA,GAAMhB,EAAM,EAClBiB,GAAMA,GAAMhB,EAAM,EAElBnB,EAAG,CAAC,EAAIoB,IAAQ,EAAI,IACpBpB,EAAG,CAAC,EAAIoB,IAAQ,EAAI,IACpBpB,EAAG,CAAC,EAAIoB,IAAO,GAAK,IACpBpB,EAAG,CAAC,EAAIoB,IAAO,GAAK,IAEpBpB,EAAG,CAAC,EAAIqB,IAAQ,EAAI,IACpBrB,EAAG,CAAC,EAAIqB,IAAQ,EAAI,IACpBrB,EAAG,CAAC,EAAIqB,IAAO,GAAK,IACpBrB,EAAG,CAAC,EAAIqB,IAAO,GAAK,IAEpBrB,EAAG,CAAC,EAAIsB,IAAQ,EAAI,IACpBtB,EAAG,CAAC,EAAIsB,IAAQ,EAAI,IACpBtB,EAAE,EAAE,EAAIsB,IAAO,GAAK,IACpBtB,EAAE,EAAE,EAAIsB,IAAO,GAAK,IAEpBtB,EAAE,EAAE,EAAIuB,IAAQ,EAAI,IACpBvB,EAAE,EAAE,EAAIuB,IAAQ,EAAI,IACpBvB,EAAE,EAAE,EAAIuB,IAAO,GAAK,IACpBvB,EAAE,EAAE,EAAIuB,IAAO,GAAK,IAEpBvB,EAAE,EAAE,EAAIwB,IAAQ,EAAI,IACpBxB,EAAE,EAAE,EAAIwB,IAAQ,EAAI,IACpBxB,EAAE,EAAE,EAAIwB,IAAO,GAAK,IACpBxB,EAAE,EAAE,EAAIwB,IAAO,GAAK,IAEpBxB,EAAE,EAAE,EAAIyB,IAAQ,EAAI,IACpBzB,EAAE,EAAE,EAAIyB,IAAQ,EAAI,IACpBzB,EAAE,EAAE,EAAIyB,IAAO,GAAK,IACpBzB,EAAE,EAAE,EAAIyB,IAAO,GAAK,IAEpBzB,EAAE,EAAE,EAAI0B,IAAQ,EAAI,IACpB1B,EAAE,EAAE,EAAI0B,IAAQ,EAAI,IACpB1B,EAAE,EAAE,EAAI0B,IAAO,GAAK,IACpB1B,EAAE,EAAE,EAAI0B,IAAO,GAAK,IAEpB1B,EAAE,EAAE,EAAI2B,IAAQ,EAAI,IACpB3B,EAAE,EAAE,EAAI2B,IAAQ,EAAI,IACpB3B,EAAE,EAAE,EAAI2B,IAAO,GAAK,IACpB3B,EAAE,EAAE,EAAI2B,IAAO,GAAK,IAEpB3B,EAAE,EAAE,EAAI4B,IAAQ,EAAI,IACpB5B,EAAE,EAAE,EAAI4B,IAAQ,EAAI,IACpB5B,EAAE,EAAE,EAAI4B,IAAO,GAAK,IACpB5B,EAAE,EAAE,EAAI4B,IAAO,GAAK,IAEpB5B,EAAE,EAAE,EAAI6B,IAAQ,EAAI,IACpB7B,EAAE,EAAE,EAAI6B,IAAQ,EAAI,IACpB7B,EAAE,EAAE,EAAI6B,IAAO,GAAK,IACpB7B,EAAE,EAAE,EAAI6B,IAAO,GAAK,IAEpB7B,EAAE,EAAE,EAAI8B,IAAS,EAAI,IACrB9B,EAAE,EAAE,EAAI8B,IAAS,EAAI,IACrB9B,EAAE,EAAE,EAAI8B,IAAQ,GAAK,IACrB9B,EAAE,EAAE,EAAI8B,IAAQ,GAAK,IAErB9B,EAAE,EAAE,EAAI+B,IAAS,EAAI,IACrB/B,EAAE,EAAE,EAAI+B,IAAS,EAAI,IACrB/B,EAAE,EAAE,EAAI+B,IAAQ,GAAK,IACrB/B,EAAE,EAAE,EAAI+B,IAAQ,GAAK,IAErB/B,EAAE,EAAE,EAAIgC,IAAS,EAAI,IACrBhC,EAAE,EAAE,EAAIgC,IAAS,EAAI,IACrBhC,EAAE,EAAE,EAAIgC,IAAQ,GAAK,IACrBhC,EAAE,EAAE,EAAIgC,IAAQ,GAAK,IAErBhC,EAAE,EAAE,EAAIiC,KAAS,EAAI,IACrBjC,EAAE,EAAE,EAAIiC,KAAS,EAAI,IACrBjC,EAAE,EAAE,EAAIiC,KAAQ,GAAK,IACrBjC,EAAE,EAAE,EAAIiC,KAAQ,GAAK,IAErBjC,EAAE,EAAE,EAAIkC,KAAS,EAAI,IACrBlC,EAAE,EAAE,EAAIkC,KAAS,EAAI,IACrBlC,EAAE,EAAE,EAAIkC,KAAQ,GAAK,IACrBlC,EAAE,EAAE,EAAIkC,KAAQ,GAAK,IAErBlC,EAAE,EAAE,EAAImC,KAAS,EAAI,IACrBnC,EAAE,EAAE,EAAImC,KAAS,EAAI,IACrBnC,EAAE,EAAE,EAAImC,KAAQ,GAAK,IACrBnC,EAAE,EAAE,EAAImC,KAAQ,GAAK,GACvB,CAEA,SAASE,GAAcrC,EAAEC,EAAEC,EAAEC,EAAG,CAsB9B,QArBIC,EAAMD,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAG,CAAC,EAAI,MAAO,IAAMA,EAAG,CAAC,EAAI,MAAO,GAC9EE,EAAMH,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAG,CAAC,EAAI,MAAO,IAAMA,EAAG,CAAC,EAAI,MAAO,GAC9EI,EAAMJ,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAG,CAAC,EAAI,MAAO,IAAMA,EAAG,CAAC,EAAI,MAAO,GAC9EK,EAAML,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9EM,EAAMN,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9EO,EAAMN,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAG,CAAC,EAAI,MAAO,IAAMA,EAAG,CAAC,EAAI,MAAO,GAC9EO,EAAMT,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAG,CAAC,EAAI,MAAO,IAAMA,EAAG,CAAC,EAAI,MAAO,GAC9EU,GAAMV,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAG,CAAC,EAAI,MAAO,IAAMA,EAAG,CAAC,EAAI,MAAO,GAC9EW,EAAMX,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9EY,EAAMZ,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9Ea,EAAMX,EAAG,CAAC,EAAI,KAAQA,EAAG,CAAC,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9EY,EAAMb,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9Ec,EAAMd,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9Ee,EAAMf,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9EgB,EAAMhB,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAC9EiB,EAAMhB,EAAE,EAAE,EAAI,KAAQA,EAAE,EAAE,EAAI,MAAO,GAAKA,EAAE,EAAE,EAAI,MAAO,IAAMA,EAAE,EAAE,EAAI,MAAO,GAE9EiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,GACpEiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAMhB,EAAKiB,EAAMhB,EAAKiB,EAAMhB,EAAKiB,GAAMhB,EAAKiB,GAAMhB,EACpEiB,GAAMhB,EAAKiB,EAENzC,GAAI,EAAGA,GAAI,GAAIA,IAAK,EAC3ByC,EAAIhB,EAAKY,EAAM,EACfR,GAAMY,GAAG,EAAIA,IAAK,GAClBA,EAAIZ,EAAKJ,EAAK,EACdQ,GAAMQ,GAAG,EAAIA,IAAK,GAClBA,EAAIR,EAAKJ,EAAK,EACdQ,GAAOI,GAAG,GAAKA,IAAK,GACpBA,EAAIJ,EAAMJ,EAAK,EACfR,GAAMgB,GAAG,GAAKA,IAAK,GAEnBA,EAAIX,EAAKJ,EAAK,EACdQ,GAAMO,GAAG,EAAIA,IAAK,GAClBA,EAAIP,EAAKJ,EAAK,EACdQ,IAAOG,GAAG,EAAIA,IAAK,GACnBA,EAAIH,GAAMJ,EAAK,EACfR,GAAMe,GAAG,GAAKA,IAAK,GACnBA,EAAIf,EAAKY,GAAM,EACfR,GAAMW,GAAG,GAAKA,IAAK,GAEnBA,EAAIN,EAAMJ,EAAK,EACfQ,IAAOE,GAAG,EAAIA,IAAK,GACnBA,EAAIF,GAAMJ,EAAM,EAChBR,GAAMc,GAAG,EAAIA,IAAK,GAClBA,EAAId,EAAKY,GAAM,EACfR,GAAMU,GAAG,GAAKA,IAAK,GACnBA,EAAIV,EAAKJ,EAAK,EACdQ,GAAOM,GAAG,GAAKA,IAAK,GAEpBA,EAAID,GAAMJ,EAAM,EAChBR,GAAMa,GAAG,EAAIA,IAAK,GAClBA,EAAIb,EAAKY,GAAM,EACfR,GAAMS,GAAG,EAAIA,IAAK,GAClBA,EAAIT,EAAKJ,EAAK,EACdQ,GAAOK,GAAG,GAAKA,IAAK,GACpBA,EAAIL,EAAMJ,EAAK,EACfQ,IAAOC,GAAG,GAAKA,IAAK,GAEpBA,EAAIhB,EAAKG,EAAK,EACdF,GAAMe,GAAG,EAAIA,IAAK,GAClBA,EAAIf,EAAKD,EAAK,EACdE,GAAMc,GAAG,EAAIA,IAAK,GAClBA,EAAId,EAAKD,EAAK,EACdE,GAAMa,GAAG,GAAKA,IAAK,GACnBA,EAAIb,EAAKD,EAAK,EACdF,GAAMgB,GAAG,GAAKA,IAAK,GAEnBA,EAAIX,EAAKD,EAAK,EACdE,GAAMU,GAAG,EAAIA,IAAK,GAClBA,EAAIV,EAAKD,EAAK,EACdE,GAAMS,GAAG,EAAIA,IAAK,GAClBA,EAAIT,EAAKD,EAAK,EACdF,GAAMY,GAAG,GAAKA,IAAK,GACnBA,EAAIZ,EAAKG,EAAK,EACdF,GAAMW,GAAG,GAAKA,IAAK,GAEnBA,EAAIN,EAAMD,EAAK,EACfE,GAAOK,GAAG,EAAIA,IAAK,GACnBA,EAAIL,EAAMD,EAAM,EAChBF,GAAMQ,GAAG,EAAIA,IAAK,GAClBA,EAAIR,EAAKG,EAAM,EACfF,GAAMO,GAAG,GAAKA,IAAK,GACnBA,EAAIP,EAAKD,EAAK,EACdE,GAAOM,GAAG,GAAKA,IAAK,GAEpBA,EAAID,GAAMD,GAAM,EAChBF,GAAOI,GAAG,EAAIA,IAAK,GACnBA,EAAIJ,EAAMG,GAAM,EAChBF,IAAOG,GAAG,EAAIA,IAAK,GACnBA,EAAIH,GAAMD,EAAM,EAChBE,IAAOE,GAAG,GAAKA,IAAK,GACpBA,EAAIF,GAAMD,GAAM,EAChBE,IAAOC,GAAG,GAAKA,IAAK,GAGtBpC,EAAG,CAAC,EAAIoB,IAAQ,EAAI,IACpBpB,EAAG,CAAC,EAAIoB,IAAQ,EAAI,IACpBpB,EAAG,CAAC,EAAIoB,IAAO,GAAK,IACpBpB,EAAG,CAAC,EAAIoB,IAAO,GAAK,IAEpBpB,EAAG,CAAC,EAAIyB,IAAQ,EAAI,IACpBzB,EAAG,CAAC,EAAIyB,IAAQ,EAAI,IACpBzB,EAAG,CAAC,EAAIyB,IAAO,GAAK,IACpBzB,EAAG,CAAC,EAAIyB,IAAO,GAAK,IAEpBzB,EAAG,CAAC,EAAI8B,IAAS,EAAI,IACrB9B,EAAG,CAAC,EAAI8B,IAAS,EAAI,IACrB9B,EAAE,EAAE,EAAI8B,IAAQ,GAAK,IACrB9B,EAAE,EAAE,EAAI8B,IAAQ,GAAK,IAErB9B,EAAE,EAAE,EAAImC,KAAS,EAAI,IACrBnC,EAAE,EAAE,EAAImC,KAAS,EAAI,IACrBnC,EAAE,EAAE,EAAImC,KAAQ,GAAK,IACrBnC,EAAE,EAAE,EAAImC,KAAQ,GAAK,IAErBnC,EAAE,EAAE,EAAI0B,IAAQ,EAAI,IACpB1B,EAAE,EAAE,EAAI0B,IAAQ,EAAI,IACpB1B,EAAE,EAAE,EAAI0B,IAAO,GAAK,IACpB1B,EAAE,EAAE,EAAI0B,IAAO,GAAK,IAEpB1B,EAAE,EAAE,EAAI2B,IAAQ,EAAI,IACpB3B,EAAE,EAAE,EAAI2B,IAAQ,EAAI,IACpB3B,EAAE,EAAE,EAAI2B,IAAO,GAAK,IACpB3B,EAAE,EAAE,EAAI2B,IAAO,GAAK,IAEpB3B,EAAE,EAAE,EAAI4B,IAAQ,EAAI,IACpB5B,EAAE,EAAE,EAAI4B,IAAQ,EAAI,IACpB5B,EAAE,EAAE,EAAI4B,IAAO,GAAK,IACpB5B,EAAE,EAAE,EAAI4B,IAAO,GAAK,IAEpB5B,EAAE,EAAE,EAAI6B,IAAQ,EAAI,IACpB7B,EAAE,EAAE,EAAI6B,IAAQ,EAAI,IACpB7B,EAAE,EAAE,EAAI6B,IAAO,GAAK,IACpB7B,EAAE,EAAE,EAAI6B,IAAO,GAAK,GACtB,CAEA,SAASS,GAAoBC,EAAIC,EAAItC,EAAEC,EAAG,CACxCJ,GAAawC,EAAIC,EAAItC,EAAEC,CAAC,CAC1B,CAEA,SAASsC,GAAqBF,EAAIC,EAAItC,EAAEC,EAAG,CACzCkC,GAAcE,EAAIC,EAAItC,EAAEC,CAAC,CAC3B,CAEA,IAAIuC,GAAQ,IAAI,WAAW,CAAC,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAG,CAAC,EAGpG,SAASC,GAA0BxC,EAAEyC,EAAKC,EAAEC,EAAKC,EAAErD,EAAEQ,EAAG,CACtD,IAAI8C,EAAI,IAAI,WAAW,EAAE,EAAG7D,EAAI,IAAI,WAAW,EAAE,EAC7CiD,EAAGzC,EACP,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKqD,EAAErD,CAAC,EAAI,EAChC,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IAAKqD,EAAErD,CAAC,EAAID,EAAEC,CAAC,EAClC,KAAOoD,GAAK,IAAI,CAEd,IADAT,GAAoBnD,EAAE6D,EAAE9C,EAAEwC,EAAK,EAC1B/C,EAAI,EAAGA,EAAI,GAAIA,IAAKQ,EAAEyC,EAAKjD,CAAC,EAAIkD,EAAEC,EAAKnD,CAAC,EAAIR,EAAEQ,CAAC,EAEpD,IADAyC,EAAI,EACCzC,EAAI,EAAGA,EAAI,GAAIA,IAClByC,EAAIA,GAAKY,EAAErD,CAAC,EAAI,KAAQ,EACxBqD,EAAErD,CAAC,EAAIyC,EAAI,IACXA,KAAO,EAETW,GAAK,GACLH,GAAQ,GACRE,GAAQ,EACV,CACA,GAAIC,EAAI,EAEN,IADAT,GAAoBnD,EAAE6D,EAAE9C,EAAEwC,EAAK,EAC1B/C,EAAI,EAAGA,EAAIoD,EAAGpD,IAAKQ,EAAEyC,EAAKjD,CAAC,EAAIkD,EAAEC,EAAKnD,CAAC,EAAIR,EAAEQ,CAAC,EAErD,MAAO,EACT,CAEA,SAASsD,GAAsB9C,EAAEyC,EAAKG,EAAErD,EAAEQ,EAAG,CAC3C,IAAI8C,EAAI,IAAI,WAAW,EAAE,EAAG7D,EAAI,IAAI,WAAW,EAAE,EAC7CiD,EAAGzC,EACP,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKqD,EAAErD,CAAC,EAAI,EAChC,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IAAKqD,EAAErD,CAAC,EAAID,EAAEC,CAAC,EAClC,KAAOoD,GAAK,IAAI,CAEd,IADAT,GAAoBnD,EAAE6D,EAAE9C,EAAEwC,EAAK,EAC1B/C,EAAI,EAAGA,EAAI,GAAIA,IAAKQ,EAAEyC,EAAKjD,CAAC,EAAIR,EAAEQ,CAAC,EAExC,IADAyC,EAAI,EACCzC,EAAI,EAAGA,EAAI,GAAIA,IAClByC,EAAIA,GAAKY,EAAErD,CAAC,EAAI,KAAQ,EACxBqD,EAAErD,CAAC,EAAIyC,EAAI,IACXA,KAAO,EAETW,GAAK,GACLH,GAAQ,EACV,CACA,GAAIG,EAAI,EAEN,IADAT,GAAoBnD,EAAE6D,EAAE9C,EAAEwC,EAAK,EAC1B/C,EAAI,EAAGA,EAAIoD,EAAGpD,IAAKQ,EAAEyC,EAAKjD,CAAC,EAAIR,EAAEQ,CAAC,EAEzC,MAAO,EACT,CAEA,SAASuD,GAAc/C,EAAEyC,EAAKhD,EAAEF,EAAEQ,EAAG,CACnC,IAAIiD,EAAI,IAAI,WAAW,EAAE,EACzBV,GAAqBU,EAAEzD,EAAEQ,EAAEwC,EAAK,EAEhC,QADIU,EAAK,IAAI,WAAW,CAAC,EAChBzD,EAAI,EAAGA,EAAI,EAAGA,IAAKyD,EAAGzD,CAAC,EAAID,EAAEC,EAAE,EAAE,EAC1C,OAAOsD,GAAsB9C,EAAEyC,EAAKhD,EAAEwD,EAAGD,CAAC,CAC5C,CAEA,SAASE,GAAkBlD,EAAEyC,EAAKC,EAAEC,EAAKlD,EAAEF,EAAEQ,EAAG,CAC9C,IAAIiD,EAAI,IAAI,WAAW,EAAE,EACzBV,GAAqBU,EAAEzD,EAAEQ,EAAEwC,EAAK,EAEhC,QADIU,EAAK,IAAI,WAAW,CAAC,EAChBzD,EAAI,EAAGA,EAAI,EAAGA,IAAKyD,EAAGzD,CAAC,EAAID,EAAEC,EAAE,EAAE,EAC1C,OAAOgD,GAA0BxC,EAAEyC,EAAKC,EAAEC,EAAKlD,EAAEwD,EAAGD,CAAC,CACvD,CAOA,IAAIG,GAAW,SAASC,EAAK,CAC3B,KAAK,OAAS,IAAI,WAAW,EAAE,EAC/B,KAAK,EAAI,IAAI,YAAY,EAAE,EAC3B,KAAK,EAAI,IAAI,YAAY,EAAE,EAC3B,KAAK,IAAM,IAAI,YAAY,CAAC,EAC5B,KAAK,SAAW,EAChB,KAAK,IAAM,EAEX,IAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAEhCP,EAAKD,EAAK,CAAC,EAAI,KAAQA,EAAK,CAAC,EAAI,MAAS,EAAG,KAAK,EAAE,CAAC,EAAMC,EAA2B,KACtFC,EAAKF,EAAK,CAAC,EAAI,KAAQA,EAAK,CAAC,EAAI,MAAS,EAAG,KAAK,EAAE,CAAC,GAAMC,IAAO,GAAOC,GAAO,GAAM,KACtFC,EAAKH,EAAK,CAAC,EAAI,KAAQA,EAAK,CAAC,EAAI,MAAS,EAAG,KAAK,EAAE,CAAC,GAAME,IAAO,GAAOC,GAAO,GAAM,KACtFC,EAAKJ,EAAK,CAAC,EAAI,KAAQA,EAAK,CAAC,EAAI,MAAS,EAAG,KAAK,EAAE,CAAC,GAAMG,IAAQ,EAAMC,GAAO,GAAM,KACtFC,EAAKL,EAAK,CAAC,EAAI,KAAQA,EAAK,CAAC,EAAI,MAAS,EAAG,KAAK,EAAE,CAAC,GAAMI,IAAQ,EAAMC,GAAM,IAAO,IACtF,KAAK,EAAE,CAAC,EAAMA,IAAQ,EAAM,KAC5BC,EAAKN,EAAI,EAAE,EAAI,KAAQA,EAAI,EAAE,EAAI,MAAS,EAAG,KAAK,EAAE,CAAC,GAAMK,IAAO,GAAOC,GAAO,GAAM,KACtFC,EAAKP,EAAI,EAAE,EAAI,KAAQA,EAAI,EAAE,EAAI,MAAS,EAAG,KAAK,EAAE,CAAC,GAAMM,IAAO,GAAOC,GAAO,GAAM,KACtFC,EAAKR,EAAI,EAAE,EAAI,KAAQA,EAAI,EAAE,EAAI,MAAS,EAAG,KAAK,EAAE,CAAC,GAAMO,IAAQ,EAAMC,GAAO,GAAM,KACtF,KAAK,EAAE,CAAC,EAAMA,IAAQ,EAAM,IAE5B,KAAK,IAAI,CAAC,EAAIR,EAAI,EAAE,EAAI,KAAQA,EAAI,EAAE,EAAI,MAAS,EACnD,KAAK,IAAI,CAAC,EAAIA,EAAI,EAAE,EAAI,KAAQA,EAAI,EAAE,EAAI,MAAS,EACnD,KAAK,IAAI,CAAC,EAAIA,EAAI,EAAE,EAAI,KAAQA,EAAI,EAAE,EAAI,MAAS,EACnD,KAAK,IAAI,CAAC,EAAIA,EAAI,EAAE,EAAI,KAAQA,EAAI,EAAE,EAAI,MAAS,EACnD,KAAK,IAAI,CAAC,EAAIA,EAAI,EAAE,EAAI,KAAQA,EAAI,EAAE,EAAI,MAAS,EACnD,KAAK,IAAI,CAAC,EAAIA,EAAI,EAAE,EAAI,KAAQA,EAAI,EAAE,EAAI,MAAS,EACnD,KAAK,IAAI,CAAC,EAAIA,EAAI,EAAE,EAAI,KAAQA,EAAI,EAAE,EAAI,MAAS,EACnD,KAAK,IAAI,CAAC,EAAIA,EAAI,EAAE,EAAI,KAAQA,EAAI,EAAE,EAAI,MAAS,CACrD,EAEAD,GAAS,UAAU,OAAS,SAAST,EAAGC,EAAMkB,EAAO,CA2BnD,QA1BIC,EAAQ,KAAK,IAAM,EAAK,KACxBT,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAAI5D,EAChC+D,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAEpCC,EAAK,KAAK,EAAE,CAAC,EACbC,EAAK,KAAK,EAAE,CAAC,EACbC,EAAK,KAAK,EAAE,CAAC,EACbC,EAAK,KAAK,EAAE,CAAC,EACbC,EAAK,KAAK,EAAE,CAAC,EACbC,EAAK,KAAK,EAAE,CAAC,EACbC,EAAK,KAAK,EAAE,CAAC,EACbC,EAAK,KAAK,EAAE,CAAC,EACbC,EAAK,KAAK,EAAE,CAAC,EACbC,EAAK,KAAK,EAAE,CAAC,EAEbC,GAAK,KAAK,EAAE,CAAC,EACbC,GAAK,KAAK,EAAE,CAAC,EACbC,GAAK,KAAK,EAAE,CAAC,EACbC,EAAK,KAAK,EAAE,CAAC,EACbC,GAAK,KAAK,EAAE,CAAC,EACbC,GAAK,KAAK,EAAE,CAAC,EACbC,GAAK,KAAK,EAAE,CAAC,EACbC,GAAK,KAAK,EAAE,CAAC,EACbC,GAAK,KAAK,EAAE,CAAC,EACbC,GAAK,KAAK,EAAE,CAAC,EAEV/B,GAAS,IACdR,EAAKX,EAAEC,EAAM,CAAC,EAAI,KAAQD,EAAEC,EAAM,CAAC,EAAI,MAAS,EAAG8B,GAAQpB,EAA2B,KACtFC,EAAKZ,EAAEC,EAAM,CAAC,EAAI,KAAQD,EAAEC,EAAM,CAAC,EAAI,MAAS,EAAG+B,IAAQrB,IAAO,GAAOC,GAAO,GAAM,KACtFC,EAAKb,EAAEC,EAAM,CAAC,EAAI,KAAQD,EAAEC,EAAM,CAAC,EAAI,MAAS,EAAGgC,IAAQrB,IAAO,GAAOC,GAAO,GAAM,KACtFC,EAAKd,EAAEC,EAAM,CAAC,EAAI,KAAQD,EAAEC,EAAM,CAAC,EAAI,MAAS,EAAGiC,IAAQrB,IAAQ,EAAMC,GAAO,GAAM,KACtFC,EAAKf,EAAEC,EAAM,CAAC,EAAI,KAAQD,EAAEC,EAAM,CAAC,EAAI,MAAS,EAAGkC,IAAQrB,IAAQ,EAAMC,GAAM,IAAO,KACtFqB,GAAQrB,IAAQ,EAAM,KACtBC,EAAKhB,EAAEC,EAAK,EAAE,EAAI,KAAQD,EAAEC,EAAK,EAAE,EAAI,MAAS,EAAGoC,IAAQtB,IAAO,GAAOC,GAAO,GAAM,KACtFC,EAAKjB,EAAEC,EAAK,EAAE,EAAI,KAAQD,EAAEC,EAAK,EAAE,EAAI,MAAS,EAAGqC,IAAQtB,IAAO,GAAOC,GAAO,GAAM,KACtFC,GAAKlB,EAAEC,EAAK,EAAE,EAAI,KAAQD,EAAEC,EAAK,EAAE,EAAI,MAAS,EAAGsC,IAAQtB,IAAQ,EAAMC,IAAO,GAAM,KACtFsB,GAAQtB,KAAO,EAAME,EAErB9D,EAAI,EAEJ+D,EAAK/D,EACL+D,GAAMU,EAAKU,GACXpB,GAAMW,GAAM,EAAIkB,IAChB7B,GAAMY,GAAM,EAAIgB,IAChB5B,GAAMa,GAAM,EAAIc,IAChB3B,GAAMc,GAAM,EAAIY,IAChBzF,EAAK+D,IAAO,GAAKA,GAAM,KACvBA,GAAMe,GAAM,EAAIU,IAChBzB,GAAMgB,GAAM,EAAIQ,IAChBxB,GAAMiB,GAAM,EAAIM,GAChBvB,GAAMkB,GAAM,EAAII,IAChBtB,GAAMmB,GAAM,EAAIE,IAChBpF,GAAM+D,IAAO,GAAKA,GAAM,KAExBC,EAAKhE,EACLgE,GAAMS,EAAKW,GACXpB,GAAMU,EAAKS,GACXnB,GAAMW,GAAM,EAAIiB,IAChB5B,GAAMY,GAAM,EAAIe,IAChB3B,GAAMa,GAAM,EAAIa,IAChB1F,EAAKgE,IAAO,GAAKA,GAAM,KACvBA,GAAMc,GAAM,EAAIW,IAChBzB,GAAMe,GAAM,EAAIS,IAChBxB,GAAMgB,GAAM,EAAIO,IAChBvB,GAAMiB,GAAM,EAAIK,GAChBtB,GAAMkB,GAAM,EAAIG,IAChBrF,GAAMgE,IAAO,GAAKA,GAAM,KAExBC,EAAKjE,EACLiE,GAAMQ,EAAKY,GACXpB,GAAMS,EAAKU,GACXnB,GAAMU,EAAKQ,GACXlB,GAAMW,GAAM,EAAIgB,IAChB3B,GAAMY,GAAM,EAAIc,IAChB3F,EAAKiE,IAAO,GAAKA,GAAM,KACvBA,GAAMa,GAAM,EAAIY,IAChBzB,GAAMc,GAAM,EAAIU,IAChBxB,GAAMe,GAAM,EAAIQ,IAChBvB,GAAMgB,GAAM,EAAIM,IAChBtB,GAAMiB,GAAM,EAAII,GAChBtF,GAAMiE,IAAO,GAAKA,GAAM,KAExBC,EAAKlE,EACLkE,GAAMO,EAAKa,EACXpB,GAAMQ,EAAKW,GACXnB,GAAMS,EAAKS,GACXlB,GAAMU,EAAKO,GACXjB,GAAMW,GAAM,EAAIe,IAChB5F,EAAKkE,IAAO,GAAKA,GAAM,KACvBA,GAAMY,GAAM,EAAIa,IAChBzB,GAAMa,GAAM,EAAIW,IAChBxB,GAAMc,GAAM,EAAIS,IAChBvB,GAAMe,GAAM,EAAIO,IAChBtB,GAAMgB,GAAM,EAAIK,IAChBvF,GAAMkE,IAAO,GAAKA,GAAM,KAExBC,EAAKnE,EACLmE,GAAMM,EAAKc,GACXpB,GAAMO,EAAKY,EACXnB,GAAMQ,EAAKU,GACXlB,GAAMS,EAAKQ,GACXjB,GAAMU,EAAKM,GACXnF,EAAKmE,IAAO,GAAKA,GAAM,KACvBA,GAAMW,GAAM,EAAIc,IAChBzB,GAAMY,GAAM,EAAIY,IAChBxB,GAAMa,GAAM,EAAIU,IAChBvB,GAAMc,GAAM,EAAIQ,IAChBtB,GAAMe,GAAM,EAAIM,IAChBxF,GAAMmE,IAAO,GAAKA,GAAM,KAExBC,EAAKpE,EACLoE,GAAMK,EAAKe,GACXpB,GAAMM,EAAKa,GACXnB,GAAMO,EAAKW,EACXlB,GAAMQ,EAAKS,GACXjB,GAAMS,EAAKO,GACXpF,EAAKoE,IAAO,GAAKA,GAAM,KACvBA,GAAMU,EAAKK,GACXf,GAAMW,GAAM,EAAIa,IAChBxB,GAAMY,GAAM,EAAIW,IAChBvB,GAAMa,GAAM,EAAIS,IAChBtB,GAAMc,GAAM,EAAIO,IAChBzF,GAAMoE,IAAO,GAAKA,GAAM,KAExBC,EAAKrE,EACLqE,GAAMI,EAAKgB,GACXpB,GAAMK,EAAKc,GACXnB,GAAMM,EAAKY,GACXlB,GAAMO,EAAKU,EACXjB,GAAMQ,EAAKQ,GACXrF,EAAKqE,IAAO,GAAKA,GAAM,KACvBA,GAAMS,EAAKM,GACXf,GAAMU,EAAKI,GACXd,GAAMW,GAAM,EAAIY,IAChBvB,GAAMY,GAAM,EAAIU,IAChBtB,GAAMa,GAAM,EAAIQ,IAChB1F,GAAMqE,IAAO,GAAKA,GAAM,KAExBC,EAAKtE,EACLsE,GAAMG,EAAKiB,GACXpB,GAAMI,EAAKe,GACXnB,GAAMK,EAAKa,GACXlB,GAAMM,EAAKW,GACXjB,GAAMO,EAAKS,EACXtF,EAAKsE,IAAO,GAAKA,GAAM,KACvBA,GAAMQ,EAAKO,GACXf,GAAMS,EAAKK,GACXd,GAAMU,EAAKG,GACXb,GAAMW,GAAM,EAAIW,IAChBtB,GAAMY,GAAM,EAAIS,IAChB3F,GAAMsE,IAAO,GAAKA,GAAM,KAExBC,EAAKvE,EACLuE,GAAME,EAAKkB,GACXpB,GAAMG,EAAKgB,GACXnB,GAAMI,EAAKc,GACXlB,GAAMK,EAAKY,GACXjB,GAAMM,EAAKU,GACXvF,EAAKuE,IAAO,GAAKA,GAAM,KACvBA,GAAMO,EAAKQ,EACXf,GAAMQ,EAAKM,GACXd,GAAMS,EAAKI,GACXb,GAAMU,EAAKE,GACXZ,GAAMW,GAAM,EAAIU,IAChB5F,GAAMuE,IAAO,GAAKA,GAAM,KAExBC,EAAKxE,EACLwE,GAAMC,EAAKmB,GACXpB,GAAME,EAAKiB,GACXnB,GAAMG,EAAKe,GACXlB,GAAMI,EAAKa,GACXjB,GAAMK,EAAKW,GACXxF,EAAKwE,IAAO,GAAKA,GAAM,KACvBA,GAAMM,EAAKS,GACXf,GAAMO,EAAKO,EACXd,GAAMQ,EAAKK,GACXb,GAAMS,EAAKG,GACXZ,GAAMU,EAAKC,GACXnF,GAAMwE,IAAO,GAAKA,GAAM,KAExBxE,GAAOA,GAAK,GAAKA,EAAM,EACvBA,EAAKA,EAAI+D,EAAM,EACfA,EAAK/D,EAAI,KACTA,EAAKA,IAAM,GACXgE,GAAMhE,EAENyE,EAAKV,EACLW,EAAKV,EACLW,EAAKV,EACLW,EAAKV,EACLW,EAAKV,EACLW,EAAKV,EACLW,EAAKV,EACLW,EAAKV,EACLW,EAAKV,EACLW,EAAKV,EAEL7B,GAAQ,GACRkB,GAAS,GAEX,KAAK,EAAE,CAAC,EAAIY,EACZ,KAAK,EAAE,CAAC,EAAIC,EACZ,KAAK,EAAE,CAAC,EAAIC,EACZ,KAAK,EAAE,CAAC,EAAIC,EACZ,KAAK,EAAE,CAAC,EAAIC,EACZ,KAAK,EAAE,CAAC,EAAIC,EACZ,KAAK,EAAE,CAAC,EAAIC,EACZ,KAAK,EAAE,CAAC,EAAIC,EACZ,KAAK,EAAE,CAAC,EAAIC,EACZ,KAAK,EAAE,CAAC,EAAIC,CACd,EAEA/B,GAAS,UAAU,OAAS,SAAS0C,EAAKC,EAAQ,CAChD,IAAIC,EAAI,IAAI,YAAY,EAAE,EACtB/F,EAAGgG,EAAMC,EAAGzG,EAEhB,GAAI,KAAK,SAAU,CAGjB,IAFAA,EAAI,KAAK,SACT,KAAK,OAAOA,GAAG,EAAI,EACZA,EAAI,GAAIA,IAAK,KAAK,OAAOA,CAAC,EAAI,EACrC,KAAK,IAAM,EACX,KAAK,OAAO,KAAK,OAAQ,EAAG,EAAE,CAChC,CAIA,IAFAQ,EAAI,KAAK,EAAE,CAAC,IAAM,GAClB,KAAK,EAAE,CAAC,GAAK,KACRR,EAAI,EAAGA,EAAI,GAAIA,IAClB,KAAK,EAAEA,CAAC,GAAKQ,EACbA,EAAI,KAAK,EAAER,CAAC,IAAM,GAClB,KAAK,EAAEA,CAAC,GAAK,KAaf,IAXA,KAAK,EAAE,CAAC,GAAMQ,EAAI,EAClBA,EAAI,KAAK,EAAE,CAAC,IAAM,GAClB,KAAK,EAAE,CAAC,GAAK,KACb,KAAK,EAAE,CAAC,GAAKA,EACbA,EAAI,KAAK,EAAE,CAAC,IAAM,GAClB,KAAK,EAAE,CAAC,GAAK,KACb,KAAK,EAAE,CAAC,GAAKA,EAEb+F,EAAE,CAAC,EAAI,KAAK,EAAE,CAAC,EAAI,EACnB/F,EAAI+F,EAAE,CAAC,IAAM,GACbA,EAAE,CAAC,GAAK,KACHvG,EAAI,EAAGA,EAAI,GAAIA,IAClBuG,EAAEvG,CAAC,EAAI,KAAK,EAAEA,CAAC,EAAIQ,EACnBA,EAAI+F,EAAEvG,CAAC,IAAM,GACbuG,EAAEvG,CAAC,GAAK,KAKV,IAHAuG,EAAE,CAAC,GAAM,KAETC,GAAQhG,EAAI,GAAK,EACZR,EAAI,EAAGA,EAAI,GAAIA,IAAKuG,EAAEvG,CAAC,GAAKwG,EAEjC,IADAA,EAAO,CAACA,EACHxG,EAAI,EAAGA,EAAI,GAAIA,IAAK,KAAK,EAAEA,CAAC,EAAK,KAAK,EAAEA,CAAC,EAAIwG,EAAQD,EAAEvG,CAAC,EAa7D,IAXA,KAAK,EAAE,CAAC,GAAM,KAAK,EAAE,CAAC,EAAa,KAAK,EAAE,CAAC,GAAK,IAA2B,MAC3E,KAAK,EAAE,CAAC,GAAM,KAAK,EAAE,CAAC,IAAO,EAAM,KAAK,EAAE,CAAC,GAAK,IAA2B,MAC3E,KAAK,EAAE,CAAC,GAAM,KAAK,EAAE,CAAC,IAAO,EAAM,KAAK,EAAE,CAAC,GAAM,GAA0B,MAC3E,KAAK,EAAE,CAAC,GAAM,KAAK,EAAE,CAAC,IAAO,EAAM,KAAK,EAAE,CAAC,GAAM,GAA0B,MAC3E,KAAK,EAAE,CAAC,GAAM,KAAK,EAAE,CAAC,IAAM,GAAO,KAAK,EAAE,CAAC,GAAM,EAAM,KAAK,EAAE,CAAC,GAAK,IAAO,MAC3E,KAAK,EAAE,CAAC,GAAM,KAAK,EAAE,CAAC,IAAO,EAAM,KAAK,EAAE,CAAC,GAAK,IAA2B,MAC3E,KAAK,EAAE,CAAC,GAAM,KAAK,EAAE,CAAC,IAAO,EAAM,KAAK,EAAE,CAAC,GAAM,GAA0B,MAC3E,KAAK,EAAE,CAAC,GAAM,KAAK,EAAE,CAAC,IAAO,EAAM,KAAK,EAAE,CAAC,GAAM,GAA0B,MAE3EyG,EAAI,KAAK,EAAE,CAAC,EAAI,KAAK,IAAI,CAAC,EAC1B,KAAK,EAAE,CAAC,EAAIA,EAAI,MACXzG,EAAI,EAAGA,EAAI,EAAGA,IACjByG,GAAO,KAAK,EAAEzG,CAAC,EAAI,KAAK,IAAIA,CAAC,EAAK,IAAMyG,IAAM,IAAO,EACrD,KAAK,EAAEzG,CAAC,EAAIyG,EAAI,MAGlBJ,EAAIC,EAAQ,CAAC,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAQ,CAAC,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAQ,CAAC,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAQ,CAAC,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAQ,CAAC,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAQ,CAAC,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAQ,CAAC,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAQ,CAAC,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAQ,CAAC,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAQ,CAAC,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAO,EAAE,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAO,EAAE,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAO,EAAE,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAO,EAAE,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAO,EAAE,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,IACrCD,EAAIC,EAAO,EAAE,EAAK,KAAK,EAAE,CAAC,IAAM,EAAK,GACvC,EAEA3C,GAAS,UAAU,OAAS,SAAST,EAAGC,EAAMkB,EAAO,CACnD,IAAIrE,EAAG0G,EAEP,GAAI,KAAK,SAAU,CAIjB,IAHAA,EAAQ,GAAK,KAAK,SACdA,EAAOrC,IACTqC,EAAOrC,GACJrE,EAAI,EAAGA,EAAI0G,EAAM1G,IACpB,KAAK,OAAO,KAAK,SAAWA,CAAC,EAAIkD,EAAEC,EAAKnD,CAAC,EAI3C,GAHAqE,GAASqC,EACTvD,GAAQuD,EACR,KAAK,UAAYA,EACb,KAAK,SAAW,GAClB,OACF,KAAK,OAAO,KAAK,OAAQ,EAAG,EAAE,EAC9B,KAAK,SAAW,CAClB,CASA,GAPIrC,GAAS,KACXqC,EAAOrC,EAASA,EAAQ,GACxB,KAAK,OAAOnB,EAAGC,EAAMuD,CAAI,EACzBvD,GAAQuD,EACRrC,GAASqC,GAGPrC,EAAO,CACT,IAAKrE,EAAI,EAAGA,EAAIqE,EAAOrE,IACrB,KAAK,OAAO,KAAK,SAAWA,CAAC,EAAIkD,EAAEC,EAAKnD,CAAC,EAC3C,KAAK,UAAYqE,CACnB,CACF,EAEA,SAASsC,GAAmB/D,EAAKgE,EAAQ1D,EAAGC,EAAMpD,EAAGQ,EAAG,CACtD,IAAIiD,EAAI,IAAIG,GAASpD,CAAC,EACtB,OAAAiD,EAAE,OAAON,EAAGC,EAAMpD,CAAC,EACnByD,EAAE,OAAOZ,EAAKgE,CAAM,EACb,CACT,CAEA,SAASC,GAA0BpH,EAAGqH,EAAM5D,EAAGC,EAAMpD,EAAGQ,EAAG,CACzD,IAAIf,EAAI,IAAI,WAAW,EAAE,EACzB,OAAAmH,GAAmBnH,EAAE,EAAE0D,EAAEC,EAAKpD,EAAEQ,CAAC,EAC1BL,GAAiBT,EAAEqH,EAAKtH,EAAE,CAAC,CACpC,CAEA,SAASuH,GAAiBvG,EAAE0C,EAAEjD,EAAEF,EAAEQ,EAAG,CACnC,IAAIP,EACJ,GAAIC,EAAI,GAAI,MAAO,GAGnB,IAFAyD,GAAkBlD,EAAE,EAAE0C,EAAE,EAAEjD,EAAEF,EAAEQ,CAAC,EAC/BoG,GAAmBnG,EAAG,GAAIA,EAAG,GAAIP,EAAI,GAAIO,CAAC,EACrCR,EAAI,EAAGA,EAAI,GAAIA,IAAKQ,EAAER,CAAC,EAAI,EAChC,MAAO,EACT,CAEA,SAASgH,GAAsB9D,EAAE1C,EAAEP,EAAEF,EAAEQ,EAAG,CACxC,IAAIP,EACAR,EAAI,IAAI,WAAW,EAAE,EAGzB,GAFIS,EAAI,KACRsD,GAAc/D,EAAE,EAAE,GAAGO,EAAEQ,CAAC,EACpBsG,GAA0BrG,EAAG,GAAGA,EAAG,GAAGP,EAAI,GAAGT,CAAC,IAAM,GAAG,MAAO,GAElE,IADAkE,GAAkBR,EAAE,EAAE1C,EAAE,EAAEP,EAAEF,EAAEQ,CAAC,EAC1BP,EAAI,EAAGA,EAAI,GAAIA,IAAKkD,EAAElD,CAAC,EAAI,EAChC,MAAO,EACT,CAEA,SAASiH,GAAStI,EAAGuI,EAAG,CACtB,IAAIlH,EACJ,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKrB,EAAEqB,CAAC,EAAIkH,EAAElH,CAAC,EAAE,CACvC,CAEA,SAASmH,GAAS9G,EAAG,CACnB,IAAI,EAAG+G,EAAG5G,EAAI,EACd,IAAK,EAAI,EAAG,EAAI,GAAI,IAClB4G,EAAI/G,EAAE,CAAC,EAAIG,EAAI,MACfA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EACxB/G,EAAE,CAAC,EAAI+G,EAAI5G,EAAI,MAEjBH,EAAE,CAAC,GAAKG,EAAE,EAAI,IAAMA,EAAE,EACxB,CAEA,SAAS6G,GAAS/G,EAAGgH,EAAGlE,EAAG,CAEzB,QADImE,EAAG/G,EAAI,EAAE4C,EAAE,GACNpD,EAAI,EAAGA,EAAI,GAAIA,IACtBuH,EAAI/G,GAAKF,EAAEN,CAAC,EAAIsH,EAAEtH,CAAC,GACnBM,EAAEN,CAAC,GAAKuH,EACRD,EAAEtH,CAAC,GAAKuH,CAEZ,CAEA,SAASC,GAAUnH,EAAGN,EAAG,CACvB,IAAIC,EAAGyH,EAAGrE,EACNF,EAAIzE,EAAG,EAAG8I,EAAI9I,EAAG,EACrB,IAAKuB,EAAI,EAAGA,EAAI,GAAIA,IAAKuH,EAAEvH,CAAC,EAAID,EAAEC,CAAC,EAInC,IAHAmH,GAASI,CAAC,EACVJ,GAASI,CAAC,EACVJ,GAASI,CAAC,EACLE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAEtB,IADAvE,EAAE,CAAC,EAAIqE,EAAE,CAAC,EAAI,MACTvH,EAAI,EAAGA,EAAI,GAAIA,IAClBkD,EAAElD,CAAC,EAAIuH,EAAEvH,CAAC,EAAI,OAAWkD,EAAElD,EAAE,CAAC,GAAG,GAAM,GACvCkD,EAAElD,EAAE,CAAC,GAAK,MAEZkD,EAAE,EAAE,EAAIqE,EAAE,EAAE,EAAI,OAAWrE,EAAE,EAAE,GAAG,GAAM,GACxCE,EAAKF,EAAE,EAAE,GAAG,GAAM,EAClBA,EAAE,EAAE,GAAK,MACTmE,GAASE,EAAGrE,EAAG,EAAEE,CAAC,CACpB,CACA,IAAKpD,EAAI,EAAGA,EAAI,GAAIA,IAClBK,EAAE,EAAEL,CAAC,EAAIuH,EAAEvH,CAAC,EAAI,IAChBK,EAAE,EAAEL,EAAE,CAAC,EAAIuH,EAAEvH,CAAC,GAAG,CAErB,CAEA,SAAS0H,GAASR,EAAG9D,EAAG,CACtB,IAAI5C,EAAI,IAAI,WAAW,EAAE,EAAGP,EAAI,IAAI,WAAW,EAAE,EACjD,OAAAuH,GAAUhH,EAAG0G,CAAC,EACdM,GAAUvH,EAAGmD,CAAC,EACPjD,GAAiBK,EAAG,EAAGP,EAAG,CAAC,CACpC,CAEA,SAAS0H,GAAST,EAAG,CACnB,IAAIjH,EAAI,IAAI,WAAW,EAAE,EACzB,OAAAuH,GAAUvH,EAAGiH,CAAC,EACPjH,EAAE,CAAC,EAAI,CAChB,CAEA,SAAS2H,EAAYvH,EAAGN,EAAG,CACzB,IAAIC,EACJ,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKK,EAAEL,CAAC,EAAID,EAAE,EAAEC,CAAC,GAAKD,EAAE,EAAEC,EAAE,CAAC,GAAK,GACtDK,EAAE,EAAE,GAAK,KACX,CAEA,SAASwH,EAAExH,EAAG6G,EAAG9D,EAAG,CAClB,QAASpD,EAAI,EAAGA,EAAI,GAAIA,IAAKK,EAAEL,CAAC,EAAIkH,EAAElH,CAAC,EAAIoD,EAAEpD,CAAC,CAChD,CAEA,SAAS8H,EAAEzH,EAAG6G,EAAG9D,EAAG,CAClB,QAASpD,EAAI,EAAGA,EAAI,GAAIA,IAAKK,EAAEL,CAAC,EAAIkH,EAAElH,CAAC,EAAIoD,EAAEpD,CAAC,CAChD,CAEA,SAAS+H,EAAE1H,EAAG6G,EAAG9D,EAAG,CAClB,IAAIgE,EAAG5G,EACJqD,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,GAAK,EAAIC,EAAK,EACpE4D,EAAK,EAAIC,EAAK,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EACrEC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EACrEC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,GAAM,EAAGC,GAAM,EAAGC,GAAM,EAC5DC,EAAKnG,EAAE,CAAC,EACRoG,GAAKpG,EAAE,CAAC,EACRqG,GAAKrG,EAAE,CAAC,EACRsG,GAAKtG,EAAE,CAAC,EACRuG,GAAKvG,EAAE,CAAC,EACRwG,GAAKxG,EAAE,CAAC,EACRyG,GAAKzG,EAAE,CAAC,EACR0G,GAAK1G,EAAE,CAAC,EACR2G,GAAK3G,EAAE,CAAC,EACR4G,GAAK5G,EAAE,CAAC,EACR6G,GAAM7G,EAAE,EAAE,EACV8G,GAAM9G,EAAE,EAAE,EACV+G,GAAM/G,EAAE,EAAE,EACVgH,GAAMhH,EAAE,EAAE,EACViH,GAAMjH,EAAE,EAAE,EACVkH,GAAMlH,EAAE,EAAE,EAEZgE,EAAIF,EAAE,CAAC,EACPrD,GAAMuD,EAAImC,EACVzF,GAAMsD,EAAIoC,GACVzF,GAAMqD,EAAIqC,GACVzF,GAAMoD,EAAIsC,GACVzF,GAAMmD,EAAIuC,GACVzF,GAAMkD,EAAIwC,GACVzF,IAAMiD,EAAIyC,GACVzF,GAAMgD,EAAI0C,GACV9B,GAAMZ,EAAI2C,GACV9B,GAAMb,EAAI4C,GACV9B,GAAOd,EAAI6C,GACX9B,GAAOf,EAAI8C,GACX9B,GAAOhB,EAAI+C,GACX9B,GAAOjB,EAAIgD,GACX9B,GAAOlB,EAAIiD,GACX9B,GAAOnB,EAAIkD,GACXlD,EAAIF,EAAE,CAAC,EACPpD,GAAMsD,EAAImC,EACVxF,GAAMqD,EAAIoC,GACVxF,GAAMoD,EAAIqC,GACVxF,GAAMmD,EAAIsC,GACVxF,GAAMkD,EAAIuC,GACVxF,IAAMiD,EAAIwC,GACVxF,GAAMgD,EAAIyC,GACV7B,GAAMZ,EAAI0C,GACV7B,GAAMb,EAAI2C,GACV7B,GAAOd,EAAI4C,GACX7B,GAAOf,EAAI6C,GACX7B,GAAOhB,EAAI8C,GACX7B,GAAOjB,EAAI+C,GACX7B,GAAOlB,EAAIgD,GACX7B,GAAOnB,EAAIiD,GACX7B,GAAOpB,EAAIkD,GACXlD,EAAIF,EAAE,CAAC,EACPnD,GAAMqD,EAAImC,EACVvF,GAAMoD,EAAIoC,GACVvF,GAAMmD,EAAIqC,GACVvF,GAAMkD,EAAIsC,GACVvF,IAAMiD,EAAIuC,GACVvF,GAAMgD,EAAIwC,GACV5B,GAAMZ,EAAIyC,GACV5B,GAAMb,EAAI0C,GACV5B,GAAOd,EAAI2C,GACX5B,GAAOf,EAAI4C,GACX5B,GAAOhB,EAAI6C,GACX5B,GAAOjB,EAAI8C,GACX5B,GAAOlB,EAAI+C,GACX5B,GAAOnB,EAAIgD,GACX5B,GAAOpB,EAAIiD,GACX5B,GAAOrB,EAAIkD,GACXlD,EAAIF,EAAE,CAAC,EACPlD,GAAMoD,EAAImC,EACVtF,GAAMmD,EAAIoC,GACVtF,GAAMkD,EAAIqC,GACVtF,IAAMiD,EAAIsC,GACVtF,GAAMgD,EAAIuC,GACV3B,GAAMZ,EAAIwC,GACV3B,GAAMb,EAAIyC,GACV3B,GAAOd,EAAI0C,GACX3B,GAAOf,EAAI2C,GACX3B,GAAOhB,EAAI4C,GACX3B,GAAOjB,EAAI6C,GACX3B,GAAOlB,EAAI8C,GACX3B,GAAOnB,EAAI+C,GACX3B,GAAOpB,EAAIgD,GACX3B,GAAOrB,EAAIiD,GACX3B,GAAOtB,EAAIkD,GACXlD,EAAIF,EAAE,CAAC,EACPjD,GAAMmD,EAAImC,EACVrF,GAAMkD,EAAIoC,GACVrF,IAAMiD,EAAIqC,GACVrF,GAAMgD,EAAIsC,GACV1B,GAAMZ,EAAIuC,GACV1B,GAAMb,EAAIwC,GACV1B,GAAOd,EAAIyC,GACX1B,GAAOf,EAAI0C,GACX1B,GAAOhB,EAAI2C,GACX1B,GAAOjB,EAAI4C,GACX1B,GAAOlB,EAAI6C,GACX1B,GAAOnB,EAAI8C,GACX1B,GAAOpB,EAAI+C,GACX1B,GAAOrB,EAAIgD,GACX1B,GAAOtB,EAAIiD,GACX1B,GAAOvB,EAAIkD,GACXlD,EAAIF,EAAE,CAAC,EACPhD,GAAMkD,EAAImC,EACVpF,IAAMiD,EAAIoC,GACVpF,GAAMgD,EAAIqC,GACVzB,GAAMZ,EAAIsC,GACVzB,GAAMb,EAAIuC,GACVzB,GAAOd,EAAIwC,GACXzB,GAAOf,EAAIyC,GACXzB,GAAOhB,EAAI0C,GACXzB,GAAOjB,EAAI2C,GACXzB,GAAOlB,EAAI4C,GACXzB,GAAOnB,EAAI6C,GACXzB,GAAOpB,EAAI8C,GACXzB,GAAOrB,EAAI+C,GACXzB,GAAOtB,EAAIgD,GACXzB,GAAOvB,EAAIiD,GACXzB,GAAOxB,EAAIkD,GACXlD,EAAIF,EAAE,CAAC,EACP/C,IAAMiD,EAAImC,EACVnF,GAAMgD,EAAIoC,GACVxB,GAAMZ,EAAIqC,GACVxB,GAAMb,EAAIsC,GACVxB,GAAOd,EAAIuC,GACXxB,GAAOf,EAAIwC,GACXxB,GAAOhB,EAAIyC,GACXxB,GAAOjB,EAAI0C,GACXxB,GAAOlB,EAAI2C,GACXxB,GAAOnB,EAAI4C,GACXxB,GAAOpB,EAAI6C,GACXxB,GAAOrB,EAAI8C,GACXxB,GAAOtB,EAAI+C,GACXxB,GAAOvB,EAAIgD,GACXxB,GAAOxB,EAAIiD,GACXxB,GAAOzB,EAAIkD,GACXlD,EAAIF,EAAE,CAAC,EACP9C,GAAMgD,EAAImC,EACVvB,GAAMZ,EAAIoC,GACVvB,GAAMb,EAAIqC,GACVvB,GAAOd,EAAIsC,GACXvB,GAAOf,EAAIuC,GACXvB,GAAOhB,EAAIwC,GACXvB,GAAOjB,EAAIyC,GACXvB,GAAOlB,EAAI0C,GACXvB,GAAOnB,EAAI2C,GACXvB,GAAOpB,EAAI4C,GACXvB,GAAOrB,EAAI6C,GACXvB,GAAOtB,EAAI8C,GACXvB,GAAOvB,EAAI+C,GACXvB,GAAOxB,EAAIgD,GACXvB,GAAOzB,EAAIiD,GACXvB,GAAO1B,EAAIkD,GACXlD,EAAIF,EAAE,CAAC,EACPc,GAAMZ,EAAImC,EACVtB,GAAMb,EAAIoC,GACVtB,GAAOd,EAAIqC,GACXtB,GAAOf,EAAIsC,GACXtB,GAAOhB,EAAIuC,GACXtB,GAAOjB,EAAIwC,GACXtB,GAAOlB,EAAIyC,GACXtB,GAAOnB,EAAI0C,GACXtB,GAAOpB,EAAI2C,GACXtB,GAAOrB,EAAI4C,GACXtB,GAAOtB,EAAI6C,GACXtB,GAAOvB,EAAI8C,GACXtB,GAAOxB,EAAI+C,GACXtB,GAAOzB,EAAIgD,GACXtB,GAAO1B,EAAIiD,GACXtB,GAAO3B,EAAIkD,GACXlD,EAAIF,EAAE,CAAC,EACPe,GAAMb,EAAImC,EACVrB,GAAOd,EAAIoC,GACXrB,GAAOf,EAAIqC,GACXrB,GAAOhB,EAAIsC,GACXrB,GAAOjB,EAAIuC,GACXrB,GAAOlB,EAAIwC,GACXrB,GAAOnB,EAAIyC,GACXrB,GAAOpB,EAAI0C,GACXrB,GAAOrB,EAAI2C,GACXrB,GAAOtB,EAAI4C,GACXrB,GAAOvB,EAAI6C,GACXrB,GAAOxB,EAAI8C,GACXrB,GAAOzB,EAAI+C,GACXrB,GAAO1B,EAAIgD,GACXrB,GAAO3B,EAAIiD,GACXrB,GAAO5B,EAAIkD,GACXlD,EAAIF,EAAE,EAAE,EACRgB,GAAOd,EAAImC,EACXpB,GAAOf,EAAIoC,GACXpB,GAAOhB,EAAIqC,GACXpB,GAAOjB,EAAIsC,GACXpB,GAAOlB,EAAIuC,GACXpB,GAAOnB,EAAIwC,GACXpB,GAAOpB,EAAIyC,GACXpB,GAAOrB,EAAI0C,GACXpB,GAAOtB,EAAI2C,GACXpB,GAAOvB,EAAI4C,GACXpB,GAAOxB,EAAI6C,GACXpB,GAAOzB,EAAI8C,GACXpB,GAAO1B,EAAI+C,GACXpB,GAAO3B,EAAIgD,GACXpB,GAAO5B,EAAIiD,GACXpB,GAAO7B,EAAIkD,GACXlD,EAAIF,EAAE,EAAE,EACRiB,GAAOf,EAAImC,EACXnB,GAAOhB,EAAIoC,GACXnB,GAAOjB,EAAIqC,GACXnB,GAAOlB,EAAIsC,GACXnB,GAAOnB,EAAIuC,GACXnB,GAAOpB,EAAIwC,GACXnB,GAAOrB,EAAIyC,GACXnB,GAAOtB,EAAI0C,GACXnB,GAAOvB,EAAI2C,GACXnB,GAAOxB,EAAI4C,GACXnB,GAAOzB,EAAI6C,GACXnB,GAAO1B,EAAI8C,GACXnB,GAAO3B,EAAI+C,GACXnB,GAAO5B,EAAIgD,GACXnB,GAAO7B,EAAIiD,GACXnB,GAAO9B,EAAIkD,GACXlD,EAAIF,EAAE,EAAE,EACRkB,GAAOhB,EAAImC,EACXlB,GAAOjB,EAAIoC,GACXlB,GAAOlB,EAAIqC,GACXlB,GAAOnB,EAAIsC,GACXlB,GAAOpB,EAAIuC,GACXlB,GAAOrB,EAAIwC,GACXlB,GAAOtB,EAAIyC,GACXlB,GAAOvB,EAAI0C,GACXlB,GAAOxB,EAAI2C,GACXlB,GAAOzB,EAAI4C,GACXlB,GAAO1B,EAAI6C,GACXlB,GAAO3B,EAAI8C,GACXlB,GAAO5B,EAAI+C,GACXlB,GAAO7B,EAAIgD,GACXlB,GAAO9B,EAAIiD,GACXlB,GAAO/B,EAAIkD,GACXlD,EAAIF,EAAE,EAAE,EACRmB,GAAOjB,EAAImC,EACXjB,GAAOlB,EAAIoC,GACXjB,GAAOnB,EAAIqC,GACXjB,GAAOpB,EAAIsC,GACXjB,GAAOrB,EAAIuC,GACXjB,GAAOtB,EAAIwC,GACXjB,GAAOvB,EAAIyC,GACXjB,GAAOxB,EAAI0C,GACXjB,GAAOzB,EAAI2C,GACXjB,GAAO1B,EAAI4C,GACXjB,GAAO3B,EAAI6C,GACXjB,GAAO5B,EAAI8C,GACXjB,GAAO7B,EAAI+C,GACXjB,GAAO9B,EAAIgD,GACXjB,GAAO/B,EAAIiD,GACXjB,IAAOhC,EAAIkD,GACXlD,EAAIF,EAAE,EAAE,EACRoB,GAAOlB,EAAImC,EACXhB,GAAOnB,EAAIoC,GACXhB,GAAOpB,EAAIqC,GACXhB,GAAOrB,EAAIsC,GACXhB,GAAOtB,EAAIuC,GACXhB,GAAOvB,EAAIwC,GACXhB,GAAOxB,EAAIyC,GACXhB,GAAOzB,EAAI0C,GACXhB,GAAO1B,EAAI2C,GACXhB,GAAO3B,EAAI4C,GACXhB,GAAO5B,EAAI6C,GACXhB,GAAO7B,EAAI8C,GACXhB,GAAO9B,EAAI+C,GACXhB,GAAO/B,EAAIgD,GACXhB,IAAOhC,EAAIiD,GACXhB,IAAOjC,EAAIkD,GACXlD,EAAIF,EAAE,EAAE,EACRqB,GAAOnB,EAAImC,EACXf,GAAOpB,EAAIoC,GACXf,GAAOrB,EAAIqC,GACXf,GAAOtB,EAAIsC,GACXf,GAAOvB,EAAIuC,GACXf,GAAOxB,EAAIwC,GACXf,GAAOzB,EAAIyC,GACXf,GAAO1B,EAAI0C,GACXf,GAAO3B,EAAI2C,GACXf,GAAO5B,EAAI4C,GACXf,GAAO7B,EAAI6C,GACXf,GAAO9B,EAAI8C,GACXf,GAAO/B,EAAI+C,GACXf,IAAOhC,EAAIgD,GACXf,IAAOjC,EAAIiD,GACXf,IAAOlC,EAAIkD,GAEXzG,GAAO,GAAK2E,EACZ1E,GAAO,GAAK2E,EACZ1E,GAAO,GAAK2E,EACZ1E,GAAO,GAAK2E,EACZ1E,GAAO,GAAK2E,EACZ1E,GAAO,GAAK2E,EACZ1E,IAAO,GAAK2E,EACZ1E,GAAO,GAAK2E,EACZf,GAAO,GAAKgB,EACZf,GAAO,GAAKgB,EACZf,GAAO,GAAKgB,EACZf,GAAO,GAAKgB,EACZf,GAAO,GAAKgB,GACZf,GAAO,GAAKgB,GACZf,GAAO,GAAKgB,GAIZ9I,EAAI,EACJ4G,EAAKvD,EAAKrD,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIvD,EAAKuD,EAAI5G,EAAI,MAC9D4G,EAAKtD,EAAKtD,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAItD,EAAKsD,EAAI5G,EAAI,MAC9D4G,EAAKrD,EAAKvD,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIrD,EAAKqD,EAAI5G,EAAI,MAC9D4G,EAAKpD,EAAKxD,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIpD,EAAKoD,EAAI5G,EAAI,MAC9D4G,EAAKnD,EAAKzD,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAInD,EAAKmD,EAAI5G,EAAI,MAC9D4G,EAAKlD,EAAK1D,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIlD,EAAKkD,EAAI5G,EAAI,MAC9D4G,EAAKjD,GAAK3D,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIjD,GAAKiD,EAAI5G,EAAI,MAC9D4G,EAAKhD,EAAK5D,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIhD,EAAKgD,EAAI5G,EAAI,MAC9D4G,EAAKY,EAAKxH,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIY,EAAKZ,EAAI5G,EAAI,MAC9D4G,EAAKa,EAAKzH,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIa,EAAKb,EAAI5G,EAAI,MAC9D4G,EAAIc,EAAM1H,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAGc,EAAMd,EAAI5G,EAAI,MAC9D4G,EAAIe,EAAM3H,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAGe,EAAMf,EAAI5G,EAAI,MAC9D4G,EAAIgB,EAAM5H,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAGgB,EAAMhB,EAAI5G,EAAI,MAC9D4G,EAAIiB,EAAM7H,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAGiB,EAAMjB,EAAI5G,EAAI,MAC9D4G,EAAIkB,EAAM9H,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAGkB,EAAMlB,EAAI5G,EAAI,MAC9D4G,EAAImB,EAAM/H,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAGmB,EAAMnB,EAAI5G,EAAI,MAC9DqD,GAAMrD,EAAE,EAAI,IAAMA,EAAE,GAGpBA,EAAI,EACJ4G,EAAKvD,EAAKrD,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIvD,EAAKuD,EAAI5G,EAAI,MAC9D4G,EAAKtD,EAAKtD,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAItD,EAAKsD,EAAI5G,EAAI,MAC9D4G,EAAKrD,EAAKvD,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIrD,EAAKqD,EAAI5G,EAAI,MAC9D4G,EAAKpD,EAAKxD,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIpD,EAAKoD,EAAI5G,EAAI,MAC9D4G,EAAKnD,EAAKzD,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAInD,EAAKmD,EAAI5G,EAAI,MAC9D4G,EAAKlD,EAAK1D,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIlD,EAAKkD,EAAI5G,EAAI,MAC9D4G,EAAKjD,GAAK3D,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIjD,GAAKiD,EAAI5G,EAAI,MAC9D4G,EAAKhD,EAAK5D,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIhD,EAAKgD,EAAI5G,EAAI,MAC9D4G,EAAKY,EAAKxH,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIY,EAAKZ,EAAI5G,EAAI,MAC9D4G,EAAKa,EAAKzH,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAIa,EAAKb,EAAI5G,EAAI,MAC9D4G,EAAIc,EAAM1H,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAGc,EAAMd,EAAI5G,EAAI,MAC9D4G,EAAIe,EAAM3H,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAGe,EAAMf,EAAI5G,EAAI,MAC9D4G,EAAIgB,EAAM5H,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAGgB,EAAMhB,EAAI5G,EAAI,MAC9D4G,EAAIiB,EAAM7H,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAGiB,EAAMjB,EAAI5G,EAAI,MAC9D4G,EAAIkB,EAAM9H,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAGkB,EAAMlB,EAAI5G,EAAI,MAC9D4G,EAAImB,EAAM/H,EAAI,MAAOA,EAAI,KAAK,MAAM4G,EAAI,KAAK,EAAGmB,EAAMnB,EAAI5G,EAAI,MAC9DqD,GAAMrD,EAAE,EAAI,IAAMA,EAAE,GAEpBH,EAAG,CAAC,EAAIwD,EACRxD,EAAG,CAAC,EAAIyD,EACRzD,EAAG,CAAC,EAAI0D,EACR1D,EAAG,CAAC,EAAI2D,EACR3D,EAAG,CAAC,EAAI4D,EACR5D,EAAG,CAAC,EAAI6D,EACR7D,EAAG,CAAC,EAAI8D,GACR9D,EAAG,CAAC,EAAI+D,EACR/D,EAAG,CAAC,EAAI2H,EACR3H,EAAG,CAAC,EAAI4H,EACR5H,EAAE,EAAE,EAAI6H,EACR7H,EAAE,EAAE,EAAI8H,EACR9H,EAAE,EAAE,EAAI+H,EACR/H,EAAE,EAAE,EAAIgI,EACRhI,EAAE,EAAE,EAAIiI,EACRjI,EAAE,EAAE,EAAIkI,CACV,CAEA,SAASgC,EAAElK,EAAG6G,EAAG,CACfa,EAAE1H,EAAG6G,EAAGA,CAAC,CACX,CAEA,SAASsD,GAASnK,EAAG,EAAG,CACtB,IAAIG,EAAI/B,EAAG,EACPyI,EACJ,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAK1G,EAAE0G,CAAC,EAAI,EAAEA,CAAC,EACnC,IAAKA,EAAI,IAAKA,GAAK,EAAGA,IACpBqD,EAAE/J,EAAGA,CAAC,EACH0G,IAAM,GAAKA,IAAM,GAAGa,EAAEvH,EAAGA,EAAG,CAAC,EAElC,IAAK0G,EAAI,EAAGA,EAAI,GAAIA,IAAK7G,EAAE6G,CAAC,EAAI1G,EAAE0G,CAAC,CACrC,CAEA,SAASuD,GAAQpK,EAAG,EAAG,CACrB,IAAIG,EAAI/B,EAAG,EACPyI,EACJ,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAK1G,EAAE0G,CAAC,EAAI,EAAEA,CAAC,EACnC,IAAKA,EAAI,IAAKA,GAAK,EAAGA,IAClBqD,EAAE/J,EAAGA,CAAC,EACH0G,IAAM,GAAGa,EAAEvH,EAAGA,EAAG,CAAC,EAEzB,IAAK0G,EAAI,EAAGA,EAAI,GAAIA,IAAK7G,EAAE6G,CAAC,EAAI1G,EAAE0G,CAAC,CACrC,CAEA,SAASwD,GAAkBpD,EAAGvH,EAAGO,EAAG,CAClC,IAAI+C,EAAI,IAAI,WAAW,EAAE,EACrB7D,EAAI,IAAI,aAAa,EAAE,EAAGb,EAAGqB,EAC7BkH,EAAIzI,EAAG,EAAG2E,EAAI3E,EAAG,EAAG+B,EAAI/B,EAAG,EAC3BwB,EAAIxB,EAAG,EAAGkM,GAAIlM,EAAG,EAAGgI,EAAIhI,EAAG,EAC/B,IAAKuB,EAAI,EAAGA,EAAI,GAAIA,IAAKqD,EAAErD,CAAC,EAAID,EAAEC,CAAC,EAInC,IAHAqD,EAAE,EAAE,EAAGtD,EAAE,EAAE,EAAE,IAAK,GAClBsD,EAAE,CAAC,GAAG,IACNuE,EAAYpI,EAAEc,CAAC,EACVN,EAAI,EAAGA,EAAI,GAAIA,IAClBoD,EAAEpD,CAAC,EAAER,EAAEQ,CAAC,EACRC,EAAED,CAAC,EAAEkH,EAAElH,CAAC,EAAEQ,EAAER,CAAC,EAAE,EAGjB,IADAkH,EAAE,CAAC,EAAEjH,EAAE,CAAC,EAAE,EACLD,EAAE,IAAKA,GAAG,EAAG,EAAEA,EAClBrB,EAAG0E,EAAErD,IAAI,CAAC,KAAKA,EAAE,GAAI,EACrBqH,GAASH,EAAE9D,EAAEzE,CAAC,EACd0I,GAAS7G,EAAEP,EAAEtB,CAAC,EACdkJ,EAAE8C,GAAEzD,EAAE1G,CAAC,EACPsH,EAAEZ,EAAEA,EAAE1G,CAAC,EACPqH,EAAErH,EAAE4C,EAAEnD,CAAC,EACP6H,EAAE1E,EAAEA,EAAEnD,CAAC,EACPsK,EAAEtK,EAAE0K,EAAC,EACLJ,EAAE9D,EAAES,CAAC,EACLa,EAAEb,EAAE1G,EAAE0G,CAAC,EACPa,EAAEvH,EAAE4C,EAAEuH,EAAC,EACP9C,EAAE8C,GAAEzD,EAAE1G,CAAC,EACPsH,EAAEZ,EAAEA,EAAE1G,CAAC,EACP+J,EAAEnH,EAAE8D,CAAC,EACLY,EAAEtH,EAAEP,EAAEwG,CAAC,EACPsB,EAAEb,EAAE1G,EAAEvB,CAAO,EACb4I,EAAEX,EAAEA,EAAEjH,CAAC,EACP8H,EAAEvH,EAAEA,EAAE0G,CAAC,EACPa,EAAEb,EAAEjH,EAAEwG,CAAC,EACPsB,EAAE9H,EAAEmD,EAAE5D,CAAC,EACP+K,EAAEnH,EAAEuH,EAAC,EACLtD,GAASH,EAAE9D,EAAEzE,CAAC,EACd0I,GAAS7G,EAAEP,EAAEtB,CAAC,EAEhB,IAAKqB,EAAI,EAAGA,EAAI,GAAIA,IAClBR,EAAEQ,EAAE,EAAE,EAAEkH,EAAElH,CAAC,EACXR,EAAEQ,EAAE,EAAE,EAAEQ,EAAER,CAAC,EACXR,EAAEQ,EAAE,EAAE,EAAEoD,EAAEpD,CAAC,EACXR,EAAEQ,EAAE,EAAE,EAAEC,EAAED,CAAC,EAEb,IAAI4K,EAAMpL,EAAE,SAAS,EAAE,EACnBqL,EAAMrL,EAAE,SAAS,EAAE,EACvB,OAAAgL,GAASI,EAAIA,CAAG,EAChB7C,EAAE8C,EAAIA,EAAID,CAAG,EACbpD,GAAUF,EAAEuD,CAAG,EACR,CACT,CAEA,SAASC,GAAuBxD,EAAGvH,EAAG,CACpC,OAAO2K,GAAkBpD,EAAGvH,EAAGjB,CAAE,CACnC,CAEA,SAASiM,GAAmBlL,EAAGL,EAAG,CAChC,OAAAZ,EAAYY,EAAG,EAAE,EACVsL,GAAuBjL,EAAGL,CAAC,CACpC,CAEA,SAASwL,GAAoBzK,EAAGV,EAAGL,EAAG,CACpC,IAAIgE,EAAI,IAAI,WAAW,EAAE,EACzB,OAAAkH,GAAkBlH,EAAGhE,EAAGK,CAAC,EAClBiD,GAAqBvC,EAAG1B,EAAI2E,EAAGT,EAAK,CAC7C,CAEA,IAAIkI,GAAqBlE,GACrBmE,GAA0BlE,GAE9B,SAASmE,GAAW3K,EAAG0C,EAAGjD,EAAGF,EAAGF,EAAGL,EAAG,CACpC,IAAIe,EAAI,IAAI,WAAW,EAAE,EACzB,OAAAyK,GAAoBzK,EAAGV,EAAGL,CAAC,EACpByL,GAAmBzK,EAAG0C,EAAGjD,EAAGF,EAAGQ,CAAC,CACzC,CAEA,SAAS6K,GAAgBlI,EAAG1C,EAAGP,EAAGF,EAAGF,EAAGL,EAAG,CACzC,IAAIe,EAAI,IAAI,WAAW,EAAE,EACzB,OAAAyK,GAAoBzK,EAAGV,EAAGL,CAAC,EACpB0L,GAAwBhI,EAAG1C,EAAGP,EAAGF,EAAGQ,CAAC,CAC9C,CAEA,IAAI8K,GAAI,CACN,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACtC,EAEA,SAASC,GAAqBC,EAAIC,EAAItI,EAAGnD,EAAG,CAyB1C,QAxBI0L,EAAK,IAAI,WAAW,EAAE,EAAGC,EAAK,IAAI,WAAW,EAAE,EAC/CC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAAKC,EAAKC,EACnCC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACnCC,EAAIC,EAAI5M,EAAGyH,EAAGhI,EAAGC,EAAGwH,EAAG9D,EAAG5C,EAAGP,EAE7B4M,EAAMtB,EAAG,CAAC,EACVuB,GAAMvB,EAAG,CAAC,EACVwB,GAAMxB,EAAG,CAAC,EACVyB,GAAMzB,EAAG,CAAC,EACV0B,EAAM1B,EAAG,CAAC,EACV2B,GAAM3B,EAAG,CAAC,EACV4B,GAAM5B,EAAG,CAAC,EACV6B,GAAM7B,EAAG,CAAC,EAEV8B,GAAM7B,EAAG,CAAC,EACV8B,GAAM9B,EAAG,CAAC,EACV+B,GAAM/B,EAAG,CAAC,EACVgC,GAAMhC,EAAG,CAAC,EACViC,GAAMjC,EAAG,CAAC,EACVkC,GAAMlC,EAAG,CAAC,EACVmC,GAAMnC,EAAG,CAAC,EACVoC,GAAMpC,EAAG,CAAC,EAEVqC,GAAM,EACH9N,GAAK,KAAK,CACf,IAAKC,EAAI,EAAGA,EAAI,GAAIA,IAClByH,EAAI,EAAIzH,EAAI6N,GACZpC,EAAGzL,CAAC,EAAKkD,EAAEuE,EAAE,CAAC,GAAK,GAAOvE,EAAEuE,EAAE,CAAC,GAAK,GAAOvE,EAAEuE,EAAE,CAAC,GAAK,EAAKvE,EAAEuE,EAAE,CAAC,EAC/DiE,EAAG1L,CAAC,EAAKkD,EAAEuE,EAAE,CAAC,GAAK,GAAOvE,EAAEuE,EAAE,CAAC,GAAK,GAAOvE,EAAEuE,EAAE,CAAC,GAAK,EAAKvE,EAAEuE,EAAE,CAAC,EAEjE,IAAKzH,EAAI,EAAGA,EAAI,GAAIA,IA+HlB,GA9HA2L,EAAMkB,EACNjB,EAAMkB,GACNjB,EAAMkB,GACNjB,EAAMkB,GACNjB,EAAMkB,EACNjB,GAAMkB,GACNjB,EAAMkB,GACNjB,EAAMkB,GAENjB,EAAMkB,GACNjB,EAAMkB,GACNjB,EAAMkB,GACNjB,EAAMkB,GACNjB,EAAMkB,GACNjB,EAAMkB,GACNjB,EAAMkB,GACNjB,EAAMkB,GAGNnO,EAAI2N,GACJ1N,EAAIkO,GAEJ1G,EAAIxH,EAAI,MAAQ0D,EAAI1D,IAAM,GAC1Bc,EAAIf,EAAI,MAAQQ,EAAIR,IAAM,GAG1BA,GAAMwN,IAAQ,GAAOQ,IAAQ,KAAaR,IAAQ,GAAOQ,IAAQ,KAAaA,KAAS,EAAWR,GAAQ,IAC1GvN,GAAM+N,KAAQ,GAAOR,GAAQ,KAAaQ,KAAQ,GAAOR,GAAQ,KAAaA,IAAS,EAAWQ,IAAQ,IAE1GvG,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAG5BA,EAAKwN,EAAMC,GAAQ,CAACD,EAAME,GAC1BzN,EAAK+N,GAAMC,GAAQ,CAACD,GAAME,GAE1BzG,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAG5BA,EAAI4L,GAAErL,EAAE,CAAC,EACTN,EAAI2L,GAAErL,EAAE,EAAE,CAAC,EAEXkH,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAG5BA,EAAIgM,EAAGzL,EAAE,EAAE,EACXN,EAAIgM,EAAG1L,EAAE,EAAE,EAEXkH,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAE5B2D,GAAK8D,IAAM,GACX1G,GAAK4C,IAAM,GACXnD,GAAKO,IAAM,GAEXmM,EAAKnM,EAAI,MAASP,GAAK,GACvB2M,EAAK1F,EAAI,MAAS9D,GAAK,GAGvB3D,EAAIkN,EACJjN,EAAIkN,EAEJ1F,EAAIxH,EAAI,MAAQ0D,EAAI1D,IAAM,GAC1Bc,EAAIf,EAAI,MAAQQ,EAAIR,IAAM,GAG1BA,GAAMoN,IAAQ,GAAOQ,IAAQ,IAAaA,KAAS,EAAWR,GAAQ,KAAkBQ,KAAS,EAAWR,GAAQ,IACpHnN,GAAM2N,KAAQ,GAAOR,GAAQ,IAAaA,IAAS,EAAWQ,IAAQ,KAAkBR,IAAS,EAAWQ,IAAQ,IAEpHnG,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAG5BA,EAAKoN,EAAMC,GAAQD,EAAME,GAAQD,GAAMC,GACvCrN,EAAK2N,GAAMC,GAAQD,GAAME,GAAQD,GAAMC,GAEvCrG,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAE5B2D,GAAK8D,IAAM,GACX1G,GAAK4C,IAAM,GACXnD,GAAKO,IAAM,GAEX0L,EAAO1L,EAAI,MAAWP,GAAK,GAC3ByM,EAAOxF,EAAI,MAAW9D,GAAK,GAG3B3D,EAAIqM,EACJpM,EAAI4M,EAEJpF,EAAIxH,EAAI,MAAQ0D,EAAI1D,IAAM,GAC1Bc,EAAIf,EAAI,MAAQQ,EAAIR,IAAM,GAE1BA,EAAIkN,EACJjN,EAAIkN,EAEJ1F,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAE5B2D,GAAK8D,IAAM,GACX1G,GAAK4C,IAAM,GACXnD,GAAKO,IAAM,GAEXsL,EAAOtL,EAAI,MAAWP,GAAK,GAC3BqM,EAAOpF,EAAI,MAAW9D,GAAK,GAE3B0J,GAAMnB,EACNoB,GAAMnB,EACNoB,GAAMnB,EACNoB,EAAMnB,EACNoB,GAAMnB,EACNoB,GAAMnB,GACNoB,GAAMnB,EACNY,EAAMX,EAENoB,GAAMnB,EACNoB,GAAMnB,EACNoB,GAAMnB,EACNoB,GAAMnB,EACNoB,GAAMnB,EACNoB,GAAMnB,EACNoB,GAAMnB,EACNY,GAAMX,EAEF1M,EAAE,KAAO,GACX,IAAKyH,EAAI,EAAGA,EAAI,GAAIA,IAElBhI,EAAIgM,EAAGhE,CAAC,EACR/H,EAAIgM,EAAGjE,CAAC,EAERP,EAAIxH,EAAI,MAAQ0D,EAAI1D,IAAM,GAC1Bc,EAAIf,EAAI,MAAQQ,EAAIR,IAAM,GAE1BA,EAAIgM,GAAIhE,EAAE,GAAG,EAAE,EACf/H,EAAIgM,GAAIjE,EAAE,GAAG,EAAE,EAEfP,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAG5BkN,EAAKlB,GAAIhE,EAAE,GAAG,EAAE,EAChBmF,EAAKlB,GAAIjE,EAAE,GAAG,EAAE,EAChBhI,GAAMkN,IAAO,EAAMC,GAAO,KAAYD,IAAO,EAAMC,GAAO,IAAWD,IAAO,EAC5EjN,GAAMkN,IAAO,EAAMD,GAAO,KAAYC,IAAO,EAAMD,GAAO,KAAYC,IAAO,EAAMD,GAAO,IAE1FzF,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAG5BkN,EAAKlB,GAAIhE,EAAE,IAAI,EAAE,EACjBmF,EAAKlB,GAAIjE,EAAE,IAAI,EAAE,EACjBhI,GAAMkN,IAAO,GAAOC,GAAO,KAAaA,IAAQ,GAAWD,GAAO,GAAiBA,IAAO,EAC1FjN,GAAMkN,IAAO,GAAOD,GAAO,KAAaA,IAAQ,GAAWC,GAAO,IAAkBA,IAAO,EAAMD,GAAO,IAExGzF,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAE5B2D,GAAK8D,IAAM,GACX1G,GAAK4C,IAAM,GACXnD,GAAKO,IAAM,GAEXiL,EAAGhE,CAAC,EAAKjH,EAAI,MAAWP,GAAK,GAC7ByL,EAAGjE,CAAC,EAAKP,EAAI,MAAW9D,GAAK,GAMnC3D,EAAIoN,EACJnN,EAAI2N,GAEJnG,EAAIxH,EAAI,MAAQ0D,EAAI1D,IAAM,GAC1Bc,EAAIf,EAAI,MAAQQ,EAAIR,IAAM,GAE1BA,EAAI8L,EAAG,CAAC,EACR7L,EAAI8L,EAAG,CAAC,EAERtE,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAE5B2D,GAAK8D,IAAM,GACX1G,GAAK4C,IAAM,GACXnD,GAAKO,IAAM,GAEX+K,EAAG,CAAC,EAAIsB,EAAOrM,EAAI,MAAWP,GAAK,GACnCuL,EAAG,CAAC,EAAI6B,GAAOnG,EAAI,MAAW9D,GAAK,GAEnC3D,EAAIqN,GACJpN,EAAI4N,GAEJpG,EAAIxH,EAAI,MAAQ0D,EAAI1D,IAAM,GAC1Bc,EAAIf,EAAI,MAAQQ,EAAIR,IAAM,GAE1BA,EAAI8L,EAAG,CAAC,EACR7L,EAAI8L,EAAG,CAAC,EAERtE,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAE5B2D,GAAK8D,IAAM,GACX1G,GAAK4C,IAAM,GACXnD,GAAKO,IAAM,GAEX+K,EAAG,CAAC,EAAIuB,GAAOtM,EAAI,MAAWP,GAAK,GACnCuL,EAAG,CAAC,EAAI8B,GAAOpG,EAAI,MAAW9D,GAAK,GAEnC3D,EAAIsN,GACJrN,EAAI6N,GAEJrG,EAAIxH,EAAI,MAAQ0D,EAAI1D,IAAM,GAC1Bc,EAAIf,EAAI,MAAQQ,EAAIR,IAAM,GAE1BA,EAAI8L,EAAG,CAAC,EACR7L,EAAI8L,EAAG,CAAC,EAERtE,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAE5B2D,GAAK8D,IAAM,GACX1G,GAAK4C,IAAM,GACXnD,GAAKO,IAAM,GAEX+K,EAAG,CAAC,EAAIwB,GAAOvM,EAAI,MAAWP,GAAK,GACnCuL,EAAG,CAAC,EAAI+B,GAAOrG,EAAI,MAAW9D,GAAK,GAEnC3D,EAAIuN,GACJtN,EAAI8N,GAEJtG,EAAIxH,EAAI,MAAQ0D,EAAI1D,IAAM,GAC1Bc,EAAIf,EAAI,MAAQQ,EAAIR,IAAM,GAE1BA,EAAI8L,EAAG,CAAC,EACR7L,EAAI8L,EAAG,CAAC,EAERtE,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAE5B2D,GAAK8D,IAAM,GACX1G,GAAK4C,IAAM,GACXnD,GAAKO,IAAM,GAEX+K,EAAG,CAAC,EAAIyB,GAAOxM,EAAI,MAAWP,GAAK,GACnCuL,EAAG,CAAC,EAAIgC,GAAOtG,EAAI,MAAW9D,GAAK,GAEnC3D,EAAIwN,EACJvN,EAAI+N,GAEJvG,EAAIxH,EAAI,MAAQ0D,EAAI1D,IAAM,GAC1Bc,EAAIf,EAAI,MAAQQ,EAAIR,IAAM,GAE1BA,EAAI8L,EAAG,CAAC,EACR7L,EAAI8L,EAAG,CAAC,EAERtE,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAE5B2D,GAAK8D,IAAM,GACX1G,GAAK4C,IAAM,GACXnD,GAAKO,IAAM,GAEX+K,EAAG,CAAC,EAAI0B,EAAOzM,EAAI,MAAWP,GAAK,GACnCuL,EAAG,CAAC,EAAIiC,GAAOvG,EAAI,MAAW9D,GAAK,GAEnC3D,EAAIyN,GACJxN,EAAIgO,GAEJxG,EAAIxH,EAAI,MAAQ0D,EAAI1D,IAAM,GAC1Bc,EAAIf,EAAI,MAAQQ,EAAIR,IAAM,GAE1BA,EAAI8L,EAAG,CAAC,EACR7L,EAAI8L,EAAG,CAAC,EAERtE,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAE5B2D,GAAK8D,IAAM,GACX1G,GAAK4C,IAAM,GACXnD,GAAKO,IAAM,GAEX+K,EAAG,CAAC,EAAI2B,GAAO1M,EAAI,MAAWP,GAAK,GACnCuL,EAAG,CAAC,EAAIkC,GAAOxG,EAAI,MAAW9D,GAAK,GAEnC3D,EAAI0N,GACJzN,EAAIiO,GAEJzG,EAAIxH,EAAI,MAAQ0D,EAAI1D,IAAM,GAC1Bc,EAAIf,EAAI,MAAQQ,EAAIR,IAAM,GAE1BA,EAAI8L,EAAG,CAAC,EACR7L,EAAI8L,EAAG,CAAC,EAERtE,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAE5B2D,GAAK8D,IAAM,GACX1G,GAAK4C,IAAM,GACXnD,GAAKO,IAAM,GAEX+K,EAAG,CAAC,EAAI4B,GAAO3M,EAAI,MAAWP,GAAK,GACnCuL,EAAG,CAAC,EAAImC,GAAOzG,EAAI,MAAW9D,GAAK,GAEnC3D,EAAI2N,GACJ1N,EAAIkO,GAEJ1G,EAAIxH,EAAI,MAAQ0D,EAAI1D,IAAM,GAC1Bc,EAAIf,EAAI,MAAQQ,EAAIR,IAAM,GAE1BA,EAAI8L,EAAG,CAAC,EACR7L,EAAI8L,EAAG,CAAC,EAERtE,GAAKxH,EAAI,MAAQ0D,GAAK1D,IAAM,GAC5Bc,GAAKf,EAAI,MAAQQ,GAAKR,IAAM,GAE5B2D,GAAK8D,IAAM,GACX1G,GAAK4C,IAAM,GACXnD,GAAKO,IAAM,GAEX+K,EAAG,CAAC,EAAI6B,GAAO5M,EAAI,MAAWP,GAAK,GACnCuL,EAAG,CAAC,EAAIoC,GAAO1G,EAAI,MAAW9D,GAAK,GAEnCyK,IAAO,IACP9N,GAAK,GACP,CAEA,OAAOA,CACT,CAEA,SAAS+N,GAAYlL,EAAKM,EAAGnD,EAAG,CAC9B,IAAIwL,EAAK,IAAI,WAAW,CAAC,EACrBC,EAAK,IAAI,WAAW,CAAC,EACrBhM,EAAI,IAAI,WAAW,GAAG,EACtBQ,EAAGoD,EAAIrD,EAuBX,IArBAwL,EAAG,CAAC,EAAI,WACRA,EAAG,CAAC,EAAI,WACRA,EAAG,CAAC,EAAI,WACRA,EAAG,CAAC,EAAI,WACRA,EAAG,CAAC,EAAI,WACRA,EAAG,CAAC,EAAI,WACRA,EAAG,CAAC,EAAI,UACRA,EAAG,CAAC,EAAI,WAERC,EAAG,CAAC,EAAI,WACRA,EAAG,CAAC,EAAI,WACRA,EAAG,CAAC,EAAI,WACRA,EAAG,CAAC,EAAI,WACRA,EAAG,CAAC,EAAI,WACRA,EAAG,CAAC,EAAI,UACRA,EAAG,CAAC,EAAI,WACRA,EAAG,CAAC,EAAI,UAERF,GAAqBC,EAAIC,EAAItI,EAAGnD,CAAC,EACjCA,GAAK,IAEAC,EAAI,EAAGA,EAAID,EAAGC,IAAKR,EAAEQ,CAAC,EAAIkD,EAAEE,EAAErD,EAAEC,CAAC,EAQtC,IAPAR,EAAEO,CAAC,EAAI,IAEPA,EAAI,IAAI,KAAKA,EAAE,IAAI,EAAE,GACrBP,EAAEO,EAAE,CAAC,EAAI,EACTR,GAAKC,EAAGO,EAAE,EAAKqD,EAAI,UAAc,EAAGA,GAAK,CAAC,EAC1CkI,GAAqBC,EAAIC,EAAIhM,EAAGO,CAAC,EAE5BC,EAAI,EAAGA,EAAI,EAAGA,IAAKT,GAAKqD,EAAK,EAAE5C,EAAGuL,EAAGvL,CAAC,EAAGwL,EAAGxL,CAAC,CAAC,EAEnD,MAAO,EACT,CAEA,SAAS+N,GAAIzN,EAAGgH,EAAG,CACjB,IAAIJ,EAAIzI,EAAG,EAAG2E,EAAI3E,EAAG,EAAG+B,EAAI/B,EAAG,EAC3B,EAAIA,EAAG,EAAGkM,EAAIlM,EAAG,EAAGgI,EAAIhI,EAAG,EAC3B8H,EAAI9H,EAAG,EAAGgB,EAAIhB,EAAG,EAAG8I,EAAI9I,EAAG,EAE/BqJ,EAAEZ,EAAG5G,EAAE,CAAC,EAAGA,EAAE,CAAC,CAAC,EACfwH,EAAEP,EAAGD,EAAE,CAAC,EAAGA,EAAE,CAAC,CAAC,EACfS,EAAEb,EAAGA,EAAGK,CAAC,EACTM,EAAEzE,EAAG9C,EAAE,CAAC,EAAGA,EAAE,CAAC,CAAC,EACfuH,EAAEN,EAAGD,EAAE,CAAC,EAAGA,EAAE,CAAC,CAAC,EACfS,EAAE3E,EAAGA,EAAGmE,CAAC,EACTQ,EAAEvH,EAAGF,EAAE,CAAC,EAAGgH,EAAE,CAAC,CAAC,EACfS,EAAEvH,EAAGA,EAAGrB,CAAE,EACV4I,EAAE,EAAGzH,EAAE,CAAC,EAAGgH,EAAE,CAAC,CAAC,EACfO,EAAE,EAAG,EAAG,CAAC,EACTC,EAAE6C,EAAGvH,EAAG8D,CAAC,EACTY,EAAErB,EAAG,EAAGjG,CAAC,EACTqH,EAAEtB,EAAG,EAAG/F,CAAC,EACTqH,EAAEpI,EAAG2D,EAAG8D,CAAC,EAETa,EAAEzH,EAAE,CAAC,EAAGqK,EAAGlE,CAAC,EACZsB,EAAEzH,EAAE,CAAC,EAAGb,EAAG8G,CAAC,EACZwB,EAAEzH,EAAE,CAAC,EAAGiG,EAAGE,CAAC,EACZsB,EAAEzH,EAAE,CAAC,EAAGqK,EAAGlL,CAAC,CACd,CAEA,SAASuO,GAAM1N,EAAGgH,EAAGlE,EAAG,CACtB,IAAIpD,EACJ,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IACjBqH,GAAS/G,EAAEN,CAAC,EAAGsH,EAAEtH,CAAC,EAAGoD,CAAC,CAE1B,CAEA,SAAS6K,EAAKtP,EAAG2B,EAAG,CAClB,IAAI4N,EAAKzP,EAAG,EAAG0P,EAAK1P,EAAG,EAAG2P,EAAK3P,EAAG,EAClC+L,GAAS4D,EAAI9N,EAAE,CAAC,CAAC,EACjByH,EAAEmG,EAAI5N,EAAE,CAAC,EAAG8N,CAAE,EACdrG,EAAEoG,EAAI7N,EAAE,CAAC,EAAG8N,CAAE,EACd5G,GAAU7I,EAAGwP,CAAE,EACfxP,EAAE,EAAE,GAAKgJ,GAASuG,CAAE,GAAK,CAC3B,CAEA,SAASG,GAAW/N,EAAGgH,EAAG9D,EAAG,CAC3B,IAAIJ,EAAGpD,EAKP,IAJAiH,GAAS3G,EAAE,CAAC,EAAGvB,CAAG,EAClBkI,GAAS3G,EAAE,CAAC,EAAGtB,CAAG,EAClBiI,GAAS3G,EAAE,CAAC,EAAGtB,CAAG,EAClBiI,GAAS3G,EAAE,CAAC,EAAGvB,CAAG,EACbiB,EAAI,IAAKA,GAAK,EAAG,EAAEA,EACtBoD,EAAKI,EAAGxD,EAAE,EAAG,CAAC,IAAMA,EAAE,GAAM,EAC5BgO,GAAM1N,EAAGgH,EAAGlE,CAAC,EACb2K,GAAIzG,EAAGhH,CAAC,EACRyN,GAAIzN,EAAGA,CAAC,EACR0N,GAAM1N,EAAGgH,EAAGlE,CAAC,CAEjB,CAEA,SAASkL,GAAWhO,EAAGkD,EAAG,CACxB,IAAI8D,EAAI,CAAC7I,EAAG,EAAGA,EAAG,EAAGA,EAAG,EAAGA,EAAG,CAAC,EAC/BwI,GAASK,EAAE,CAAC,EAAGlI,CAAC,EAChB6H,GAASK,EAAE,CAAC,EAAGjI,CAAC,EAChB4H,GAASK,EAAE,CAAC,EAAGtI,CAAG,EAClB+I,EAAET,EAAE,CAAC,EAAGlI,EAAGC,CAAC,EACZgP,GAAW/N,EAAGgH,EAAG9D,CAAC,CACpB,CAEA,SAAS+K,GAAoBC,EAAIC,EAAIC,EAAQ,CAC3C,IAAIzO,EAAI,IAAI,WAAW,EAAE,EACrBK,EAAI,CAAC7B,EAAG,EAAGA,EAAG,EAAGA,EAAG,EAAGA,EAAG,CAAC,EAC3BuB,EAWJ,IATK0O,GAAQ9P,EAAY6P,EAAI,EAAE,EAC/BX,GAAY7N,EAAGwO,EAAI,EAAE,EACrBxO,EAAE,CAAC,GAAK,IACRA,EAAE,EAAE,GAAK,IACTA,EAAE,EAAE,GAAK,GAETqO,GAAWhO,EAAGL,CAAC,EACfgO,EAAKO,EAAIlO,CAAC,EAELN,EAAI,EAAGA,EAAI,GAAIA,IAAKyO,EAAGzO,EAAE,EAAE,EAAIwO,EAAGxO,CAAC,EACxC,MAAO,EACT,CAEA,IAAI2O,GAAI,IAAI,aAAa,CAAC,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAI,CAAC,EAE5K,SAASC,GAAKjQ,EAAGa,EAAG,CAClB,IAAIqP,EAAO7O,EAAGyH,EAAGlH,EACjB,IAAKP,EAAI,GAAIA,GAAK,GAAI,EAAEA,EAAG,CAEzB,IADA6O,EAAQ,EACHpH,EAAIzH,EAAI,GAAIO,EAAIP,EAAI,GAAIyH,EAAIlH,EAAG,EAAEkH,EACpCjI,EAAEiI,CAAC,GAAKoH,EAAQ,GAAKrP,EAAEQ,CAAC,EAAI2O,GAAElH,GAAKzH,EAAI,GAAG,EAC1C6O,EAAQ,KAAK,OAAOrP,EAAEiI,CAAC,EAAI,KAAO,GAAG,EACrCjI,EAAEiI,CAAC,GAAKoH,EAAQ,IAElBrP,EAAEiI,CAAC,GAAKoH,EACRrP,EAAEQ,CAAC,EAAI,CACT,CAEA,IADA6O,EAAQ,EACHpH,EAAI,EAAGA,EAAI,GAAIA,IAClBjI,EAAEiI,CAAC,GAAKoH,GAASrP,EAAE,EAAE,GAAK,GAAKmP,GAAElH,CAAC,EAClCoH,EAAQrP,EAAEiI,CAAC,GAAK,EAChBjI,EAAEiI,CAAC,GAAK,IAEV,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKjI,EAAEiI,CAAC,GAAKoH,EAAQF,GAAElH,CAAC,EAC5C,IAAKzH,EAAI,EAAGA,EAAI,GAAIA,IAClBR,EAAEQ,EAAE,CAAC,GAAKR,EAAEQ,CAAC,GAAK,EAClBrB,EAAEqB,CAAC,EAAIR,EAAEQ,CAAC,EAAI,GAElB,CAEA,SAAS8O,GAAOnQ,EAAG,CACjB,IAAIa,EAAI,IAAI,aAAa,EAAE,EAAGQ,EAC9B,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKR,EAAEQ,CAAC,EAAIrB,EAAEqB,CAAC,EACnC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKrB,EAAEqB,CAAC,EAAI,EAChC4O,GAAKjQ,EAAGa,CAAC,CACX,CAGA,SAASuP,GAAYC,EAAI9L,EAAGnD,EAAG0O,EAAI,CACjC,IAAIxO,EAAI,IAAI,WAAW,EAAE,EAAGR,EAAI,IAAI,WAAW,EAAE,EAAGd,EAAI,IAAI,WAAW,EAAE,EACrEqB,EAAGyH,EAAGjI,EAAI,IAAI,aAAa,EAAE,EAC7Bc,EAAI,CAAC7B,EAAG,EAAGA,EAAG,EAAGA,EAAG,EAAGA,EAAG,CAAC,EAE/BqP,GAAY7N,EAAGwO,EAAI,EAAE,EACrBxO,EAAE,CAAC,GAAK,IACRA,EAAE,EAAE,GAAK,IACTA,EAAE,EAAE,GAAK,GAET,IAAIgP,GAAQlP,EAAI,GAChB,IAAKC,EAAI,EAAGA,EAAID,EAAGC,IAAKgP,EAAG,GAAKhP,CAAC,EAAIkD,EAAElD,CAAC,EACxC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKgP,EAAG,GAAKhP,CAAC,EAAIC,EAAE,GAAKD,CAAC,EAO9C,IALA8N,GAAYnP,EAAGqQ,EAAG,SAAS,EAAE,EAAGjP,EAAE,EAAE,EACpC+O,GAAOnQ,CAAC,EACR2P,GAAWhO,EAAG3B,CAAC,EACfsP,EAAKe,EAAI1O,CAAC,EAELN,EAAI,GAAIA,EAAI,GAAIA,IAAKgP,EAAGhP,CAAC,EAAIyO,EAAGzO,CAAC,EAItC,IAHA8N,GAAYrO,EAAGuP,EAAIjP,EAAI,EAAE,EACzB+O,GAAOrP,CAAC,EAEHO,EAAI,EAAGA,EAAI,GAAIA,IAAKR,EAAEQ,CAAC,EAAI,EAChC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKR,EAAEQ,CAAC,EAAIrB,EAAEqB,CAAC,EACnC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAClB,IAAKyH,EAAI,EAAGA,EAAI,GAAIA,IAClBjI,EAAEQ,EAAEyH,CAAC,GAAKhI,EAAEO,CAAC,EAAIC,EAAEwH,CAAC,EAIxB,OAAAmH,GAAKI,EAAG,SAAS,EAAE,EAAGxP,CAAC,EAChByP,EACT,CAEA,SAASC,GAAUvQ,EAAG2B,EAAG,CACvB,IAAIiH,EAAI9I,EAAG,EAAG0Q,EAAM1Q,EAAG,EAAG2Q,EAAM3Q,EAAG,EAC/B4Q,EAAM5Q,EAAG,EAAG6Q,EAAO7Q,EAAG,EAAG8Q,EAAO9Q,EAAG,EACnC+Q,EAAO/Q,EAAG,EA2Bd,OAzBAwI,GAAStI,EAAE,CAAC,EAAGK,CAAG,EAClB4I,EAAYjJ,EAAE,CAAC,EAAG2B,CAAC,EACnBiK,EAAE6E,EAAKzQ,EAAE,CAAC,CAAC,EACXoJ,EAAEsH,EAAKD,EAAKlQ,CAAC,EACb4I,EAAEsH,EAAKA,EAAKzQ,EAAE,CAAC,CAAC,EAChBkJ,EAAEwH,EAAK1Q,EAAE,CAAC,EAAG0Q,CAAG,EAEhB9E,EAAE+E,EAAMD,CAAG,EACX9E,EAAEgF,EAAMD,CAAI,EACZvH,EAAEyH,EAAMD,EAAMD,CAAI,EAClBvH,EAAER,EAAGiI,EAAMJ,CAAG,EACdrH,EAAER,EAAGA,EAAG8H,CAAG,EAEX5E,GAAQlD,EAAGA,CAAC,EACZQ,EAAER,EAAGA,EAAG6H,CAAG,EACXrH,EAAER,EAAGA,EAAG8H,CAAG,EACXtH,EAAER,EAAGA,EAAG8H,CAAG,EACXtH,EAAEpJ,EAAE,CAAC,EAAG4I,EAAG8H,CAAG,EAEd9E,EAAE4E,EAAKxQ,EAAE,CAAC,CAAC,EACXoJ,EAAEoH,EAAKA,EAAKE,CAAG,EACX3H,GAASyH,EAAKC,CAAG,GAAGrH,EAAEpJ,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAGW,EAAC,EAEvCiL,EAAE4E,EAAKxQ,EAAE,CAAC,CAAC,EACXoJ,EAAEoH,EAAKA,EAAKE,CAAG,EACX3H,GAASyH,EAAKC,CAAG,EAAU,IAE3BzH,GAAShJ,EAAE,CAAC,CAAC,IAAO2B,EAAE,EAAE,GAAG,GAAIwH,EAAEnJ,EAAE,CAAC,EAAGI,EAAKJ,EAAE,CAAC,CAAC,EAEpDoJ,EAAEpJ,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAGA,EAAE,CAAC,CAAC,EACX,EACT,CAEA,SAAS8Q,GAAiBvM,EAAG8L,EAAIjP,EAAGyO,EAAI,CACtC,IAAIxO,EACAuH,EAAI,IAAI,WAAW,EAAE,EAAG9H,EAAI,IAAI,WAAW,EAAE,EAC7Ca,EAAI,CAAC7B,EAAG,EAAGA,EAAG,EAAGA,EAAG,EAAGA,EAAG,CAAC,EAC3B6I,EAAI,CAAC7I,EAAG,EAAGA,EAAG,EAAGA,EAAG,EAAGA,EAAG,CAAC,EAI/B,GAFIsB,EAAI,IAEJmP,GAAU5H,EAAGkH,CAAE,EAAG,MAAO,GAE7B,IAAKxO,EAAI,EAAGA,EAAID,EAAGC,IAAKkD,EAAElD,CAAC,EAAIgP,EAAGhP,CAAC,EACnC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKkD,EAAElD,EAAE,EAAE,EAAIwO,EAAGxO,CAAC,EAUvC,GATA8N,GAAYrO,EAAGyD,EAAGnD,CAAC,EACnB+O,GAAOrP,CAAC,EACR4O,GAAW/N,EAAGgH,EAAG7H,CAAC,EAElB6O,GAAWhH,EAAG0H,EAAG,SAAS,EAAE,CAAC,EAC7BjB,GAAIzN,EAAGgH,CAAC,EACR2G,EAAK1G,EAAGjH,CAAC,EAETP,GAAK,GACDI,GAAiB6O,EAAI,EAAGzH,EAAG,CAAC,EAAG,CACjC,IAAKvH,EAAI,EAAGA,EAAID,EAAGC,IAAKkD,EAAElD,CAAC,EAAI,EAC/B,MAAO,EACT,CAEA,IAAKA,EAAI,EAAGA,EAAID,EAAGC,IAAKkD,EAAElD,CAAC,EAAIgP,EAAGhP,EAAI,EAAE,EACxC,OAAOD,CACT,CAEA,IAAI2P,GAA4B,GAC5BC,GAA8B,GAC9BC,GAA6B,GAC7BC,GAAgC,GAChCC,GAA0B,GAC1BC,GAAgC,GAChCC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA2B,GAC3BC,GAAwBR,GACxBS,GAAuBR,GACvBS,GAA0BR,GAC1BS,GAAoB,GACpBC,GAA6B,GAC7BC,GAA6B,GAC7BC,GAAwB,GACxBC,GAAoB,GAExBlS,EAAK,SAAW,CACd,qBAAsBsE,GACtB,kBAAmBY,GACnB,cAAeH,GACf,0BAA2BP,GAC3B,sBAAuBM,GACvB,mBAAoBqD,GACpB,0BAA2BE,GAC3B,iBAAkB3G,GAClB,iBAAkBC,GAClB,iBAAkB4G,GAClB,sBAAuBC,GACvB,kBAAmB0D,GACnB,uBAAwBI,GACxB,oBAAqBE,GACrB,mBAAoBC,GACpB,WAAYE,GACZ,gBAAiBC,GACjB,mBAAoBL,GACpB,YAAa+C,GACb,YAAaiB,GACb,oBAAqBR,GACrB,iBAAkBkB,GAElB,0BAA2BC,GAC3B,4BAA6BC,GAC7B,2BAA4BC,GAC5B,8BAA+BC,GAC/B,wBAAyBC,GACzB,8BAA+BC,GAC/B,0BAA2BC,GAC3B,0BAA2BC,GAC3B,yBAA0BC,GAC1B,sBAAuBC,GACvB,qBAAsBC,GACtB,wBAAyBC,GACzB,kBAAmBC,GACnB,2BAA4BC,GAC5B,2BAA4BC,GAC5B,sBAAuBC,GACvB,kBAAmBC,GAEnB,GAAIjS,EACJ,EAAGS,EACH,EAAGyP,GACH,UAAWnH,GACX,YAAaI,EACb,EAAGG,EACH,EAAGF,EACH,EAAG0C,EACH,EAAGzC,EACH,QAAS2C,GACT,IAAKsD,GACL,SAAU9G,GACV,KAAM2H,GACN,WAAYP,GACZ,WAAYC,EACd,EAIA,SAASqC,GAAapQ,EAAGR,EAAG,CAC1B,GAAIQ,EAAE,SAAWmP,GAA2B,MAAM,IAAI,MAAM,cAAc,EAC1E,GAAI3P,EAAE,SAAW4P,GAA6B,MAAM,IAAI,MAAM,gBAAgB,CAChF,CAEA,SAASiB,GAAgBpC,EAAIC,EAAI,CAC/B,GAAID,EAAG,SAAWwB,GAA2B,MAAM,IAAI,MAAM,qBAAqB,EAClF,GAAIvB,EAAG,SAAWwB,GAA2B,MAAM,IAAI,MAAM,qBAAqB,CACpF,CAEA,SAASY,IAAkB,CACzB,QAAS7Q,EAAI,EAAGA,EAAI,UAAU,OAAQA,IACpC,GAAI,EAAE,UAAUA,CAAC,YAAa,YAC5B,MAAM,IAAI,UAAU,iCAAiC,CAE3D,CAEA,SAAS8Q,GAAQC,EAAK,CACpB,QAAS,EAAI,EAAG,EAAIA,EAAI,OAAQ,IAAKA,EAAI,CAAC,EAAI,CAChD,CAEAvS,EAAK,YAAc,SAAS,EAAG,CAC7B,IAAI4E,EAAI,IAAI,WAAW,CAAC,EACxB,OAAAxE,EAAYwE,EAAG,CAAC,EACTA,CACT,EAEA5E,EAAK,UAAY,SAASwS,EAAKC,EAAOrN,EAAK,CACzCiN,GAAgBG,EAAKC,EAAOrN,CAAG,EAC/B+M,GAAa/M,EAAKqN,CAAK,EAGvB,QAFI/N,EAAI,IAAI,WAAW0M,GAA6BoB,EAAI,MAAM,EAC1DxQ,EAAI,IAAI,WAAW0C,EAAE,MAAM,EACtBlD,EAAI,EAAGA,EAAIgR,EAAI,OAAQhR,IAAKkD,EAAElD,EAAE4P,EAA0B,EAAIoB,EAAIhR,CAAC,EAC5E,OAAA+G,GAAiBvG,EAAG0C,EAAGA,EAAE,OAAQ+N,EAAOrN,CAAG,EACpCpD,EAAE,SAASqP,EAA6B,CACjD,EAEArR,EAAK,UAAU,KAAO,SAAS0S,EAAKD,EAAOrN,EAAK,CAC9CiN,GAAgBK,EAAKD,EAAOrN,CAAG,EAC/B+M,GAAa/M,EAAKqN,CAAK,EAGvB,QAFIzQ,EAAI,IAAI,WAAWqP,GAAgCqB,EAAI,MAAM,EAC7DhO,EAAI,IAAI,WAAW1C,EAAE,MAAM,EACtBR,EAAI,EAAGA,EAAIkR,EAAI,OAAQlR,IAAKQ,EAAER,EAAE6P,EAA6B,EAAIqB,EAAIlR,CAAC,EAE/E,OADIQ,EAAE,OAAS,IACXwG,GAAsB9D,EAAG1C,EAAGA,EAAE,OAAQyQ,EAAOrN,CAAG,IAAM,EAAU,KAC7DV,EAAE,SAAS0M,EAA0B,CAC9C,EAEApR,EAAK,UAAU,UAAYkR,GAC3BlR,EAAK,UAAU,YAAcmR,GAC7BnR,EAAK,UAAU,eAAiBqR,GAEhCrR,EAAK,WAAa,SAAS,EAAG8B,EAAG,CAE/B,GADAuQ,GAAgB,EAAGvQ,CAAC,EAChB,EAAE,SAAWyP,GAA+B,MAAM,IAAI,MAAM,YAAY,EAC5E,GAAIzP,EAAE,SAAWwP,GAAyB,MAAM,IAAI,MAAM,YAAY,EACtE,IAAIxI,EAAI,IAAI,WAAWwI,EAAuB,EAC9C,OAAApF,GAAkBpD,EAAG,EAAGhH,CAAC,EAClBgH,CACT,EAEA9I,EAAK,WAAW,KAAO,SAAS,EAAG,CAEjC,GADAqS,GAAgB,CAAC,EACb,EAAE,SAAWd,GAA+B,MAAM,IAAI,MAAM,YAAY,EAC5E,IAAIzI,EAAI,IAAI,WAAWwI,EAAuB,EAC9C,OAAAhF,GAAuBxD,EAAG,CAAC,EACpBA,CACT,EAEA9I,EAAK,WAAW,aAAeuR,GAC/BvR,EAAK,WAAW,mBAAqBsR,GAErCtR,EAAK,IAAM,SAASwS,EAAKC,EAAOE,EAAWC,EAAW,CACpD,IAAI7Q,EAAI/B,EAAK,IAAI,OAAO2S,EAAWC,CAAS,EAC5C,OAAO5S,EAAK,UAAUwS,EAAKC,EAAO1Q,CAAC,CACrC,EAEA/B,EAAK,IAAI,OAAS,SAAS2S,EAAWC,EAAW,CAC/CP,GAAgBM,EAAWC,CAAS,EACpCR,GAAgBO,EAAWC,CAAS,EACpC,IAAI7Q,EAAI,IAAI,WAAW2P,EAAwB,EAC/C,OAAAlF,GAAoBzK,EAAG4Q,EAAWC,CAAS,EACpC7Q,CACT,EAEA/B,EAAK,IAAI,MAAQA,EAAK,UAEtBA,EAAK,IAAI,KAAO,SAASwS,EAAKC,EAAOE,EAAWC,EAAW,CACzD,IAAI7Q,EAAI/B,EAAK,IAAI,OAAO2S,EAAWC,CAAS,EAC5C,OAAO5S,EAAK,UAAU,KAAKwS,EAAKC,EAAO1Q,CAAC,CAC1C,EAEA/B,EAAK,IAAI,KAAK,MAAQA,EAAK,UAAU,KAErCA,EAAK,IAAI,QAAU,UAAW,CAC5B,IAAIgQ,EAAK,IAAI,WAAWwB,EAAyB,EAC7CvB,EAAK,IAAI,WAAWwB,EAAyB,EACjD,OAAAlF,GAAmByD,EAAIC,CAAE,EAClB,CAAC,UAAWD,EAAI,UAAWC,CAAE,CACtC,EAEAjQ,EAAK,IAAI,QAAQ,cAAgB,SAAS4S,EAAW,CAEnD,GADAP,GAAgBO,CAAS,EACrBA,EAAU,SAAWnB,GACvB,MAAM,IAAI,MAAM,qBAAqB,EACvC,IAAIzB,EAAK,IAAI,WAAWwB,EAAyB,EACjD,OAAAlF,GAAuB0D,EAAI4C,CAAS,EAC7B,CAAC,UAAW5C,EAAI,UAAW,IAAI,WAAW4C,CAAS,CAAC,CAC7D,EAEA5S,EAAK,IAAI,gBAAkBwR,GAC3BxR,EAAK,IAAI,gBAAkByR,GAC3BzR,EAAK,IAAI,gBAAkB0R,GAC3B1R,EAAK,IAAI,YAAc2R,GACvB3R,EAAK,IAAI,eAAiBA,EAAK,UAAU,eAEzCA,EAAK,KAAO,SAASwS,EAAKI,EAAW,CAEnC,GADAP,GAAgBG,EAAKI,CAAS,EAC1BA,EAAU,SAAWZ,GACvB,MAAM,IAAI,MAAM,qBAAqB,EACvC,IAAIa,EAAY,IAAI,WAAWf,GAAkBU,EAAI,MAAM,EAC3D,OAAAjC,GAAYsC,EAAWL,EAAKA,EAAI,OAAQI,CAAS,EAC1CC,CACT,EAEA7S,EAAK,KAAK,KAAO,SAAS6S,EAAWF,EAAW,CAE9C,GADAN,GAAgBQ,EAAWF,CAAS,EAChCA,EAAU,SAAWZ,GACvB,MAAM,IAAI,MAAM,qBAAqB,EACvC,IAAIe,EAAM,IAAI,WAAWD,EAAU,MAAM,EACrCE,EAAO9B,GAAiB6B,EAAKD,EAAWA,EAAU,OAAQF,CAAS,EACvE,GAAII,EAAO,EAAG,OAAO,KAErB,QADIrO,EAAI,IAAI,WAAWqO,CAAI,EAClBvR,EAAI,EAAGA,EAAIkD,EAAE,OAAQlD,IAAKkD,EAAElD,CAAC,EAAIsR,EAAItR,CAAC,EAC/C,OAAOkD,CACT,EAEA1E,EAAK,KAAK,SAAW,SAASwS,EAAKI,EAAW,CAG5C,QAFIC,EAAY7S,EAAK,KAAKwS,EAAKI,CAAS,EACpCI,EAAM,IAAI,WAAWlB,EAAiB,EACjCtQ,EAAI,EAAGA,EAAIwR,EAAI,OAAQxR,IAAKwR,EAAIxR,CAAC,EAAIqR,EAAUrR,CAAC,EACzD,OAAOwR,CACT,EAEAhT,EAAK,KAAK,SAAS,OAAS,SAASwS,EAAKQ,EAAKL,EAAW,CAExD,GADAN,GAAgBG,EAAKQ,EAAKL,CAAS,EAC/BK,EAAI,SAAWlB,GACjB,MAAM,IAAI,MAAM,oBAAoB,EACtC,GAAIa,EAAU,SAAWZ,GACvB,MAAM,IAAI,MAAM,qBAAqB,EACvC,IAAIvB,EAAK,IAAI,WAAWsB,GAAoBU,EAAI,MAAM,EAClD9N,EAAI,IAAI,WAAWoN,GAAoBU,EAAI,MAAM,EACjDhR,EACJ,IAAKA,EAAI,EAAGA,EAAIsQ,GAAmBtQ,IAAKgP,EAAGhP,CAAC,EAAIwR,EAAIxR,CAAC,EACrD,IAAKA,EAAI,EAAGA,EAAIgR,EAAI,OAAQhR,IAAKgP,EAAGhP,EAAEsQ,EAAiB,EAAIU,EAAIhR,CAAC,EAChE,OAAQyP,GAAiBvM,EAAG8L,EAAIA,EAAG,OAAQmC,CAAS,GAAK,CAC3D,EAEA3S,EAAK,KAAK,QAAU,UAAW,CAC7B,IAAIgQ,EAAK,IAAI,WAAW+B,EAA0B,EAC9C9B,EAAK,IAAI,WAAW+B,EAA0B,EAClD,OAAAjC,GAAoBC,EAAIC,CAAE,EACnB,CAAC,UAAWD,EAAI,UAAWC,CAAE,CACtC,EAEAjQ,EAAK,KAAK,QAAQ,cAAgB,SAAS4S,EAAW,CAEpD,GADAP,GAAgBO,CAAS,EACrBA,EAAU,SAAWZ,GACvB,MAAM,IAAI,MAAM,qBAAqB,EAEvC,QADIhC,EAAK,IAAI,WAAW+B,EAA0B,EACzCvQ,EAAI,EAAGA,EAAIwO,EAAG,OAAQxO,IAAKwO,EAAGxO,CAAC,EAAIoR,EAAU,GAAGpR,CAAC,EAC1D,MAAO,CAAC,UAAWwO,EAAI,UAAW,IAAI,WAAW4C,CAAS,CAAC,CAC7D,EAEA5S,EAAK,KAAK,QAAQ,SAAW,SAASiT,EAAM,CAE1C,GADAZ,GAAgBY,CAAI,EAChBA,EAAK,SAAWhB,GAClB,MAAM,IAAI,MAAM,eAAe,EAGjC,QAFIjC,EAAK,IAAI,WAAW+B,EAA0B,EAC9C9B,EAAK,IAAI,WAAW+B,EAA0B,EACzCxQ,EAAI,EAAGA,EAAI,GAAIA,IAAKyO,EAAGzO,CAAC,EAAIyR,EAAKzR,CAAC,EAC3C,OAAAuO,GAAoBC,EAAIC,EAAI,EAAI,EACzB,CAAC,UAAWD,EAAI,UAAWC,CAAE,CACtC,EAEAjQ,EAAK,KAAK,gBAAkB+R,GAC5B/R,EAAK,KAAK,gBAAkBgS,GAC5BhS,EAAK,KAAK,WAAaiS,GACvBjS,EAAK,KAAK,gBAAkB8R,GAE5B9R,EAAK,KAAO,SAASwS,EAAK,CACxBH,GAAgBG,CAAG,EACnB,IAAIvR,EAAI,IAAI,WAAWiR,EAAiB,EACxC,OAAA5C,GAAYrO,EAAGuR,EAAKA,EAAI,MAAM,EACvBvR,CACT,EAEAjB,EAAK,KAAK,WAAakS,GAEvBlS,EAAK,OAAS,SAASgB,EAAGK,EAAG,CAI3B,OAHAgR,GAAgBrR,EAAGK,CAAC,EAEhBL,EAAE,SAAW,GAAKK,EAAE,SAAW,GAC/BL,EAAE,SAAWK,EAAE,OAAe,GAC1BF,GAAGH,EAAG,EAAGK,EAAG,EAAGL,EAAE,MAAM,IAAM,CACvC,EAEAhB,EAAK,QAAU,SAASkT,EAAI,CAC1B9S,EAAc8S,CAChB,EAEC,UAAW,CAGV,IAAIC,EAAS,OAAO,KAAS,IAAe,KAAK,QAAU,KAAK,SAAY,KAC5E,GAAIA,GAAUA,EAAO,gBAAiB,CAEpC,IAAIC,EAAQ,MACZpT,EAAK,QAAQ,SAASgB,EAAGO,EAAG,CAC1B,IAAIC,EAAGoH,EAAI,IAAI,WAAWrH,CAAC,EAC3B,IAAKC,EAAI,EAAGA,EAAID,EAAGC,GAAK4R,EACtBD,EAAO,gBAAgBvK,EAAE,SAASpH,EAAGA,EAAI,KAAK,IAAID,EAAIC,EAAG4R,CAAK,CAAC,CAAC,EAElE,IAAK5R,EAAI,EAAGA,EAAID,EAAGC,IAAKR,EAAEQ,CAAC,EAAIoH,EAAEpH,CAAC,EAClC8Q,GAAQ1J,CAAC,CACX,CAAC,CACH,MAAW,OAAOyK,GAAY,MAE5BF,EAAS,GAAQ,QAAQ,EACrBA,GAAUA,EAAO,aACnBnT,EAAK,QAAQ,SAASgB,EAAGO,EAAG,CAC1B,IAAIC,EAAGoH,EAAIuK,EAAO,YAAY5R,CAAC,EAC/B,IAAKC,EAAI,EAAGA,EAAID,EAAGC,IAAKR,EAAEQ,CAAC,EAAIoH,EAAEpH,CAAC,EAClC8Q,GAAQ1J,CAAC,CACX,CAAC,EAGP,EAAG,CAEH,GAAG,OAAO7I,GAAW,KAAeA,GAAO,QAAUA,GAAO,QAAW,KAAK,KAAO,KAAK,MAAQ,CAAC,CAAE,ICxyE5F,SAASuT,GAAUC,EAAK,CAC3B,OAAO,KAAK,MAAM,KAAK,UAAUA,CAAG,CAAC,CACzC,CA8OO,IAAMC,GAAM,SAAS,UAAU,KAAK,KAAK,OAAO,UAAU,cAAc,EC9RxE,IAAMC,GAAQ,IAAI,WAAW,CAAC,EAQ9B,SAASC,GAAOC,EAAIC,EAAI,CAC3B,GAAID,IAAOC,EACP,MAAO,GAEX,GAAID,EAAG,aAAeC,EAAG,WACrB,MAAO,GAEX,QAASC,EAAK,EAAGA,EAAKF,EAAG,WAAYE,IACjC,GAAIF,EAAGE,CAAE,IAAMD,EAAGC,CAAE,EAChB,MAAO,GAGf,MAAO,EACX,CACO,SAASC,EAAOC,EAAG,CACtB,GAAIA,aAAa,YAAcA,EAAE,YAAY,OAAS,aAClD,OAAOA,EAEX,GAAIA,aAAa,YACb,OAAO,IAAI,WAAWA,CAAC,EAE3B,GAAI,YAAY,OAAOA,CAAC,EACpB,OAAO,IAAI,WAAWA,EAAE,OAAQA,EAAE,WAAYA,EAAE,UAAU,EAE9D,MAAM,IAAI,MAAM,mCAAmC,CACvD,CCvBA,SAASC,GAAKC,EAAUC,EAAM,CAC1B,GAAID,EAAS,QAAU,IACnB,MAAM,IAAI,UAAU,mBAAmB,EAG3C,QADIE,EAAW,IAAI,WAAW,GAAG,EACxBC,EAAI,EAAGA,EAAID,EAAS,OAAQC,IACjCD,EAASC,CAAC,EAAI,IAElB,QAASC,EAAI,EAAGA,EAAIJ,EAAS,OAAQI,IAAK,CACtC,IAAIC,EAAIL,EAAS,OAAOI,CAAC,EACrBE,EAAKD,EAAE,WAAW,CAAC,EACvB,GAAIH,EAASI,CAAE,IAAM,IACjB,MAAM,IAAI,UAAUD,EAAI,eAAe,EAE3CH,EAASI,CAAE,EAAIF,CACnB,CACA,IAAIG,EAAOP,EAAS,OAChBQ,EAASR,EAAS,OAAO,CAAC,EAC1BS,EAAS,KAAK,IAAIF,CAAI,EAAI,KAAK,IAAI,GAAG,EACtCG,EAAU,KAAK,IAAI,GAAG,EAAI,KAAK,IAAIH,CAAI,EAI3C,SAASI,EAAOC,GAAQ,CASpB,GAPIA,cAAkB,aACb,YAAY,OAAOA,EAAM,EAC9BA,GAAS,IAAI,WAAWA,GAAO,OAAQA,GAAO,WAAYA,GAAO,UAAU,EAEtE,MAAM,QAAQA,EAAM,IACzBA,GAAS,WAAW,KAAKA,EAAM,IAE/B,EAAEA,cAAkB,YACpB,MAAM,IAAI,UAAU,qBAAqB,EAE7C,GAAIA,GAAO,SAAW,EAClB,MAAO,GAOX,QAJIC,GAAS,EACTC,GAAS,EACTC,GAAS,EACTC,GAAOJ,GAAO,OACXG,KAAWC,IAAQJ,GAAOG,EAAM,IAAM,GACzCA,KACAF,KAMJ,QAHII,IAASD,GAAOD,IAAUL,EAAU,IAAO,EAC3CQ,GAAM,IAAI,WAAWD,EAAI,EAEtBF,KAAWC,IAAM,CAIpB,QAHIG,GAAQP,GAAOG,EAAM,EAErBX,GAAI,EACCgB,GAAMH,GAAO,GAAIE,KAAU,GAAKf,GAAIU,KAAYM,KAAQ,GAAKA,KAAOhB,KACzEe,IAAU,IAAMD,GAAIE,EAAG,IAAO,EAC9BF,GAAIE,EAAG,EAAKD,GAAQZ,IAAU,EAC9BY,GAASA,GAAQZ,IAAU,EAE/B,GAAIY,KAAU,EACV,MAAM,IAAI,MAAM,gBAAgB,EAEpCL,GAASV,GACTW,IACJ,CAGA,QADIM,GAAMJ,GAAOH,GACVO,KAAQJ,IAAQC,GAAIG,EAAG,IAAM,GAChCA,KAIJ,QADIC,GAAMd,EAAO,OAAOK,EAAM,EACvBQ,GAAMJ,GAAM,EAAEI,GACjBC,IAAOtB,EAAS,OAAOkB,GAAIG,EAAG,CAAC,EAEnC,OAAOC,EACX,CAIA,SAASC,GAAaX,GAAQ,CAC1B,GAAI,OAAOA,IAAW,SAClB,MAAM,IAAI,UAAU,iBAAiB,EAEzC,GAAIA,GAAO,SAAW,EAClB,OAAO,IAAI,WAEf,IAAIY,GAAM,EAEV,GAAIZ,GAAOY,EAAG,IAAM,IAMpB,SAFIX,GAAS,EACTC,GAAS,EACNF,GAAOY,EAAG,IAAMhB,GACnBK,KACAW,KAMJ,QAHIP,IAAUL,GAAO,OAASY,IAAOf,EAAU,IAAO,EAClDgB,GAAO,IAAI,WAAWR,EAAI,EAEvBL,GAAOY,EAAG,GAAG,CAEhB,IAAIL,GAAQjB,EAASU,GAAO,WAAWY,EAAG,CAAC,EAE3C,GAAIL,KAAU,IACV,OAGJ,QADIf,GAAI,EACCsB,GAAMT,GAAO,GAAIE,KAAU,GAAKf,GAAIU,KAAYY,KAAQ,GAAKA,KAAOtB,KACzEe,IAAUZ,EAAOkB,GAAKC,EAAG,IAAO,EAChCD,GAAKC,EAAG,EAAKP,GAAQ,MAAS,EAC9BA,GAASA,GAAQ,MAAS,EAE9B,GAAIA,KAAU,EACV,MAAM,IAAI,MAAM,gBAAgB,EAEpCL,GAASV,GACToB,IACJ,CAEA,GAAIZ,GAAOY,EAAG,IAAM,IAKpB,SADIG,GAAMV,GAAOH,GACVa,KAAQV,IAAQQ,GAAKE,EAAG,IAAM,GACjCA,KAIJ,QAFIC,GAAM,IAAI,WAAWf,IAAUI,GAAOU,GAAI,EAC1CxB,GAAIU,GACDc,KAAQV,IACXW,GAAIzB,IAAG,EAAIsB,GAAKE,IAAK,EAEzB,OAAOC,IACX,CAIA,SAASC,GAAOC,GAAQ,CACpB,IAAIC,GAASR,GAAaO,EAAM,EAChC,GAAIC,GACA,OAAOA,GAEX,MAAM,IAAI,MAAM,OAAO9B,CAAI,YAAY,CAC3C,CACA,MAAO,CACH,OAAQU,EACR,aAAcY,GACd,OAAQM,EACZ,CACJ,CACA,IAAIG,GAAMjC,GACNkC,GAAkCD,GAC/BE,GAAQD,GChKf,IAAME,GAAN,KAAc,CACV,YAAYC,EAAMC,EAAQC,EAAY,CAClC,KAAK,KAAOF,EACZ,KAAK,OAASC,EACd,KAAK,WAAaC,CACtB,CACA,OAAOC,EAAO,CACV,GAAIA,aAAiB,WACjB,MAAO,GAAG,KAAK,MAAM,GAAG,KAAK,WAAWA,CAAK,CAAC,GAG9C,MAAM,MAAM,mCAAmC,CAEvD,CACJ,EAMMC,GAAN,KAAc,CACV,YAAYJ,EAAMC,EAAQI,EAAY,CAIlC,GAHA,KAAK,KAAOL,EACZ,KAAK,OAASC,EAEVA,EAAO,YAAY,CAAC,IAAM,OAC1B,MAAM,IAAI,MAAM,0BAA0B,EAE9C,KAAK,gBAAkBA,EAAO,YAAY,CAAC,EAC3C,KAAK,WAAaI,CACtB,CACA,OAAOC,EAAM,CACT,GAAI,OAAOA,GAAS,SAAU,CAC1B,GAAIA,EAAK,YAAY,CAAC,IAAM,KAAK,gBAC7B,MAAM,MAAM,qCAAqC,KAAK,UAAUA,CAAI,CAAC,KAAK,KAAK,IAAI,+CAA+C,KAAK,MAAM,EAAE,EAEnJ,OAAO,KAAK,WAAWA,EAAK,MAAM,KAAK,OAAO,MAAM,CAAC,CACzD,KAEI,OAAM,MAAM,mCAAmC,CAEvD,CACA,GAAGC,EAAS,CACR,OAAOC,GAAG,KAAMD,CAAO,CAC3B,CACJ,EACME,GAAN,KAAsB,CAClB,YAAYC,EAAU,CAClB,KAAK,SAAWA,CACpB,CACA,GAAGH,EAAS,CACR,OAAOC,GAAG,KAAMD,CAAO,CAC3B,CACA,OAAOI,EAAO,CACV,IAAMV,EAASU,EAAM,CAAC,EAChBJ,EAAU,KAAK,SAASN,CAAM,EACpC,GAAIM,GAAW,KACX,OAAOA,EAAQ,OAAOI,CAAK,EAG3B,MAAM,WAAW,qCAAqC,KAAK,UAAUA,CAAK,CAAC,+BAA+B,OAAO,KAAK,KAAK,QAAQ,CAAC,gBAAgB,CAE5J,CACJ,EACO,SAASH,GAAGI,EAAMC,EAAO,CAC5B,IAAIC,EAAIC,EACR,OAAO,IAAIN,GAAgB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAKK,EAAKF,EAAK,YAAc,MAAQE,IAAO,OAASA,EAAK,CAAE,CAACF,EAAK,MAAM,EAAGA,CAAK,CAAE,GAAKG,EAAKF,EAAM,YAAc,MAAQE,IAAO,OAASA,EAAK,CAAE,CAACF,EAAM,MAAM,EAAGA,CAAM,CAAE,CAAC,CACpO,CACO,IAAMG,GAAN,KAAY,CACf,YAAYhB,EAAMC,EAAQC,EAAYG,EAAY,CAC9C,KAAK,KAAOL,EACZ,KAAK,OAASC,EACd,KAAK,WAAaC,EAClB,KAAK,WAAaG,EAClB,KAAK,QAAU,IAAIN,GAAQC,EAAMC,EAAQC,CAAU,EACnD,KAAK,QAAU,IAAIE,GAAQJ,EAAMC,EAAQI,CAAU,CACvD,CACA,OAAOM,EAAO,CACV,OAAO,KAAK,QAAQ,OAAOA,CAAK,CACpC,CACA,OAAOA,EAAO,CACV,OAAO,KAAK,QAAQ,OAAOA,CAAK,CACpC,CACJ,EACO,SAASM,GAAK,CAAE,KAAAjB,EAAM,OAAAC,EAAQ,OAAAiB,EAAQ,OAAAC,CAAO,EAAG,CACnD,OAAO,IAAIH,GAAMhB,EAAMC,EAAQiB,EAAQC,CAAM,CACjD,CACO,SAASC,GAAM,CAAE,KAAApB,EAAM,OAAAC,EAAQ,SAAAoB,CAAS,EAAG,CAC9C,GAAM,CAAE,OAAAH,EAAQ,OAAAC,CAAO,EAAIG,GAAMD,EAAUrB,CAAI,EAC/C,OAAOiB,GAAK,CACR,OAAAhB,EACA,KAAAD,EACA,OAAAkB,EACA,OAASZ,GAASiB,EAAOJ,EAAOb,CAAI,CAAC,CACzC,CAAC,CACL,CACA,SAASa,GAAOK,EAAQH,EAAUI,EAAazB,EAAM,CAEjD,IAAM0B,EAAQ,CAAC,EACf,QAASC,EAAI,EAAGA,EAAIN,EAAS,OAAQ,EAAEM,EACnCD,EAAML,EAASM,CAAC,CAAC,EAAIA,EAGzB,IAAIC,EAAMJ,EAAO,OACjB,KAAOA,EAAOI,EAAM,CAAC,IAAM,KACvB,EAAEA,EAGN,IAAMC,EAAM,IAAI,WAAYD,EAAMH,EAAc,EAAK,CAAC,EAElDK,EAAO,EACPC,EAAS,EACTC,EAAU,EACd,QAASL,EAAI,EAAGA,EAAIC,EAAK,EAAED,EAAG,CAE1B,IAAMM,EAAQP,EAAMF,EAAOG,CAAC,CAAC,EAC7B,GAAIM,IAAU,OACV,MAAM,IAAI,YAAY,OAAOjC,CAAI,YAAY,EAGjD+B,EAAUA,GAAUN,EAAeQ,EACnCH,GAAQL,EAEJK,GAAQ,IACRA,GAAQ,EACRD,EAAIG,GAAS,EAAI,IAAQD,GAAUD,EAE3C,CAEA,GAAIA,GAAQL,GAAgB,IAAQM,GAAW,EAAID,EAC/C,MAAM,IAAI,YAAY,wBAAwB,EAElD,OAAOD,CACX,CACA,SAASX,GAAOgB,EAAMb,EAAUI,EAAa,CACzC,IAAMU,EAAMd,EAASA,EAAS,OAAS,CAAC,IAAM,IACxCe,GAAQ,GAAKX,GAAe,EAC9BI,EAAM,GACNC,EAAO,EACPC,EAAS,EACb,QAASJ,EAAI,EAAGA,EAAIO,EAAK,OAAQ,EAAEP,EAK/B,IAHAI,EAAUA,GAAU,EAAKG,EAAKP,CAAC,EAC/BG,GAAQ,EAEDA,EAAOL,GACVK,GAAQL,EACRI,GAAOR,EAASe,EAAQL,GAAUD,CAAK,EAQ/C,GAJIA,IAAS,IACTD,GAAOR,EAASe,EAAQL,GAAWN,EAAcK,CAAM,GAGvDK,EACA,KAASN,EAAI,OAASJ,EAAe,GACjCI,GAAO,IAGf,OAAOA,CACX,CAIO,SAASQ,GAAQ,CAAE,KAAArC,EAAM,OAAAC,EAAQ,YAAAwB,EAAa,SAAAJ,CAAS,EAAG,CAC7D,OAAOJ,GAAK,CACR,OAAAhB,EACA,KAAAD,EACA,OAAOW,EAAO,CACV,OAAOO,GAAOP,EAAOU,EAAUI,CAAW,CAC9C,EACA,OAAOd,EAAO,CACV,OAAOQ,GAAOR,EAAOU,EAAUI,EAAazB,CAAI,CACpD,CACJ,CAAC,CACL,CCrLO,IAAMsC,GAASC,GAAQ,CAC1B,OAAQ,IACR,KAAM,SACN,SAAU,mCACV,YAAa,CACjB,CAAC,EACYC,GAAcD,GAAQ,CAC/B,OAAQ,IACR,KAAM,cACN,SAAU,mCACV,YAAa,CACjB,CAAC,EACYE,GAAYF,GAAQ,CAC7B,OAAQ,IACR,KAAM,YACN,SAAU,oCACV,YAAa,CACjB,CAAC,EACYG,GAAiBH,GAAQ,CAClC,OAAQ,IACR,KAAM,iBACN,SAAU,oCACV,YAAa,CACjB,CAAC,EACYI,GAAYJ,GAAQ,CAC7B,OAAQ,IACR,KAAM,YACN,SAAU,mCACV,YAAa,CACjB,CAAC,EACYK,GAAiBL,GAAQ,CAClC,OAAQ,IACR,KAAM,iBACN,SAAU,mCACV,YAAa,CACjB,CAAC,EACYM,GAAeN,GAAQ,CAChC,OAAQ,IACR,KAAM,eACN,SAAU,oCACV,YAAa,CACjB,CAAC,EACYO,GAAoBP,GAAQ,CACrC,OAAQ,IACR,KAAM,oBACN,SAAU,oCACV,YAAa,CACjB,CAAC,EACYQ,GAAUR,GAAQ,CAC3B,OAAQ,IACR,KAAM,UACN,SAAU,mCACV,YAAa,CACjB,CAAC,ECtDM,IAAMS,GAAYC,GAAM,CAC3B,KAAM,YACN,OAAQ,IACR,SAAU,4DACd,CAAC,EACYC,GAAeD,GAAM,CAC9B,KAAM,eACN,OAAQ,IACR,SAAU,4DACd,CAAC,ECTD,IAAAE,GAAoB,WCApB,IAAIC,GAAWC,GACXC,GAAM,IAAMC,GAAO,IAAMC,GAAS,CAACD,GAAME,GAAM,KAAK,IAAI,EAAG,EAAE,EAMjE,SAASJ,GAAOK,EAAKC,EAAKC,EAAQ,CAC9BD,EAAMA,GAAO,CAAC,EACdC,EAASA,GAAU,EAEnB,QADIC,EAAYD,EACTF,GAAOD,IACVE,EAAIC,GAAQ,EAAKF,EAAM,IAAQJ,GAC/BI,GAAO,IAEX,KAAOA,EAAMF,IACTG,EAAIC,GAAQ,EAAKF,EAAM,IAAQJ,GAC/BI,KAAS,EAEb,OAAAC,EAAIC,CAAM,EAAIF,EAAM,EAEpBL,GAAO,MAAQO,EAASC,EAAY,EAC7BF,CACX,CACA,IAAIG,GAASC,GACTC,GAAQ,IAAMC,GAAS,IAK3B,SAASF,GAAKG,EAAKN,EAAQ,CACvB,IAAIO,EAAM,EAAGP,EAASA,GAAU,EAAGQ,EAAQ,EAAGC,EAAUT,EAAQU,EAAGC,EAAIL,EAAI,OAC3E,EAAG,CACC,GAAIG,GAAWE,EAEX,MAAAR,GAAK,MAAQ,EACP,IAAI,WAAW,yBAAyB,EAElDO,EAAIJ,EAAIG,GAAS,EACjBF,GAAOC,EAAQ,IACRE,EAAIL,KAAWG,GACfE,EAAIL,IAAU,KAAK,IAAI,EAAGG,CAAK,EACtCA,GAAS,CACb,OAASE,GAAKN,IAEd,OAAAD,GAAK,MAAQM,EAAUT,EAChBO,CACX,CACA,IAAIK,GAAK,KAAK,IAAI,EAAG,CAAC,EAClBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAS,SAAgCC,EAAO,CAChD,OAAQA,EAAQV,GAAK,EACfU,EAAQT,GAAK,EACTS,EAAQR,GAAK,EACTQ,EAAQP,GAAK,EACTO,EAAQN,GAAK,EACTM,EAAQL,GAAK,EACTK,EAAQJ,GAAK,EACTI,EAAQH,GAAK,EACTG,EAAQF,GAAK,EACT,EAC1C,EACIG,GAAS,CACT,OAAQ/B,GACR,OAAQU,GACR,eAAgBmB,EACpB,EACIG,GAAeD,GACZE,GAAQD,GC1ER,SAASE,GAAOC,EAAMC,EAAS,EAAG,CAErC,MAAO,CADMC,GAAO,OAAOF,EAAMC,CAAM,EACzBC,GAAO,OAAO,KAAK,CACrC,CACO,SAASC,GAASC,EAAKC,EAAQJ,EAAS,EAAG,CAC9C,OAAAC,GAAO,OAAOE,EAAKC,EAAQJ,CAAM,EAC1BI,CACX,CACO,SAASC,GAAeF,EAAK,CAChC,OAAOF,GAAO,eAAeE,CAAG,CACpC,CCNO,SAASG,GAAOC,EAAMC,EAAQ,CACjC,IAAMC,EAAOD,EAAO,WACdE,EAAoBC,GAAeJ,CAAI,EACvCK,EAAeF,EAAoBC,GAAeF,CAAI,EACtDI,EAAQ,IAAI,WAAWD,EAAeH,CAAI,EAChD,OAAOK,GAASP,EAAMM,EAAO,CAAC,EACvBC,GAASL,EAAMI,EAAOH,CAAU,EACvCG,EAAM,IAAIL,EAAQI,CAAY,EACvB,IAAIG,GAAOR,EAAME,EAAMD,EAAQK,CAAK,CAC/C,CAIO,SAASG,GAAOC,EAAW,CAC9B,IAAMJ,EAAQK,EAAOD,CAAS,EACxB,CAACV,EAAMG,CAAU,EAAWM,GAAOH,CAAK,EACxC,CAACJ,EAAMG,CAAY,EAAWI,GAAOH,EAAM,SAASH,CAAU,CAAC,EAC/DF,EAASK,EAAM,SAASH,EAAaE,CAAY,EACvD,GAAIJ,EAAO,aAAeC,EACtB,MAAM,IAAI,MAAM,kBAAkB,EAEtC,OAAO,IAAIM,GAAOR,EAAME,EAAMD,EAAQK,CAAK,CAC/C,CACO,SAASM,GAAOC,EAAGC,EAAG,CACzB,GAAID,IAAMC,EACN,MAAO,GAEN,CACD,IAAMC,EAAOD,EACb,OAAQD,EAAE,OAASE,EAAK,MACpBF,EAAE,OAASE,EAAK,MAChBA,EAAK,iBAAiB,YACtBH,GAAWC,EAAE,MAAOE,EAAK,KAAK,CACtC,CACJ,CAKO,IAAMP,GAAN,KAAa,CAIhB,YAAYR,EAAME,EAAMD,EAAQK,EAAO,CACnC,KAAK,KAAON,EACZ,KAAK,KAAOE,EACZ,KAAK,OAASD,EACd,KAAK,MAAQK,CACjB,CACJ,ECrDO,SAASU,EAAK,CAAE,KAAAC,EAAM,KAAAC,EAAM,OAAAC,CAAO,EAAG,CACzC,OAAO,IAAIC,GAAOH,EAAMC,EAAMC,CAAM,CACxC,CAKO,IAAMC,GAAN,KAAa,CAChB,YAAYH,EAAMC,EAAMC,EAAQ,CAC5B,KAAK,KAAOF,EACZ,KAAK,KAAOC,EACZ,KAAK,OAASC,CAClB,CACA,OAAOE,EAAO,CACV,GAAIA,aAAiB,YAAcA,aAAiB,eAAgB,CAChE,IAAMC,EAAS,KAAK,OAAOD,CAAK,EAChC,OAAOC,aAAkB,WACZC,GAAO,KAAK,KAAMD,CAAM,EAE/BA,EAAO,KAAKE,GAAiBD,GAAO,KAAK,KAAMC,CAAM,CAAC,CAChE,KAEI,OAAM,MAAM,mCAAmC,CAGvD,CACJ,EJxBA,GAAM,CAAE,QAAAC,CAAQ,EAAI,GAAAC,QACPC,GAAWC,EAAK,CACzB,KAAM,YACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,CAAC,CAAC,CAChE,CAAC,EACYE,GAAYH,EAAK,CAC1B,KAAM,aACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,CAAC,CAAC,CAChE,CAAC,EACYG,GAAYJ,EAAK,CAC1B,KAAM,aACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,CAAC,CAAC,CAChE,CAAC,EACYI,GAAYL,EAAK,CAC1B,KAAM,aACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,CAAC,CAAC,CAChE,CAAC,EACYK,GAAYN,EAAK,CAC1B,KAAM,aACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,CAAC,CAAC,CAChE,CAAC,EACYM,GAAYP,EAAK,CAC1B,KAAM,aACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,CAAC,CAAC,CAChE,CAAC,EACYO,GAAYR,EAAK,CAC1B,KAAM,aACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,CAAC,CAAC,CAChE,CAAC,EACYQ,GAAYT,EAAK,CAC1B,KAAM,aACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,CAAC,CAAC,CAChE,CAAC,EACYS,GAAYV,EAAK,CAC1B,KAAM,aACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,CAAC,CAAC,CAChE,CAAC,EACYU,GAAYX,EAAK,CAC1B,KAAM,aACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYW,GAAYZ,EAAK,CAC1B,KAAM,aACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYY,GAAYb,EAAK,CAC1B,KAAM,aACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYa,GAAad,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYc,GAAaf,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYe,GAAahB,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYgB,GAAajB,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYiB,GAAalB,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYkB,GAAanB,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYmB,GAAapB,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYoB,GAAarB,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYqB,GAAatB,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYsB,GAAavB,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYuB,GAAaxB,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYwB,GAAazB,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYyB,GAAa1B,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY0B,GAAa3B,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY2B,GAAa5B,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY4B,GAAa7B,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY6B,GAAa9B,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY8B,GAAa/B,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY+B,GAAahC,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYgC,GAAajC,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYiC,GAAalC,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYkC,GAAanC,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYmC,GAAapC,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYoC,GAAarC,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYqC,GAAatC,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYsC,GAAavC,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYuC,GAAaxC,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYwC,GAAazC,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYyC,GAAa1C,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY0C,GAAa3C,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY2C,GAAa5C,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY4C,GAAa7C,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY6C,GAAa9C,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY8C,GAAa/C,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY+C,GAAahD,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYgD,GAAajD,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYiD,GAAalD,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYkD,GAAanD,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYmD,GAAapD,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYoD,GAAarD,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYqD,GAAatD,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYsD,GAAavD,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYuD,GAAaxD,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYwD,GAAazD,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYyD,GAAa1D,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY0D,GAAa3D,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY2D,GAAa5D,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY4D,GAAa7D,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY6D,GAAa9D,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY8D,GAAa/D,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACY+D,GAAahE,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EACYgE,GAAajE,EAAK,CAC3B,KAAM,cACN,KAAM,MACN,OAASC,GAAgBC,EAAOL,EAAQI,EAAO,OAAW,EAAE,CAAC,CACjE,CAAC,EK3TD,IAAAiE,GAAoB,WATpB,IAAIC,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,EAAW,CACrF,SAASC,EAAMC,EAAO,CAAE,OAAOA,aAAiBH,EAAIG,EAAQ,IAAIH,EAAE,SAAUI,EAAS,CAAEA,EAAQD,CAAK,CAAG,CAAC,CAAG,CAC3G,OAAO,IAAKH,IAAMA,EAAI,UAAU,SAAUI,EAASC,EAAQ,CACvD,SAASC,EAAUH,EAAO,CAAE,GAAI,CAAEI,EAAKN,EAAU,KAAKE,CAAK,CAAC,CAAG,OAASK,EAAG,CAAEH,EAAOG,CAAC,CAAG,CAAE,CAC1F,SAASC,EAASN,EAAO,CAAE,GAAI,CAAEI,EAAKN,EAAU,MAASE,CAAK,CAAC,CAAG,OAASK,EAAG,CAAEH,EAAOG,CAAC,CAAG,CAAE,CAC7F,SAASD,EAAKG,EAAQ,CAAEA,EAAO,KAAON,EAAQM,EAAO,KAAK,EAAIR,EAAMQ,EAAO,KAAK,EAAE,KAAKJ,EAAWG,CAAQ,CAAG,CAC7GF,GAAMN,EAAYA,EAAU,MAAMH,EAASC,GAAc,CAAC,CAAC,GAAG,KAAK,CAAC,CACxE,CAAC,CACL,EAIM,CAAE,QAAAY,GAAS,YAAAC,GAAa,cAAAC,GAAe,aAAAC,EAAa,EAAI,GAAAC,QACjDC,GAAmBC,EAAK,CACjC,KAAM,cACN,KAAM,MACN,OAASC,GAAUrB,GAAU,OAAQ,OAAQ,OAAQ,WAAa,CAC9D,GAAIqB,aAAiB,eAAgB,CACjC,IAAMC,EAAMP,GAAY,EAAE,EACpBQ,EAASF,EAAM,UAAU,EAC/B,OAAS,CACL,IAAMR,EAAS,MAAMU,EAAO,KAAK,EACjC,GAAIV,EAAO,KACP,MACJG,GAAcM,EAAWE,EAAOX,EAAO,KAAK,CAAC,CACjD,CACA,OAAOI,GAAaK,CAAG,CAC3B,KAEI,QAAaE,EAAOV,GAAQO,EAAO,OAAW,EAAE,CAAC,CAEzD,CAAC,CACL,CAAC,EChCD,IAAII,GAQG,SAASC,GAAOC,EAAMC,EAAM,CAC/B,GAAM,CAAE,MAAAC,EAAO,QAAAC,CAAQ,EAAIH,EAC3B,OAAQG,EAAS,CACb,IAAK,GACD,OAAOC,GAAWF,EAAOG,GAAUL,CAAI,EAAGC,GAA0CK,GAAU,OAAO,EACzG,QACI,OAAOC,GAAWL,EAAOG,GAAUL,CAAI,EAAIC,GAA0CO,GAAO,OAAQ,CAC5G,CACJ,CASA,IAAMC,GAAQ,IAAI,QAClB,SAASC,GAAUC,EAAK,CACpB,IAAMD,EAAYD,GAAM,IAAIE,CAAG,EAC/B,GAAID,GAAa,KAAM,CACnB,IAAMA,EAAY,IAAI,IACtB,OAAAD,GAAM,IAAIE,EAAKD,CAAS,EACjBA,CACX,CACA,OAAOA,CACX,CACO,IAAME,GAAN,MAAMC,CAAI,CAMb,YAAYC,EAASC,EAAMC,EAAWC,EAAO,CACzC,KAAKC,EAAE,EAAI,MACX,KAAK,KAAOH,EACZ,KAAK,QAAUD,EACf,KAAK,UAAYE,EACjB,KAAK,MAAQC,EAGb,KAAK,GAAG,EAAIA,CAChB,CAOA,IAAI,OAAQ,CACR,OAAO,IACX,CAEA,IAAI,YAAa,CACb,OAAO,KAAK,MAAM,UACtB,CAEA,IAAI,YAAa,CACb,OAAO,KAAK,MAAM,UACtB,CACA,MAAO,CACH,OAAQ,KAAK,QAAS,CAClB,IAAK,GACD,OAAO,KAEX,IAAK,GAAG,CACJ,GAAM,CAAE,KAAAF,EAAM,UAAAC,CAAU,EAAI,KAC5B,GAAID,IAASI,GACT,MAAM,IAAI,MAAM,0CAA0C,EAG9D,GAAIH,EAAU,OAASI,GACnB,MAAM,IAAI,MAAM,oDAAoD,EAExE,OAAQP,EAAI,SAASG,CAAS,CAClC,CACA,QACI,MAAM,MAAM,+BAA+B,KAAK,OAAO,4CAA4C,CAE3G,CACJ,CACA,MAAO,CACH,OAAQ,KAAK,QAAS,CAClB,IAAK,GAAG,CACJ,GAAM,CAAE,KAAAD,EAAM,OAAAM,CAAO,EAAI,KAAK,UACxBL,EAAmBM,GAAOP,EAAMM,CAAM,EAC5C,OAAQR,EAAI,SAAS,KAAK,KAAMG,CAAS,CAC7C,CACA,IAAK,GACD,OAAO,KAEX,QACI,MAAM,MAAM,+BAA+B,KAAK,OAAO,4CAA4C,CAE3G,CACJ,CACA,OAAOO,EAAO,CACV,OAAOV,EAAI,OAAO,KAAMU,CAAK,CACjC,CACA,OAAO,OAAOC,EAAMD,EAAO,CACvB,IAAME,EAAUF,EAChB,OAAQE,GAAW,MACfD,EAAK,OAASC,EAAQ,MACtBD,EAAK,UAAYC,EAAQ,SAClBC,GAAOF,EAAK,UAAWC,EAAQ,SAAS,CACvD,CACA,SAASE,EAAM,CACX,OAAOC,GAAO,KAAMD,CAAI,CAC5B,CACA,QAAS,CACL,MAAO,CAAE,IAAKC,GAAO,IAAI,CAAE,CAC/B,CACA,MAAO,CACH,OAAO,IACX,CAEA,EAAEV,GAAK,OAAO,YAAa,OAAO,IAAI,4BAA4B,EAAE,GAAI,CACpE,MAAO,OAAO,KAAK,SAAS,CAAC,GACjC,CAWA,OAAO,MAAMW,EAAO,CAChB,GAAIA,GAAS,KACT,OAAO,KAEX,IAAMC,EAAQD,EACd,GAAIC,aAAiBjB,EAEjB,OAAOiB,EAEN,GAAKA,EAAM,GAAG,GAAK,MAAQA,EAAM,GAAG,IAAMA,EAAM,OAAUA,EAAM,QAAUA,EAAO,CAMlF,GAAM,CAAE,QAAAhB,EAAS,KAAAC,EAAM,UAAAC,EAAW,MAAAC,CAAM,EAAIa,EAC5C,OAAO,IAAIjB,EAAIC,EAASC,EAAMC,EAAWC,GAA6Cc,GAAUjB,EAASC,EAAMC,EAAU,KAAK,CAAC,CACnI,SACSc,EAAME,EAAS,IAAM,GAAM,CAIhC,GAAM,CAAE,QAAAlB,EAAS,UAAAE,EAAW,KAAAD,CAAK,EAAIe,EAC/BT,EAAgBY,GAAOjB,CAAS,EACtC,OAAOH,EAAI,OAAOC,EAASC,EAAMM,CAAM,CAC3C,KAII,QAAO,IAEf,CAMA,OAAO,OAAOP,EAASC,EAAMM,EAAQ,CACjC,GAAI,OAAON,GAAS,SAChB,MAAM,IAAI,MAAM,uCAAuC,EAE3D,GAAI,EAAEM,EAAO,iBAAiB,YAC1B,MAAM,IAAI,MAAM,gBAAgB,EAEpC,OAAQP,EAAS,CACb,IAAK,GAAG,CACJ,GAAIC,IAASI,GACT,MAAM,IAAI,MAAM,wCAAwCA,EAAW,kBAAkB,EAGrF,OAAO,IAAIN,EAAIC,EAASC,EAAMM,EAAQA,EAAO,KAAK,CAE1D,CACA,IAAK,GAAG,CACJ,IAAMJ,EAAQc,GAAUjB,EAASC,EAAMM,EAAO,KAAK,EACnD,OAAO,IAAIR,EAAIC,EAASC,EAAMM,EAAQJ,CAAK,CAC/C,CACA,QACI,MAAM,IAAI,MAAM,iBAAiB,CAEzC,CACJ,CAIA,OAAO,SAASI,EAAQ,CACpB,OAAOR,EAAI,OAAO,EAAGM,GAAaE,CAAM,CAC5C,CAOA,OAAO,SAASN,EAAMM,EAAQ,CAC1B,OAAOR,EAAI,OAAO,EAAGE,EAAMM,CAAM,CACrC,CAQA,OAAO,OAAOJ,EAAO,CACjB,GAAM,CAACN,EAAKuB,CAAS,EAAIrB,EAAI,YAAYI,CAAK,EAC9C,GAAIiB,EAAU,SAAW,EACrB,MAAM,IAAI,MAAM,kBAAkB,EAEtC,OAAOvB,CACX,CAUA,OAAO,YAAYM,EAAO,CACtB,IAAMkB,EAAQtB,EAAI,aAAaI,CAAK,EAC9BmB,EAAaD,EAAM,KAAOA,EAAM,cAChCE,EAAiBC,EAAOrB,EAAM,SAASmB,EAAYA,EAAaD,EAAM,aAAa,CAAC,EAC1F,GAAIE,EAAe,aAAeF,EAAM,cACpC,MAAM,IAAI,MAAM,kBAAkB,EAEtC,IAAMI,EAAcF,EAAe,SAASF,EAAM,cAAgBA,EAAM,UAAU,EAC5Ed,EAAS,IAAWmB,GAAOL,EAAM,cAAeA,EAAM,WAAYI,EAAaF,CAAc,EAInG,MAAO,CAHKF,EAAM,UAAY,EACxBtB,EAAI,SAASQ,CAAM,EACnBR,EAAI,SAASsB,EAAM,MAAOd,CAAM,EACzBJ,EAAM,SAASkB,EAAM,IAAI,CAAC,CAC3C,CAUA,OAAO,aAAaM,EAAc,CAC9B,IAAIC,EAAS,EACPC,EAAO,IAAM,CACf,GAAM,CAACC,EAAGC,EAAM,EAAWZ,GAAOQ,EAAa,SAASC,CAAM,CAAC,EAC/D,OAAAA,GAAUG,GACHD,CACX,EACI9B,EAAU6B,EAAK,EACfG,EAAQ3B,GASZ,GARIL,IAAY,IAEZA,EAAU,EACV4B,EAAS,GAGTI,EAAQH,EAAK,EAEb7B,IAAY,GAAKA,IAAY,EAC7B,MAAM,IAAI,WAAW,uBAAuBA,CAAO,EAAE,EAEzD,IAAMsB,EAAaM,EACbK,EAAgBJ,EAAK,EACrBK,EAAaL,EAAK,EAClBM,EAAOP,EAASM,EAChBE,EAAgBD,EAAOb,EAC7B,MAAO,CAAE,QAAAtB,EAAS,MAAAgC,EAAO,cAAAC,EAAe,WAAAC,EAAY,cAAAE,EAAe,KAAAD,CAAK,CAC5E,CAOA,OAAO,MAAME,EAAQxB,EAAM,CACvB,GAAM,CAACyB,EAAQnC,CAAK,EAAIoC,GAAgBF,EAAQxB,CAAI,EAC9ChB,EAAME,EAAI,OAAOI,CAAK,EAC5B,GAAIN,EAAI,UAAY,GAAKwC,EAAO,CAAC,IAAM,IACnC,MAAM,MAAM,wDAAwD,EAGxE,OAAAzC,GAAUC,CAAG,EAAE,IAAIyC,EAAQD,CAAM,EAC1BxC,CACX,CACJ,EACA,SAAS0C,GAAgBF,EAAQxB,EAAM,CACnC,OAAQwB,EAAO,CAAC,EAAG,CAEf,IAAK,IAAK,CACN,IAAMG,EAAU3B,GAA0C4B,GAC1D,MAAO,CACHA,GAAU,OACVD,EAAQ,OAAO,GAAGC,GAAU,MAAM,GAAGJ,CAAM,EAAE,CACjD,CACJ,CACA,KAAKI,GAAU,OAAQ,CACnB,IAAMD,EAAU3B,GAA0C4B,GAC1D,MAAO,CAACA,GAAU,OAAQD,EAAQ,OAAOH,CAAM,CAAC,CACpD,CACA,KAAKK,GAAO,OAAQ,CAChB,IAAMF,EAAU3B,GAA0C6B,GAC1D,MAAO,CAACA,GAAO,OAAQF,EAAQ,OAAOH,CAAM,CAAC,CACjD,CACA,QAAS,CACL,GAAIxB,GAAQ,KACR,MAAM,MAAM,iFAAiF,EAEjG,MAAO,CAACwB,EAAO,CAAC,EAAGxB,EAAK,OAAOwB,CAAM,CAAC,CAC1C,CACJ,CACJ,CACA,SAASM,GAAWxC,EAAOR,EAAOkB,EAAM,CACpC,GAAM,CAAE,OAAAyB,CAAO,EAAIzB,EACnB,GAAIyB,IAAWG,GAAU,OACrB,MAAM,MAAM,8BAA8B5B,EAAK,IAAI,WAAW,EAElE,IAAMhB,EAAMF,EAAM,IAAI2C,CAAM,EAC5B,GAAIzC,GAAO,KAAM,CACb,IAAMA,EAAMgB,EAAK,OAAOV,CAAK,EAAE,MAAM,CAAC,EACtC,OAAAR,EAAM,IAAI2C,EAAQzC,CAAG,EACdA,CACX,KAEI,QAAOA,CAEf,CACA,SAAS+C,GAAWzC,EAAOR,EAAOkB,EAAM,CACpC,GAAM,CAAE,OAAAyB,CAAO,EAAIzB,EACbhB,EAAMF,EAAM,IAAI2C,CAAM,EAC5B,GAAIzC,GAAO,KAAM,CACb,IAAMA,EAAMgB,EAAK,OAAOV,CAAK,EAC7B,OAAAR,EAAM,IAAI2C,EAAQzC,CAAG,EACdA,CACX,KAEI,QAAOA,CAEf,CACA,IAAMQ,GAAc,IACdC,GAAe,GACrB,SAASW,GAAUjB,EAASC,EAAMC,EAAW,CACzC,IAAM2C,EAAoBC,GAAe9C,CAAO,EAC1C+C,EAAaF,EAAoBC,GAAe7C,CAAI,EACpDE,EAAQ,IAAI,WAAW4C,EAAa7C,EAAU,UAAU,EAC9D,OAAO8C,GAAShD,EAASG,EAAO,CAAC,EAC1B6C,GAAS/C,EAAME,EAAO0C,CAAU,EACvC1C,EAAM,IAAID,EAAW6C,CAAU,EACxB5C,CACX,CACA,IAAMe,GAAY,OAAO,IAAI,kBAAkB,EC/W/C,IAAA+B,GAAmB,WACnBC,GAAiB,WACXC,IAAY,IAAM,CACpB,IAAMC,EAAc,IAAI,YACxB,OAAQC,GACGD,EAAY,OAAOC,CAAG,CAErC,GAAG,EACGC,IAAY,IAAM,CACpB,IAAMC,EAAc,IAAI,YACxB,OAAQC,GACGD,EAAY,OAAOC,CAAG,CAErC,GAAG,EACGC,GAAeC,GAAS,CAC1B,IAAMC,EAAa,OAAOD,GAAS,SAAWJ,GAASI,CAAI,EAAIA,EACzDE,EAASC,GAAW,OAAOF,CAAU,EAG3C,OAAOG,GAAU,OAAOF,EAAO,KAAK,CACxC,EACMG,GAAYL,GAAS,IAAI,WAAW,KAAKA,CAAI,EAC9C,MAAM,EAAE,EACR,IAAKM,GAAMA,EAAE,WAAW,CAAC,CAAC,CAAC,EAOzB,IAAMC,GAA0B,0BAC1BC,GAA6B,6BAC7BC,GAAmB,mBAEnBC,GAAe,eAItBC,GAAsBC,GAAQ,CAChC,GAAI,EAAEA,aAAe,YACjB,MAAM,UAAU,kBAAkB,EAEtC,OAAO,KAAK,MAAM,KAAKA,CAAG,EACrB,IAAKC,GAAM,OAAO,aAAaA,CAAC,CAAC,EACjC,KAAK,EAAE,CAAC,CACjB,EACaC,GAAUC,GAAS,CAS5B,GAAIA,IAASR,GAAyB,CAClC,IAAMS,EAAM,GAAAC,QAAK,KAAK,QAAQ,EACxBC,EAAM,CACR,KAAAH,EACA,UAAWC,EAAI,SACnB,EAEA,cAAO,eAAeE,EAAK,YAAa,CAAE,MAAOF,EAAI,SAAU,CAAC,EACzDE,CACX,SACSH,IAASP,GAA4B,CAC1C,IAAMQ,EAAM,GAAAC,QAAK,IAAI,QAAQ,EACvBC,EAAM,CACR,KAAAH,EACA,UAAWC,EAAI,SACnB,EACA,cAAO,eAAeE,EAAK,YAAa,CAAE,MAAOF,EAAI,SAAU,CAAC,EACzDE,CACX,SACSH,IAASN,GAAkB,CAChC,IAAMS,EAAM,CACR,KAAAH,CACJ,EACA,cAAO,eAAeG,EAAK,YAAa,CAAE,MAAO,GAAAD,QAAK,YAAY,GAAAA,QAAK,UAAU,SAAS,CAAE,CAAC,EACtFC,CACX,SACSH,IAASL,GAAc,CAC5B,IAAMQ,EAAM,CACR,KAAAH,CACJ,EACA,cAAO,eAAeG,EAAK,YAAa,CAAE,MAAO,GAAAD,QAAK,YAAY,EAAE,CAAE,CAAC,EAChEC,CACX,CACA,MAAM,IAAI,MAAM,sBAAsB,CAC1C,EACaC,GAAe,IACjBR,GAAmB,GAAAM,QAAK,YAAY,EAAE,CAAC,EAErCG,GAAwB,CAACL,EAAMM,EAAUC,IAS7C,CAACf,GAAyBC,GAA4BC,EAAgB,EAAE,SAASM,CAAI,EAGnF,IAAI,QAASQ,GAAY,IAC5B,GAAAC,SAAOH,EAAUC,EAAM,CACnB,EAAG,MACH,EAAG,EACH,EAAG,EACH,MAAOP,IAASR,GAA0B,GAAAU,QAAK,KAAK,WAAaF,IAASP,GAA6B,GAAAS,QAAK,IAAI,gBAAkBF,IAASN,GAAmB,GAAAQ,QAAK,UAAU,UAAY,EACzL,SAAU,QACd,EAAIQ,GAAe,CACf,IAAMC,EAAS,IAAI,WAAWD,CAAU,EACxC,GAAIV,IAASR,GAAyB,CAClC,IAAMS,EAAM,GAAAC,QAAK,KAAK,QAAQ,SAASS,CAAM,EAC7CH,EAAQ,CACJ,KAAAR,EACA,UAAWC,EAAI,UACf,UAAWA,EAAI,SACnB,CAAC,CACL,SACSD,IAASP,GAA4B,CAC1C,IAAMQ,EAAM,GAAAC,QAAK,IAAI,QAAQ,cAAcS,CAAM,EACjDH,EAAQ,CACJ,KAAAR,EACA,UAAWC,EAAI,UACf,UAAWA,EAAI,SACnB,CAAC,CACL,MACSD,IAASN,IACdc,EAAQ,CACJ,KAAAR,EACA,UAAWW,CACf,CAAC,CAET,CAAC,CACL,CAAC,EAlCU,QAAQ,OAAO,IAAI,MAAM,kBAAkB,CAAC,EAuC9CC,GAAe,CAACX,EAAKY,IAAkB,CAQhD,GAAIZ,EAAI,OAAST,IAA2BS,EAAI,OAASR,GAA4B,CACjF,GAAI,CAACoB,EAAe,CAChB,GAAI,CAACZ,EAAI,UACL,MAAM,IAAI,MAAM,gDAAgD,EAEpE,OAAO,KAAK,UAAU,CAClBA,EAAI,KACJL,GAAmBK,EAAI,SAAS,EAChC,IACJ,EAAG,OAAW,CAAC,CACnB,CACA,GAAI,CAACA,EAAI,UACL,MAAM,IAAI,MAAM,gDAAgD,EAEpE,OAAO,KAAK,UAAU,CAClBA,EAAI,KACJ,KACAL,GAAmBK,EAAI,SAAS,CACpC,EAAG,OAAW,CAAC,CACnB,SACSA,EAAI,OAASP,GAAkB,CACpC,GAAI,CAACmB,EACD,MAAM,IAAI,MAAM,gDAAgD,EAEpE,GAAI,CAACZ,EAAI,UACL,MAAM,IAAI,MAAM,gDAAgD,EAEpE,OAAO,KAAK,UAAU,CAClBA,EAAI,KACJ,KACAL,GAAmBK,EAAI,SAAS,CACpC,EAAG,OAAW,CAAC,CACnB,CACA,MAAM,IAAI,MAAM,sBAAsB,CAC1C,EACaa,GAAkBC,GAAS,CACpC,IAAMC,EAAU,KAAK,MAAMD,CAAI,EAC/B,GAAI,CAACC,GAAWA,EAAQ,SAAW,EAC/B,MAAM,IAAI,MAAM,oBAAoB,EAexC,GAAIA,EAAQ,CAAC,IAAMxB,GAAyB,CACxC,GAAIwB,EAAQ,CAAC,EAAG,CACZ,IAAMf,EAAM,GAAAC,QAAK,KAAK,QAAQ,cAAce,GAASD,EAAQ,CAAC,CAAC,CAAC,EAC1Db,EAAM,CACR,KAAMa,EAAQ,CAAC,EACf,UAAWf,EAAI,SACnB,EACA,cAAO,eAAeE,EAAK,YAAa,CAAE,MAAOF,EAAI,SAAU,CAAC,EACzDE,CACX,SACSa,EAAQ,CAAC,EACd,MAAO,CACH,KAAMA,EAAQ,CAAC,EACf,UAAW,IAAI,WAAWC,GAASD,EAAQ,CAAC,CAAC,CAAC,CAClD,EAEJ,MAAM,IAAI,MAAM,8BAA8B,CAClD,SACSA,EAAQ,CAAC,IAAMvB,GAA4B,CAChD,GAAIuB,EAAQ,CAAC,EAAG,CACZ,IAAMf,EAAM,GAAAC,QAAK,IAAI,QAAQ,cAAce,GAASD,EAAQ,CAAC,CAAC,CAAC,EACzDb,EAAM,CACR,KAAMa,EAAQ,CAAC,EACf,UAAWf,EAAI,SACnB,EACA,cAAO,eAAeE,EAAK,YAAa,CAAE,MAAOF,EAAI,SAAU,CAAC,EACzDE,CACX,SACSa,EAAQ,CAAC,EACd,MAAO,CACH,KAAMA,EAAQ,CAAC,EACf,UAAW,IAAI,WAAWC,GAASD,EAAQ,CAAC,CAAC,CAAC,CAClD,EAEJ,MAAM,IAAI,MAAM,8BAA8B,CAClD,SACSA,EAAQ,CAAC,IAAMtB,GAAkB,CACtC,GAAI,CAACsB,EAAQ,CAAC,EACV,MAAM,IAAI,MAAM,oBAAoB,EAExC,IAAMb,EAAM,CACR,KAAMa,EAAQ,CAAC,CACnB,EACA,cAAO,eAAeb,EAAK,YAAa,CAAE,MAAO,IAAI,WAAWc,GAASD,EAAQ,CAAC,CAAC,CAAC,CAAE,CAAC,EAChFb,CACX,CACA,MAAM,IAAI,MAAM,sBAAsB,CAC1C,EAKO,IAAMe,GAASC,GAAU,CAC5B,IAAMC,EAAM,OAAOD,GAAU,SAAWE,GAAeF,CAAK,EAAIA,EAC1DG,EAAgBC,GAAaH,EAAK,CAACA,EAAI,SAAS,EACtD,OAAOI,GAAYF,CAAa,CACpC,EAoBO,IAAMG,GAAkB,CAACC,EAAOC,EAAMC,IAAc,CACvD,IAAMC,EAAM,OAAOH,GAAU,SAAWI,GAAeJ,CAAK,EAAIA,EAUhE,GAAIG,EAAI,OAASE,GACb,MAAM,IAAI,MAAM,uBAAuB,EAE3C,GAAI,CAACF,EAAI,UACL,MAAM,IAAI,MAAM,oBAAoB,EAExC,IAAMG,EAAmBC,GAASL,CAAS,EACrCM,EAAeC,GAASR,CAAI,EAElC,GAAI,CADW,GAAAS,QAAK,KAAK,SAAS,OAAOF,EAAcF,EAAkBH,EAAI,SAAS,EAElF,MAAM,IAAI,MAAM,mBAAmB,CAE3C,EAMaQ,GAAU,CAACX,EAAOC,EAAMW,IAAO,CACxC,IAAMT,EAAM,OAAOH,GAAU,SAAWI,GAAeJ,CAAK,EAAIA,EAOhE,GAAIG,EAAI,OAASU,GAAkB,CAC/B,GAAI,CAACV,EAAI,UACL,MAAM,IAAI,MAAM,oBAAoB,EAExC,IAAMW,EAAQ,GAAAJ,QAAK,YAAY,GAAAA,QAAK,UAAU,WAAW,EACrDK,EACJ,GAAIH,EAAI,CACJG,EAAkB,IAAI,WAAWD,CAAK,EACtC,IAAME,EAAS,GAAAN,QAAK,KAAKD,GAASG,CAAE,CAAC,EAC/BK,EAAM,KAAK,IAAID,EAAO,OAAQF,EAAM,MAAM,EAChD,QAASI,GAAI,EAAGA,GAAID,EAAKC,KACrBH,EAAgBG,EAAC,GAAKF,EAAOE,EAAC,CAEtC,MAEIH,EAAkBD,EAEtB,IAAMN,EAAeC,GAASR,CAAI,EAC5BkB,EAAM,GAAAT,QAAK,UAAUF,EAAcO,EAAiBZ,EAAI,SAAS,EACjEiB,EAAc,IAAI,WAAWN,EAAM,OAASK,EAAI,MAAM,EAC5D,OAAAC,EAAY,IAAIN,CAAK,EACrBM,EAAY,IAAID,EAAKL,EAAM,MAAM,EACPO,GAAmBD,CAAW,CAE5D,SACSjB,EAAI,OAASmB,GAA4B,CAC9C,GAAI,CAACnB,EAAI,UACL,MAAM,IAAI,MAAM,oBAAoB,EAExC,IAAMW,EAAQ,GAAAJ,QAAK,YAAY,GAAAA,QAAK,IAAI,WAAW,EAC/CK,EACJ,GAAIH,EAAI,CACJG,EAAkB,IAAI,WAAWD,CAAK,EACtC,IAAME,EAAS,GAAAN,QAAK,KAAKD,GAASG,CAAE,CAAC,EAC/BK,GAAM,KAAK,IAAID,EAAO,OAAQF,EAAM,MAAM,EAChD,QAASI,GAAI,EAAGA,GAAID,GAAKC,KACrBH,EAAgBG,EAAC,GAAKF,EAAOE,EAAC,CAEtC,MAEIH,EAAkBD,EAEtB,IAAMN,EAAeC,GAASR,CAAI,EAC5BsB,EAAe,GAAAb,QAAK,IAAI,QAAQ,EAChCS,EAAM,GAAAT,QAAK,IAAIF,EAAcO,EAAiBZ,EAAI,UAAWoB,EAAa,SAAS,EAEzF,OAAO,gBAAgBA,EAAa,SAAS,EAC7CA,EAAa,UAAU,KAAK,CAAC,EAC7B,IAAMH,EAAc,IAAI,WAAW,GAAAV,QAAK,IAAI,gBAAkBI,EAAM,OAASK,EAAI,MAAM,EACvF,OAAAC,EAAY,IAAIG,EAAa,SAAS,EACtCH,EAAY,IAAIN,EAAO,GAAAJ,QAAK,IAAI,eAAe,EAC/CU,EAAY,IAAID,EAAK,GAAAT,QAAK,IAAI,gBAAkBI,EAAM,MAAM,EAClCO,GAAmBD,CAAW,CAE5D,CACA,MAAM,IAAI,MAAM,uBAAuB,CAC3C,EACaI,GAAU,CAACxB,EAAOC,EAAMW,IAAO,CACxC,IAAMT,EAAM,OAAOH,GAAU,SAAWI,GAAeJ,CAAK,EAAIA,EAUhE,GAAIG,EAAI,OAASU,GAAkB,CAC/B,GAAI,CAACV,EAAI,UACL,MAAM,IAAI,MAAM,oBAAoB,EAExC,IAAMsB,EAA+BlB,GAASN,CAAI,EAC5Ca,EAAQW,EAA6B,MAAM,EAAG,GAAAf,QAAK,UAAU,WAAW,EACxEgB,EAAUD,EAA6B,MAAM,GAAAf,QAAK,UAAU,YAAae,EAA6B,MAAM,EAClH,GAAIb,EAAI,CACJ,IAAMI,EAAS,GAAAN,QAAK,KAAKD,GAASG,CAAE,CAAC,EAC/BK,EAAM,KAAK,IAAID,EAAO,OAAQF,EAAM,MAAM,EAChD,QAASI,EAAI,EAAGA,EAAID,EAAKC,IACrBJ,EAAMI,CAAC,GAAKF,EAAOE,CAAC,CAE5B,CACA,IAAMS,EAAY,GAAAjB,QAAK,UAAU,KAAKgB,EAASZ,EAAOX,EAAI,SAAS,EACnE,GAAI,CAACwB,EACD,MAAM,IAAI,MAAM,2BAA2B,EAE/C,OAAOC,GAASD,CAAS,CAC7B,SACSxB,EAAI,OAASmB,GAA4B,CAC9C,GAAI,CAACnB,EAAI,UACL,MAAM,IAAI,MAAM,oBAAoB,EAExC,IAAMsB,EAA+BlB,GAASN,CAAI,EAC5C4B,EAAqBJ,EAA6B,MAAM,EAAG,GAAAf,QAAK,IAAI,eAAe,EACnFI,EAAQW,EAA6B,MAAM,GAAAf,QAAK,IAAI,gBAAiB,GAAAA,QAAK,IAAI,gBAAkB,GAAAA,QAAK,IAAI,WAAW,EACpHgB,EAAUD,EAA6B,MAAM,GAAAf,QAAK,IAAI,gBAAkB,GAAAA,QAAK,IAAI,WAAW,EAClG,GAAIE,EAAI,CACJ,IAAMI,EAAS,GAAAN,QAAK,KAAKD,GAASG,CAAE,CAAC,EAC/BK,EAAM,KAAK,IAAID,EAAO,OAAQF,EAAM,MAAM,EAChD,QAASI,EAAI,EAAGA,EAAID,EAAKC,IACrBJ,EAAMI,CAAC,GAAKF,EAAOE,CAAC,CAE5B,CACA,IAAMS,EAAY,GAAAjB,QAAK,IAAI,KAAKgB,EAASZ,EAAOe,EAAoB1B,EAAI,SAAS,EACjF,GAAI,CAACwB,EACD,MAAM,IAAI,MAAM,2BAA2B,EAE/C,OAAOC,GAASD,CAAS,CAC7B,CACA,MAAM,IAAI,MAAM,uBAAuB,CAC3C,ECtaA,IAAAG,GAAuB,WAEVC,GAAa,CACtB,IAAK,EACL,KAAM,IACN,0BAA2B,QAC3B,sBAAuB,QACvB,sBAAuB,QACvB,sBAAuB,QACvB,mBAAoB,OACxB,EA6BO,SAASC,GAAUC,EAAMC,EAAYC,GAAW,IAAK,CACxD,IAAMC,EAAa,OAAOH,GAAS,SAAW,IAAI,YAAY,EAAE,OAAOA,CAAI,EAAIA,EACzEI,EAASC,GAAW,OAAOF,CAAU,EAC3C,OAAOG,GAAI,OAAO,EAAGL,EAAWG,CAAM,EAAE,SAASG,EAAS,CAC9D,CACO,SAASC,GAAYR,EAAM,CAC9B,IAAMG,EAAa,OAAOH,GAAS,SAAW,IAAI,YAAY,EAAE,OAAOA,CAAI,EAAIA,EACzEI,EAASC,GAAW,OAAOF,CAAU,EAG3C,OAAOI,GAAU,OAAOH,EAAO,KAAK,CACxC,CAcO,IAAMK,GAAoB,MAAOC,GAAqB,CACzD,IAAMC,EAAc,IAAI,YAElBC,EAAWD,EAAY,OAAOD,EAAiB,QAAQ,EAEvDG,EAASF,EAAY,OAAOD,EAAiB,KAAK,MAAM,EACxDI,EAAOH,EAAY,OAAOD,EAAiB,KAAK,IAAI,EACpDK,EAAgB,IAAI,YAAY,GACjC,EAAIH,EAAS,aAAe,EAAIC,EAAO,aACvC,EAAIC,EAAK,WAAW,EACnBE,EAAkB,IAAI,WAAWD,CAAa,EAC9CE,EAAkB,IAAI,SAASF,CAAa,EAC9CG,EAAS,EACbD,EAAgB,WAAWC,EAAQR,EAAiB,gBAAkB,KAChE,IACAA,EAAiB,eAAgB,EAAK,EAC5CQ,GAAU,EACVD,EAAgB,UAAUC,EAAQN,EAAS,WAAY,EAAK,EAC5DM,GAAU,EACVF,EAAgB,IAAIJ,EAAUM,CAAM,EACpCA,GAAUN,EAAS,WACnBK,EAAgB,UAAUC,EAAQL,EAAO,WAAY,EAAK,EAC1DK,GAAU,EACVF,EAAgB,IAAIH,EAAQK,CAAM,EAClCA,GAAUL,EAAO,WACjBI,EAAgB,UAAUC,EAAQJ,EAAK,WAAY,EAAK,EACxDI,GAAU,EACVF,EAAgB,IAAIF,EAAMI,CAAM,EAChC,IAAMC,EAAS,MAAM,OAAO,OAAO,OAAO,UAAWJ,CAAa,EAC5DK,EAAK,UAAO,KAAKD,EAAO,MAAM,EAAG,EAAE,CAAC,EAC1C,OAAAC,EAAG,CAAC,EAAI,IAAQA,EAAG,CAAC,EAAI,GACxBA,EAAG,CAAC,EAAI,IAAQA,EAAG,CAAC,EAAI,GACjB,CACHA,EAAG,MAAM,EAAG,CAAC,EACbA,EAAG,MAAM,EAAG,CAAC,EACbA,EAAG,MAAM,EAAG,CAAC,EACbA,EAAG,MAAM,EAAG,EAAE,EACdA,EAAG,MAAM,GAAI,EAAE,CACnB,EAAE,IAAKC,GAAMA,EAAE,SAAS,KAAK,CAAC,EAAE,KAAK,GAAG,CAC5C,ECvGA,IAAMC,GAAc,IAAMC,GAAI,oBAAoB,EAE5CC,GAAQ,OAAO,OAAO,KAAM,CAC9B,cAAe,CACX,MAAO,EACX,CACJ,CAAC,EACKC,GAAWC,GACN,OAAO,eAAeA,EAAGF,EAAK,EAK5BG,GAAgBD,GAClB,CAAC,CAACA,GAAK,CAAC,CAAC,OAAO,eAAeA,CAAC,GAAG,cAkD9C,IAAME,GAAsB,SAAUC,EAAOC,EAAQC,EAAMC,EAAgB,CACvE,GAAI,CAACH,EACD,MAAM,IAAII,GAAwB,wBAAwB,EAE9D,GAAI,CAACC,GAAgBH,CAAI,EACrB,MAAM,IAAIE,GAAwB,wBAAwB,EAE9D,GAAI,CAAC,OAAO,cAAcH,CAAM,GAAKA,EAAS,EAC1C,MAAM,IAAIG,GAAwB,UAAUH,CAAM,6BAA6B,EAEnF,GAAM,CAACK,EAAmBC,EAAQC,CAAS,EAAIN,EAAK,YAC9CO,EAAgBT,EAAM,KAAK,iBAAiBO,CAAM,EACxD,GAAI,CAACE,GAAkBR,EAASQ,EAAc,iBAAqBR,EAASQ,EAAc,kBAAqB,CAACA,EAAc,QAAQ,SAAS,KAAK,EAShJ,MAAM,IAAIC,GAAkC,OAAOH,CAAM,sDAAsD,EAGnH,IAAMI,EAAkBF,EAAc,KAChCG,EAAgBC,GAAY,GAAGA,GAAYV,CAAc,CAAC,GAAGU,GAAYP,CAAiB,CAAC,EAAE,EACnG,GAAI,CACAQ,GAAgBH,EAAiBC,EAAeJ,CAAS,EACzD,IAAMO,EAAU,KAAK,MAAMT,CAAiB,EAC5C,MAAO,CAACC,EAAQQ,CAAO,CAC3B,OACOC,EAAG,CACN,MAAM,IAAIZ,GAAwBY,GAAG,SAAWA,CAAC,CACrD,CACJ,EAgFO,IAAMC,GAAqB,CAACC,EAAYC,EAAOC,EAAMC,EAAQC,EAAgBC,IAAa,CAC7F,IAAMC,EAAgB,IAAMJ,EACxBK,EACEC,EAAsB,KACpBD,IAGJA,EAAoBE,GAAoBR,GAASS,GAAY,EAAEV,CAAU,EAAGG,EAAQD,EAAME,CAAc,EACpGC,IACAE,EAAkB,CAAC,EAAIF,EAASE,EAAkB,CAAC,CAAC,IACjDA,EAAkB,CAAC,GAE9B,OAAOI,GAAQ,CACX,IAAI,cAAe,CACf,OAAIJ,EACOA,EAAkB,CAAC,EACvBK,GAAgBV,CAAI,CAC/B,EACA,IAAI,WAAY,CACZ,OAAOI,CACX,EACA,IAAI,SAAU,CACV,MAAO,CAACN,EAAYE,EAAMC,EAAQC,CAAc,CACpD,EACA,IAAI,UAAW,CACX,MAAO,IAAM,KAAK,UAAU,KAAK,UAAU,CAAC,CAChD,EACA,IAAI,SAAU,CACV,OAAOI,CACX,EACA,IAAI,QAAS,CACT,OAAO,KAAK,SAChB,EACA,IAAI,KAAM,CACN,OAAQK,GAAMA,IAAM,cAAgBX,EAAKW,CAAC,EAAI,MAClD,CACJ,CAAC,CACL,EACaD,GAAmBV,GAAS,CACrC,GAAI,CAACY,GAAgBZ,CAAI,EACrB,MAAM,IAAIa,GAAwB,wBAAwB,EAE9D,OAAOb,EAAK,YAAY,CAAC,CAC7B,EACaY,GAAmBZ,GACxB,GAACA,GAAQ,OAAOA,GAAS,UAAY,CAACc,GAAId,EAAM,aAAa,GAAK,CAAC,MAAM,QAAQA,EAAK,WAAW,GAAKA,EAAK,YAAY,SAAW,GAAKA,EAAK,YAAY,IAAIe,GAAK,OAAOA,CAAC,EAAE,OAAOA,GAAKA,IAAM,QAAQ,EAAE,SAAW,GAM7MC,GAAyBhB,GAAS,CAC3C,GAAI,CAACY,GAAgBZ,CAAI,EACrB,MAAM,IAAIa,GAAwB,wBAAwB,EAE9D,IAAMT,EAAgB,IAAMJ,EACxBK,EACEC,EAAsB,KACpBD,IAGJA,EAAoB,CAACL,EAAK,YAAY,CAAC,EAAG,KAAK,MAAMA,EAAK,YAAY,CAAC,CAAC,CAAC,GAClEK,EAAkB,CAAC,GAE9B,OAAOI,GAAQ,CACX,IAAI,cAAe,CACf,OAAIJ,EACOA,EAAkB,CAAC,EACvBK,GAAgBV,CAAI,CAC/B,EACA,IAAI,WAAY,CACZ,OAAOI,CACX,EACA,IAAI,UAAW,CACX,MAAO,IAAM,KAAK,UAAU,KAAK,UAAU,CAAC,CAChD,EACA,IAAI,SAAU,CACV,OAAOE,CACX,EACA,IAAI,QAAS,CACT,OAAO,KAAK,SAChB,EACA,IAAI,KAAM,CACN,OAAQK,GAAMA,IAAM,cAAgBX,EAAKW,CAAC,EAAI,MAClD,CACJ,CAAC,CACL,ECxQA,IAAMM,GAAc,IAAMC,GAAI,oBAAoB,EAE5CC,GAAQ,OAAO,OAAO,KAAM,CAC9B,iBAAkB,CACd,MAAO,EACX,CACJ,CAAC,EACKC,GAAWC,GACN,OAAO,eAAeA,EAAGF,EAAK,EAK5BG,GAAmBD,GACrB,CAAC,CAACA,GAAK,CAAC,CAAC,OAAO,eAAeA,CAAC,GAAG,iBAIxCE,GAAc,SAAUC,EAAmBC,EAAQC,EAAMC,EAAgB,CAC3E,IAAMC,EAAQ,OAAOJ,GAAsB,SAAWP,GAAY,EAAEO,CAAiB,EAAIA,EAEnFK,EAAgBD,GAAO,KAAK,iBAAiBH,CAAM,EACzD,GAAI,CAACI,GAAe,QAAQ,SAAS,KAAK,EACtC,MAAM,IAAI,MAAM,qBAAqBJ,CAAM,8CAA8C,EAE7F,GAAII,EAAc,iBAAmB,KAAM,CACvC,IAAMC,EAAOF,EAAM,IAAI,eAAeH,CAAM,EAAE,KACxCM,EAAW,OAAO,OAAOH,EAAM,KAAK,cAAc,EAAE,KAAMI,GAAMA,EAAE,iBAAmB,MAAQA,EAAE,OAASF,GAAQE,EAAE,QAAQ,SAAS,KAAK,CAAC,GAAG,GAClJ,GAAI,CAACD,EACD,MAAM,IAAI,MAAM,qBAAqBN,CAAM,6DAA6DK,CAAI,GAAG,EAEnHL,EAASM,CACb,CACA,IAAME,EAAML,EAAM,KAAK,iBAAiBH,CAAM,EAAE,KAChD,GAAI,CAACQ,EACD,MAAM,IAAI,MAAM,0BAA0BR,CAAM,EAAE,EAEtD,IAAMS,EAAkB,OAAOD,GAAQ,SAAWE,GAAeF,CAAG,EAAIA,EACxE,MAAO,CACHG,GAAMF,CAAe,EACrBG,GAAQH,EAAiB,KAAK,UAAUR,EAAM,CAACY,EAAGN,IAC1CA,GAAKO,GAAIP,EAAG,WAAW,GAAK,OAAOA,EAAE,WAAc,WAC/CA,EAAE,UAAU,SAAW,EAChBA,EAAE,UAAUL,CAAc,EAG1BK,EAAE,UAAU,EAGpBA,CACV,EAAGL,CAAc,CACtB,CACJ,EAGMa,GAAc,SAAUZ,EAAOa,EAAQf,EAAMgB,EAAgBf,EAAgBgB,EAAa,CAC5F,GAAI,CAACf,EACD,MAAM,IAAIgB,GAAyB,wBAAwB,EAK/D,GAFI,OAAOlB,EAAK,SAAY,aACxBA,EAAOA,EAAK,QAAQ,GACpB,CAACmB,GAAmBnB,CAAI,EACxB,MAAM,IAAIkB,GAAyB,wBAAwB,EAE/D,GAAM,CAACnB,EAAQqB,CAAO,EAAIpB,EACpBO,EAAMS,EAAejB,CAAM,EACjC,GAAI,CAACQ,EACD,MAAM,IAAIc,GAA+B,OAAOtB,CAAM,aAAc,CAAE,MAAOA,CAAO,CAAC,EA0BzF,IAAMI,EAAgBD,EAAM,KAAK,iBAAiBH,CAAM,EACxD,GAAI,CAACI,GAAkBY,EAASZ,EAAc,iBAAqBY,EAASZ,EAAc,kBAAqB,CAACA,EAAc,QAAQ,SAAS,KAAK,EAChJ,MAAM,IAAImB,GAAoB,OAAOvB,CAAM,sDAAsD,EAErG,IAAMS,EAAkB,OAAOD,GAAQ,SAAWE,GAAeF,CAAG,EAAIA,EACxE,GAAI,CACA,IAAMgB,EAAS,KAAK,MAAMC,GAAQhB,EAAiBY,EAASnB,CAAc,CAAC,EAC3E,OAAI,OAAOgB,GAAgB,YACvBA,EAAYM,EAAQxB,CAAM,EACvBwB,CACX,OACOE,EAAG,CACN,MAAM,IAAIP,GAAyBO,GAAG,SAAWA,CAAC,CACtD,CACJ,EACaC,GAAwB,CAAC5B,EAAmBC,EAAQC,IAAS,CACtE,GAAI,CAACF,GAAqBE,IAAS,QAAa,CAACD,EAC7C,MAAM,IAAI,UAAU,oBAAoB,EAC5C,IAAM4B,EAAqB9B,GAAY,KAAK,KAAMC,EAAmBC,EAAQC,CAAI,EACjF,OAAON,GAAQ,CACX,IAAI,iBAAkB,CAClB,OAAOK,CACX,EACA,IAAI,WAAY,CACZ,OAAQE,GAAmB0B,EAAmB1B,GAAkB,EAAE,CACtE,EACA,IAAI,UAAW,CACX,OAAQA,GAAmB,KAAK,UAAU,KAAK,UAAUA,CAAc,CAAC,CAC5E,EACA,IAAI,SAAU,CACV,MAAO,IAAMD,CACjB,CACJ,CAAC,CACL,EAkCO,IAAM4B,GAAwB,CAACC,EAAYC,EAAOC,EAAMC,EAAQC,EAAgBC,EAAgBC,IAAgB,CACnH,IAAIC,EACEC,EAAmB,IAAM,CAC3B,GAAID,EACA,OAAOA,EAEX,GAAI,CAACN,GAAS,CAACG,EAAgB,CAC3B,IAAMK,EAAYC,GAAY,EAC9BT,EAAQA,GAASQ,EAAUT,CAAU,EACrCI,EAAiBA,GAAkBK,EAAU,UACjD,CACA,OAAAF,EAAiBI,GAAYV,EAAOE,EAAQD,EAAME,EAAgBC,GAAkB,GAAIC,CAAW,EAC/FM,GAAgBL,CAAc,IAC9BA,EAAiBM,GAAmBb,EAAYC,EAAOM,EAAgBJ,EAAQE,GAAkB,EAAE,GAEhGE,CACX,EACA,OAAOO,GAAQ,CACX,IAAI,iBAAkB,CAClB,OAAOC,GAAmBb,CAAI,CAClC,EACA,IAAI,WAAY,CACZ,MAAO,IAAMA,CACjB,EACA,IAAI,UAAW,CACX,MAAO,IAAM,KAAK,UAAU,KAAK,UAAU,CAAC,CAChD,EACA,IAAI,SAAU,CACV,OAAOM,CACX,EACA,IAAI,QAAS,CACT,OAAO,KAAK,SAChB,CACJ,CAAC,CACL,EACaQ,GAA+B,CAAChB,EAAYiB,EAAIf,EAAMgB,EAAId,EAAgBC,EAAgBC,IAAgB,CACnH,IAAIC,EACEC,EAAmB,IAAM,CAC3B,GAAID,EACA,OAAOA,EAEX,IAAME,EAAYC,GAAY,EACxBT,EAAQQ,EAAUT,CAAU,EAElC,OADAO,EAAiBI,GAAYV,EAAO,IAAKC,EAAME,GAAkBK,EAAU,WAAYJ,GAAkB,GAAIC,CAAW,EACpHM,GAAgBL,CAAc,EAEvBM,GAAmBb,EAAYC,EAAOM,EAAgB,IAAKF,GAAkB,EAAE,EAEnFE,CACX,EACA,OAAOO,GAAQ,CACX,IAAI,iBAAkB,CAClB,OAAOC,GAAmBb,CAAI,CAClC,EACA,IAAI,WAAY,CACZ,MAAO,IAAMA,CACjB,EACA,IAAI,UAAW,CACX,MAAO,IAAM,KAAK,UAAU,KAAK,UAAU,CAAC,CAChD,EACA,IAAI,SAAU,CACV,OAAOM,CACX,EACA,IAAI,QAAS,CACT,OAAO,KAAK,SAChB,CACJ,CAAC,CACL,EA2CO,IAAMW,GAAsBC,GAAS,CACxC,GAAI,CAACC,GAAmBD,CAAI,EACxB,MAAM,IAAIE,GAAyB,wBAAwB,EAE/D,OAAOF,EAAK,CAAC,CACjB,EACaC,GAAsBD,GAC3B,GAAC,MAAM,QAAQA,CAAI,GAAKA,EAAK,SAAW,GAAKA,EAAK,IAAIG,GAAK,OAAOA,CAAC,EAAE,OAAOA,GAAKA,IAAM,QAAQ,EAAE,SAAW,GAKvGC,GAA4BJ,GAAS,CAC9C,GAAIA,GAAQ,KAEZ,GAAIK,GAAgBL,CAAI,EACpB,GAAI,CACA,MAAO,CACH,gBAAiBA,EAAK,gBACtB,KAAMA,EAAK,QAAQ,CACvB,CACJ,OACOM,EAAG,CACN,QAAQ,KAAK,8CAA+CA,CAAC,CACjE,KAGA,OAAO,CACH,gBAAiB,KACjB,KAAAN,CACJ,CAER,EACaO,GAA6B,CAACC,EAAYC,EAAOT,EAAMU,EAAQC,EAAgBC,EAAgBC,IACpGZ,GAAmBD,CAAI,EAChBc,GAAsBN,EAAYC,EAAOT,EAAMU,EAAQC,EAAgBC,EAAgBC,CAAW,GAGzGA,IAAcb,EAAM,EAAE,EACfA,GCnTf,IAAMe,GAA0C,CAACC,EAAMC,EAAUC,EAAYC,EAAeC,EAAgBC,IAAU,CAClH,IAAMC,EAAKN,EAAK,GACVO,EAASP,EAAK,OACdQ,EAAUF,IAAOG,GAAU,oBAC3BC,GAAsBR,EAAYG,EAAOF,EAAeI,EAAQH,EAAgBH,EAAU,MAAS,EACnGE,EAGN,MAAI,CAACM,GAAU,WAAYA,GAAU,aAAa,EAAE,SAASH,CAAE,EACpDE,EAAQ,IAAKG,GACTC,GAA2BV,EAAYG,EAAOM,EAAKJ,EAAQH,EAAgBH,EAAWU,GAAQ,CAWjG,GAVIA,EAAI,MAAM,SAAS,UACnBA,EAAI,KAAK,QAAQ,QAAUD,GAAsBR,EAAYG,EAAOM,EAAI,KAAK,QAAQ,QAASJ,EAAQH,EAAgBH,EAAWY,GAAU,CAEvI,IAAMC,GAAgBC,GAAMF,CAAK,EACjC,GAAIC,KAAkBH,EAAI,GACtB,MAAM,IAAI,MAAM,+CAA+CA,EAAI,EAAE,YAAYG,EAAa,EAAE,CAExG,CAAC,GAGDH,EAAI,MAAM,YAAY,UACtB,GAAI,CACAA,EAAI,KAAK,WAAW,UAAYC,GAA2BV,EAAYG,EAAOM,EAAI,KAAK,WAAW,UAAWJ,EAAQH,EAAgBH,CAAQ,GAAG,QAAQ,CAC5J,MACM,CAGF,OAAOU,EAAI,KAAK,WAAW,SAC/B,CAGJ,GAAIA,EAAI,MAAM,YAAY,WACtB,GAAI,CACAA,EAAI,KAAK,WAAW,WAAaC,GAA2BV,EAAYG,EAAOM,EAAI,KAAK,WAAW,WAAYJ,EAAQH,EAAgBH,CAAQ,GAAG,QAAQ,CAC9J,MACM,CAGF,OAAOU,EAAI,KAAK,WAAW,UAC/B,CAER,CAAC,CACJ,GAIDL,IAAOG,GAAU,cACjBD,EAAQ,KAAOA,EAAQ,MAAM,IAAKG,GACvBC,GAA2BV,EAAYG,EAAOM,EAAKJ,EAAQH,EAAgBH,EAAWU,GAAQ,CACjG,GAAI,CAACA,EAAI,MAAM,SAAS,QACpB,OAMJ,IAAMK,EAAeN,GACfO,GAAqBf,EAC3BS,EAAI,KAAK,QAAQ,QAAUK,EAAaC,GAAoBZ,EAAOM,EAAI,KAAK,QAAQ,QAASJ,EAAQH,EAAgBH,EAAWY,IAAU,CACtI,IAAMC,GAAgBC,GAAMF,EAAK,EACjC,GAAIC,KAAkBH,EAAI,GACtB,MAAM,IAAI,MAAM,+CAA+CA,EAAI,EAAE,YAAYG,EAAa,EAAE,CAExG,CAAC,CACL,CAAC,CACJ,GAIDR,IAAOG,GAAU,aACVG,GAA2BV,EAAYG,EAAOG,EAASD,EAAQH,EAAgBH,EAAWO,GAAY,CACzGA,EAAQ,MAAM,QAASG,GAAQ,CAC3B,GAAI,CAACA,EAAI,MAAM,SAAS,QACpB,OACJ,IAAMK,EAAeR,EAAQ,kBAAoBU,GAA+BR,GAC1EO,GAAqBT,EAAQ,mBAAqBN,EACxDS,EAAI,KAAK,QAAQ,QAAUK,EAAaC,GAAoBZ,EAAOM,EAAI,KAAK,QAAQ,QAASJ,EAAQH,EAAgBH,EAAWY,IAAU,CACtI,IAAMC,GAAgBC,GAAMF,EAAK,EACjC,GAAIC,KAAkBH,EAAI,GACtB,MAAM,IAAI,MAAM,+CAA+CA,EAAI,EAAE,YAAYG,EAAa,EAAE,CAExG,CAAC,CACL,CAAC,CACL,CAAC,EAIDR,IAAOG,GAAU,eACVG,GAA2BV,EAAYG,EAAOG,EAASD,EAAQH,EAAgBH,EAAWkB,GAAQ,CACrGA,EAAI,UAAYC,GAAmBD,EAAI,WAAY,OAAWA,EAAI,UAAWA,EAAI,OAAQlB,CAAQ,CACrG,CAAC,EAKDK,IAAOG,GAAU,uBAAyBY,GAAgBb,CAAO,EAC1DY,GAAmBlB,EAAYG,EAAOG,EAASD,EAAQN,CAAQ,EAGtEK,IAAOG,GAAU,oBACVD,EAEPF,IAAOG,GAAU,WACVD,EAAQ,IAAKG,GACTC,GAA2BV,EAAYG,EAAOM,EAAKJ,EAAQH,EAAgBH,EAAU,MAAS,CACxG,EAEDK,IAAOG,GAAU,oBACVG,GAA2BV,EAAYG,EAAOF,EAAeI,EAAQH,EAAgBH,EAAU,MAAS,EAG/GK,IAAOG,GAAU,UACVD,EACF,IAAI,CAAC,CAACc,EAAKC,CAAG,IAAM,CACrBD,EACAvB,GAAwC,CAAE,GAAGC,EAAM,GAAIsB,CAAI,EAAGrB,EAAUC,EAAYqB,EAAKnB,EAAgBC,CAAK,CAClH,CAAC,EAEEG,EACX,EACaC,GAAN,MAAMe,CAAU,CAEnB,SACA,MACA,SACA,mBACA,WACA,gBACA,mBACA,OAAO,YAAc,IACrB,OAAO,oBAAsB,KAC7B,OAAO,sBAAwB,KAC/B,OAAO,WAAa,KACpB,OAAO,WAAa,KACpB,OAAO,cAAgB,KACvB,OAAO,oBAAsB,KAC7B,OAAO,YAAc,KACrB,OAAO,YAAc,KACrB,OAAO,iBAAmB,KAC1B,OAAO,mBAAqB,KAC5B,OAAO,UAAY,IACnB,OAAO,aAAe,KACtB,OAAO,eAAiB,KACxB,OAAO,oBAAsB,MAE7B,OAAO,WAAW,CAAE,WAAAtB,EAAY,aAAAuB,EAAe,KAAM,cAAAC,EAAgB,KAKrE,OAAAnB,EAAS,OAAO,iBAAkB,GAAAD,EAAI,SAAAqB,CAAS,EAAG,CAC9C,IAAM3B,EAAO,CACT,QAAS,QACT,aAAAyB,EACA,cAAAC,EACA,OAAAnB,EACA,WAAAL,EACA,GAAII,EAAG,CAAC,EACR,SAAAqB,CACJ,EACA,OAAO,IAAI,KAAKC,GAAgB5B,EAAMM,EAAG,CAAC,CAAC,CAAC,CAChD,CAGA,OAAO,UAAUuB,EAAYC,EAAUC,EAAS,CAC5C,IAAM/B,EAAO,OAAO,OAAO,CAAC,EAAG6B,EAAYE,CAAO,EAClD,OAAO,IAAI,KAAKH,GAAgB5B,EAAM8B,EAAS,CAAC,CAAC,CAAC,CACtD,CACA,OAAO,YAAYjB,EAAOT,EAAgBC,EAAO2B,EAA6BC,GAA0B,CACpG,GAAI,CAACpB,EACD,MAAM,IAAI,MAAM,0BAA0BA,CAAK,EAAE,EACrD,GAAM,CAAE,KAAMZ,EAAU,GAAGiC,CAAY,EAAI,KAAK,MAAMrB,CAAK,EACrDb,EAAO,KAAK,MAAMC,CAAQ,EAC1BC,EAAaF,EAAK,KAAOwB,EAAU,YAAcW,GAAUtB,EAAOuB,GAAW,qBAAqB,EAAIpC,EAAK,WAGjH,GAAI,CAACK,GAAO,KAAK,gBAAkBL,EAAK,KAAOwB,EAAU,YAAa,CAClE,IAAMX,EAAQwB,GAAsBH,CAAW,EACzCI,EAAiB,OAAO,YAAYzB,EAAM,QAAQ,GAAG,KAAK,IAAI0B,IAAM,CACtE,IAAMC,GAAIR,EAA2BO,EAAE,EACvC,OAAKC,GAEE,CAACA,GAAE,KAAK,GAAIA,GAAE,IAAI,EADd,IAGf,CAAC,EAAE,OAAO,OAAO,CAAC,EAClBnC,EAAQ,CACJ,IAAK,CACD,KAAML,EAAK,KACX,eAAAsC,CACJ,CACJ,CACJ,CACA,IAAMG,EAAoBrB,GAAmBlB,EAAYG,EAAO6B,EAAalC,EAAK,OAAQC,EAAWO,GAAYT,GAAwCC,EAAMC,EAAUC,EAAYM,EAASJ,EAAgBC,CAAK,CAAC,EACpN,OAAO,IAAI,KAAK,CACZ,UAAW,WACX,QAAS,CAAE,IAAK8B,GAAUtB,EAAOuB,GAAW,qBAAqB,EAAG,MAAAvB,CAAM,EAC1E,KAAAb,EACA,kBAAAyC,CACJ,CAAC,CACL,CACA,OAAO,gBAAgB5B,EAAO,CAC1B,GAAI,CAACA,EACD,MAAM,IAAI,MAAM,0BAA0BA,CAAK,EAAE,EACrD,IAAIb,EAAM0C,EACJC,EAAS,CACX,IAAI,MAAO,CACP,OAAI3C,IAAS,SACTA,EAAO,KAAK,MAAM,KAAK,MAAMa,CAAK,EAAE,IAAI,GAErCb,CACX,EACA,IAAI,MAAO,CACP,OAAK0C,IACDA,EAAOP,GAAUtB,EAAOuB,GAAW,qBAAqB,GAErDM,CACX,EACA,IAAI,YAAa,CACb,OAAOC,EAAO,MAAM,YAAcA,EAAO,IAC7C,EAGA,aAAc,CAEV,MAAO,OADM,KAAK,KAAK,EACL,IAAI,KAAK,IAAI,OAAO,KAAK,UAAU,GACzD,EACA,IAAI,gBAAiB,CACjB,MAAO,CAACA,EAAO,MAAM,UACzB,CACJ,EACA,OAAOA,CACX,CACA,YAAYC,EAAQ,CAChB,KAAK,WAAaA,EAAO,UACzB,KAAK,SAAWA,EAAO,QACvB,KAAK,MAAQA,EAAO,KACpB,KAAK,mBAAqBA,EAAO,kBAEjC,IAAMC,EAAO,KAAK,OAAO,EACrBC,EAAiB,GACfC,EAAW,CAACF,EAAMrC,IAAY,CAChC,OAAQqC,EAAM,CACV,KAAKrB,EAAU,YACX,GAAI,CAAC,KAAK,eAAe,GAAK,CAACsB,EAC3B,MAAM,IAAI,MAAM,oCAAoC,EACxD,MACJ,KAAKtB,EAAU,UACX,GAAI,CAACsB,EACD,MAAM,IAAI,MAAM,2CAA2C,EAE/D,GAAI,CAAC,MAAM,QAAQtC,CAAO,EACtB,MAAM,IAAI,UAAU,oCAAoC,EAE5DsC,EAAiB,GACjBtC,EAAQ,QAAQ,CAAC,CAACwC,EAAGC,CAAC,IAAMF,EAASC,EAAGC,CAAC,CAAC,EAC1C,MACJ,KAAKzB,EAAU,WACf,KAAKA,EAAU,WACf,KAAKA,EAAU,cACX,GAAI,CAAC,MAAM,QAAQhB,CAAO,EACtB,MAAM,IAAI,UAAU,kDAAkD,EAC1E,MACJ,KAAKgB,EAAU,aACf,KAAKA,EAAU,eACf,KAAKA,EAAU,oBACf,KAAKA,EAAU,oBACf,KAAKA,EAAU,sBAEX,MACJ,QACI,MAAM,IAAI,MAAM,mBAAmBqB,CAAI,EAAE,CACjD,CACJ,EAGA,OAAO,eAAe,KAAM,WAAY,CACpC,KAAOK,GAAc,IAAM,CACvB,IAAM1C,EAAU,KAAK,mBAAmB,QAAQ,EAEhD,OAAK0C,IACDH,EAASF,EAAMrC,CAAO,EACtB0C,EAAY,IAET1C,CACX,GAAG,CACP,CAAC,CACL,CACA,gBAAiB,CACb,GAAI,KAAK,gBACL,OAAO,KAAK,gBAChB,GAAI,CACA,IAAMK,EAAQ,KAAK,QAAQ,EAKrBsC,EAAOlB,GAAyBpB,CAAK,EAG3C,OAAIsC,GAAM,OAGFC,GAAaD,EAAK,IAAI,GACtB,KAAK,mBAAqBA,EAAK,KAAK,aACpC,KAAK,gBAAkBA,EAAK,KAAK,QAAQ,GAGzC,KAAK,gBAAkBA,EAAK,MAG7B,KAAK,eAChB,MACM,CAIF,MACJ,CACJ,CACA,mBAAoB,CAChB,OAAK,KAAK,iBACN,KAAK,eAAe,EAEjB,KAAK,kBAChB,CACA,MAAO,CAAE,OAAO,KAAK,KAAO,CAC5B,SAAU,CAAE,OAAO,KAAK,QAAU,CAClC,IAAK,CAAE,MAAO,CAAC,KAAK,KAAK,EAAE,GAAI,KAAK,QAAQ,CAAC,CAAG,CAChD,OAAQ,CAAE,MAAO,CAAC,KAAK,KAAK,EAAE,GAAI,KAAK,kBAAkB,CAAG,CAC5D,QAAS,CAAE,OAAO,KAAK,KAAK,EAAE,EAAI,CAClC,SAAU,CAAE,OAAO,KAAK,QAAQ,CAAG,CACnC,cAAe,CAAE,OAAO,KAAK,mBAAmB,YAAc,CAC9D,UAAW,CAAE,OAAO,KAAK,KAAK,EAAE,QAAU,CAC1C,aAAc,CACV,IAAMN,EAAO,KAAK,OAAO,EACrBQ,EAAO,OAAOR,CAAI,GACtB,GAAIA,IAASrB,EAAU,sBACnB,GAAI,CACA,IAAMX,EAAQ,KAAK,QAAQ,EAAE,QAAQ,EACjC,OAAOA,EAAM,QAAW,WACxBwC,GAAQ,IAAIxC,EAAM,MAAM,GAEhC,OACOyC,EAAG,CACN,QAAQ,KAAK,0BAA2B,KAAK,KAAK,EAAGA,CAAC,CAC1D,CAEJ,MAAO,GAAGD,CAAI,IAAI,KAAK,KAAK,CAAC,OAAO,KAAK,WAAW,CAAC,GACzD,CACA,gBAAiB,CAAE,MAAO,CAAC,KAAK,KAAK,EAAE,UAAY,CACnD,YAAa,CAAE,OAAO,KAAK,KAAK,EAAE,YAAc,KAAK,KAAK,CAAG,CAC7D,WAAY,CAAE,OAAO,KAAK,SAAS,KAAO,CAC1C,MAAO,CAAE,OAAO,KAAK,SAAS,GAAK,CACnC,eAAgB,CAAE,OAAO,KAAK,MAAM,aAAe,CACnD,QAAS,CAAE,OAAO,KAAK,MAAM,MAAQ,CACrC,IAAK,CAED,MAAM,IAAI,MAAM,mDAAmD,CACvE,CACA,WAAY,CACR,OAAO,KAAK,UAChB,CAGA,SAAU,CACN,IAAIxC,EACJ,MAAO,CAAC,EAAE0C,GAAO,SAAS,KAAK,OAAO,CAAC,GAClC,KAAK,OAAO,IAAM/B,EAAU,WAAa,MAAM,QAAQX,EAAQ,KAAK,QAAQ,CAAC,GAAKA,EAAM,KAAK,CAAC,CAACS,CAAG,IACxFiC,GAAO,SAASjC,CAAG,CAC7B,EACT,CACA,WAAYkC,EAAe,GAAI,CAC3B,MAAO,WACX,CACA,OAAQC,EAAqB,EAAER,EAAG,CAC9B,MAAO,CAACA,EAAE,UAAU,EAAGA,EAAE,UAAU,EAAGA,EAAE,eAAe,EAAGA,EAAE,kBAAkB,CAAC,CACnF,CACA,OAAQS,EAAuB,EAAE,CAACC,EAAYC,EAAWC,EAAgBC,CAAiB,EAAG,CACzF,IAAMb,EAAIzB,EAAU,YAAYmC,CAAU,EAC1C,OAAAV,EAAE,WAAaW,EACfX,EAAE,gBAAkBY,EACpBZ,EAAE,mBAAqBa,EAChBb,CACX,CACJ,EACA,SAASrB,GAAgB5B,EAAMQ,EAAS,CAUpC,IAAIuD,EACJ,MAAO,CACH,UAAWC,GAAIxD,EAAS,UAAU,EAAI,WAAa,WAGnD,IAAI,SAAU,CACV,GAAI,CAACuD,EAAS,CACV,IAAM9D,EAAW,KAAK,UAAUD,CAAI,EAC9BiE,EAAc,CAAE,GAAGzD,EAAQ,UAAUP,CAAQ,EAAG,KAAMA,CAAS,EAC/DY,EAAQ,KAAK,UAAUoD,CAAW,EACxCF,EAAU,CACN,IAAK5B,GAAUtB,EAAOuB,GAAW,qBAAqB,EACtD,MAAAvB,CACJ,CACJ,CACA,OAAOkD,CACX,EACA,KAAA/D,EACA,kBAAmBQ,CACvB,CACJ,CAEA,IAAM+C,GAAS,CAAC9C,GAAU,YAAaA,GAAU,WAAYA,GAAU,WAAYA,GAAU,aAAa",
  "names": ["require_util", "__commonJSMin", "exports", "module", "ERROR_MSG_INPUT", "normalizeInput", "input", "ret", "toHex", "bytes", "n", "uint32ToHex", "val", "debugPrint", "label", "arr", "size", "msg", "i", "testSpeed", "hashFn", "N", "M", "startMs", "genMs", "hashHex", "hashMs", "ms", "require_blake2b", "__commonJSMin", "exports", "module", "util", "ADD64AA", "v", "a", "b", "o0", "o1", "ADD64AC", "b0", "b1", "B2B_GET32", "arr", "i", "B2B_G", "c", "d", "ix", "iy", "x0", "m", "x1", "y0", "y1", "xor0", "xor1", "BLAKE2B_IV32", "SIGMA8", "SIGMA82", "x", "blake2bCompress", "ctx", "last", "parameterBlock", "blake2bInit", "outlen", "key", "salt", "personal", "blake2bUpdate", "input", "blake2bFinal", "out", "blake2b", "blake2bHex", "output", "require_blake2s", "__commonJSMin", "exports", "module", "util", "B2S_GET32", "v", "i", "B2S_G", "a", "b", "c", "d", "y", "ROTR32", "x", "BLAKE2S_IV", "SIGMA", "m", "blake2sCompress", "ctx", "last", "blake2sInit", "outlen", "key", "keylen", "blake2sUpdate", "input", "blake2sFinal", "out", "blake2s", "blake2sHex", "output", "require_blakejs", "__commonJSMin", "exports", "module", "b2b", "b2s", "require_scrypt_async", "__commonJSMin", "exports", "module", "scrypt", "password", "salt", "logN", "r", "dkLen", "interruptStep", "callback", "encoding", "SHA256", "m", "K", "h0", "h1", "h2", "h3", "h4", "h5", "h6", "h7", "w", "blocks", "p", "off", "len", "a", "b", "c", "d", "e", "f", "g", "h", "u", "i", "j", "t1", "t2", "bytesLeft", "bitLenHi", "bitLenLo", "numZeros", "PBKDF2_HMAC_SHA256_OneIter", "innerLen", "inner", "outerKey", "dk", "incrementCounter", "salsaXOR", "tmp", "B", "bin", "bout", "j0", "j1", "j2", "j3", "j4", "j5", "j6", "j7", "j8", "j9", "j10", "j11", "j12", "j13", "j14", "j15", "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10", "x11", "x12", "x13", "x14", "x15", "blockCopy", "dst", "di", "src", "si", "blockXOR", "blockMix", "integerify", "bi", "stringToUTF8Bytes", "s", "arr", "bytesToHex", "enc", "bytesToBase64", "t", "MAX_UINT", "opts", "N", "XY", "V", "xi", "yi", "smixStart", "pos", "smixStep1", "start", "end", "smixStep2", "smixFinish", "nextTick", "interruptedFor", "step", "fn", "donefn", "performStep", "getResult", "result", "calculateSync", "calculateAsync", "require_nacl_fast", "__commonJSMin", "exports", "module", "nacl", "gf", "init", "r", "randombytes", "_0", "_9", "gf0", "gf1", "_121665", "D", "D2", "X", "Y", "I", "ts64", "x", "h", "l", "vn", "xi", "y", "yi", "n", "i", "d", "crypto_verify_16", "crypto_verify_32", "core_salsa20", "o", "p", "k", "c", "j0", "j1", "j2", "j3", "j4", "j5", "j6", "j7", "j8", "j9", "j10", "j11", "j12", "j13", "j14", "j15", "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10", "x11", "x12", "x13", "x14", "x15", "u", "core_hsalsa20", "crypto_core_salsa20", "out", "inp", "crypto_core_hsalsa20", "sigma", "crypto_stream_salsa20_xor", "cpos", "m", "mpos", "b", "z", "crypto_stream_salsa20", "crypto_stream", "s", "sn", "crypto_stream_xor", "poly1305", "key", "t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7", "bytes", "hibit", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "h0", "h1", "h2", "h3", "h4", "h5", "h6", "h7", "h8", "h9", "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9", "mac", "macpos", "g", "mask", "f", "want", "crypto_onetimeauth", "outpos", "crypto_onetimeauth_verify", "hpos", "crypto_secretbox", "crypto_secretbox_open", "set25519", "a", "car25519", "v", "sel25519", "q", "t", "pack25519", "j", "neq25519", "par25519", "unpack25519", "A", "Z", "M", "t8", "t9", "t10", "t11", "t12", "t13", "t14", "t15", "t16", "t17", "t18", "t19", "t20", "t21", "t22", "t23", "t24", "t25", "t26", "t27", "t28", "t29", "t30", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "b10", "b11", "b12", "b13", "b14", "b15", "S", "inv25519", "pow2523", "crypto_scalarmult", "e", "x32", "x16", "crypto_scalarmult_base", "crypto_box_keypair", "crypto_box_beforenm", "crypto_box_afternm", "crypto_box_open_afternm", "crypto_box", "crypto_box_open", "K", "crypto_hashblocks_hl", "hh", "hl", "wh", "wl", "bh0", "bh1", "bh2", "bh3", "bh4", "bh5", "bh6", "bh7", "bl0", "bl1", "bl2", "bl3", "bl4", "bl5", "bl6", "bl7", "th", "tl", "ah0", "ah1", "ah2", "ah3", "ah4", "ah5", "ah6", "ah7", "al0", "al1", "al2", "al3", "al4", "al5", "al6", "al7", "pos", "crypto_hash", "add", "cswap", "pack", "tx", "ty", "zi", "scalarmult", "scalarbase", "crypto_sign_keypair", "pk", "sk", "seeded", "L", "modL", "carry", "reduce", "crypto_sign", "sm", "smlen", "unpackneg", "chk", "num", "den", "den2", "den4", "den6", "crypto_sign_open", "crypto_secretbox_KEYBYTES", "crypto_secretbox_NONCEBYTES", "crypto_secretbox_ZEROBYTES", "crypto_secretbox_BOXZEROBYTES", "crypto_scalarmult_BYTES", "crypto_scalarmult_SCALARBYTES", "crypto_box_PUBLICKEYBYTES", "crypto_box_SECRETKEYBYTES", "crypto_box_BEFORENMBYTES", "crypto_box_NONCEBYTES", "crypto_box_ZEROBYTES", "crypto_box_BOXZEROBYTES", "crypto_sign_BYTES", "crypto_sign_PUBLICKEYBYTES", "crypto_sign_SECRETKEYBYTES", "crypto_sign_SEEDBYTES", "crypto_hash_BYTES", "checkLengths", "checkBoxLengths", "checkArrayTypes", "cleanup", "arr", "msg", "nonce", "box", "publicKey", "secretKey", "signedMsg", "tmp", "mlen", "sig", "seed", "fn", "crypto", "QUOTA", "__require", "cloneDeep", "obj", "has", "empty", "equals", "aa", "bb", "ii", "coerce", "o", "base", "ALPHABET", "name", "BASE_MAP", "j", "i", "x", "xc", "BASE", "LEADER", "FACTOR", "iFACTOR", "encode", "source", "zeroes", "length", "pbegin", "pend", "size", "b58", "carry", "it1", "it2", "str", "decodeUnsafe", "psz", "b256", "it3", "it4", "vch", "decode", "string", "buffer", "src", "_brrp__multiformats_scope_baseX", "base_x_default", "Encoder", "name", "prefix", "baseEncode", "bytes", "Decoder", "baseDecode", "text", "decoder", "or", "ComposedDecoder", "decoders", "input", "left", "right", "_a", "_b", "Codec", "from", "encode", "decode", "baseX", "alphabet", "base_x_default", "coerce", "string", "bitsPerChar", "codes", "i", "end", "out", "bits", "buffer", "written", "value", "data", "pad", "mask", "rfc4648", "base32", "rfc4648", "base32upper", "base32pad", "base32padupper", "base32hex", "base32hexupper", "base32hexpad", "base32hexpadupper", "base32z", "base58btc", "baseX", "base58flickr", "import_blakejs", "encode_1", "encode", "MSB", "REST", "MSBALL", "INT", "num", "out", "offset", "oldOffset", "decode", "read", "MSB$1", "REST$1", "buf", "res", "shift", "counter", "b", "l", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "value", "varint", "_brrp_varint", "varint_default", "decode", "data", "offset", "varint_default", "encodeTo", "int", "target", "encodingLength", "create", "code", "digest", "size", "sizeOffset", "encodingLength", "digestOffset", "bytes", "encodeTo", "Digest", "decode", "multihash", "coerce", "equals", "a", "b", "data", "from", "name", "code", "encode", "Hasher", "input", "result", "create", "digest", "blake2b", "blakejs", "blake2b8", "from", "input", "coerce", "blake2b16", "blake2b24", "blake2b32", "blake2b40", "blake2b48", "blake2b56", "blake2b64", "blake2b72", "blake2b80", "blake2b88", "blake2b96", "blake2b104", "blake2b112", "blake2b120", "blake2b128", "blake2b136", "blake2b144", "blake2b152", "blake2b160", "blake2b168", "blake2b176", "blake2b184", "blake2b192", "blake2b200", "blake2b208", "blake2b216", "blake2b224", "blake2b232", "blake2b240", "blake2b248", "blake2b256", "blake2b264", "blake2b272", "blake2b280", "blake2b288", "blake2b296", "blake2b304", "blake2b312", "blake2b320", "blake2b328", "blake2b336", "blake2b344", "blake2b352", "blake2b360", "blake2b368", "blake2b376", "blake2b384", "blake2b392", "blake2b400", "blake2b408", "blake2b416", "blake2b424", "blake2b432", "blake2b440", "blake2b448", "blake2b456", "blake2b464", "blake2b472", "blake2b480", "blake2b488", "blake2b496", "blake2b504", "blake2b512", "import_blakejs", "__awaiter", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "e", "rejected", "result", "blake2b", "blake2bInit", "blake2bUpdate", "blake2bFinal", "blakejs", "blake2b256stream", "from", "input", "ctx", "reader", "coerce", "_a", "format", "link", "base", "bytes", "version", "toStringV0", "baseCache", "base58btc", "toStringV1", "base32", "cache", "baseCache", "cid", "CID", "_CID", "version", "code", "multihash", "bytes", "_a", "DAG_PB_CODE", "SHA_256_CODE", "digest", "create", "other", "self", "unknown", "equals", "base", "format", "input", "value", "encodeCID", "cidSymbol", "decode", "remainder", "specs", "prefixSize", "multihashBytes", "coerce", "digestBytes", "Digest", "initialBytes", "offset", "next", "i", "length", "codec", "multihashCode", "digestSize", "size", "multihashSize", "source", "prefix", "parseCIDtoBytes", "decoder", "base58btc", "base32", "toStringV0", "toStringV1", "codeOffset", "encodingLength", "hashOffset", "encodeTo", "import_scrypt_async", "import_tweetnacl", "bufToStr", "textDecoder", "buf", "strToBuf", "textEncoder", "str", "blake32Hash", "data", "uint8array", "digest", "blake2b256", "base58btc", "b64ToBuf", "b", "EDWARDS25519SHA512BATCH", "CURVE25519XSALSA20POLY1305", "XSALSA20POLY1305", "EXTERNALKM32", "bytesOrObjectToB64", "ary", "c", "keygen", "type", "key", "nacl", "res", "generateSalt", "deriveKeyFromPassword", "password", "salt", "resolve", "scrypt", "derivedKey", "buffer", "serializeKey", "saveSecretKey", "deserializeKey", "data", "keyData", "b64ToBuf", "keyId", "inKey", "key", "deserializeKey", "serializedKey", "serializeKey", "blake32Hash", "verifySignature", "inKey", "data", "signature", "key", "deserializeKey", "EDWARDS25519SHA512BATCH", "decodedSignature", "b64ToBuf", "messageUint8", "strToBuf", "nacl", "encrypt", "ad", "XSALSA20POLY1305", "nonce", "encryptionNonce", "adHash", "len", "i", "box", "fullMessage", "bytesOrObjectToB64", "CURVE25519XSALSA20POLY1305", "ephemeralKey", "decrypt", "messageWithNonceAsUint8Array", "message", "decrypted", "bufToStr", "ephemeralPublicKey", "import_buffer", "multicodes", "createCID", "data", "multicode", "multicodes", "uint8array", "digest", "blake2b256", "CID", "base58btc", "blake32Hash", "getSubscriptionId", "subscriptionInfo", "textEncoder", "endpoint", "p256dh", "auth", "canonicalForm", "canonicalFormU8", "canonicalFormDV", "offset", "digest", "id", "p", "rootStateFn", "esm_default", "proto", "wrapper", "o", "isSignedData", "verifySignatureData", "state", "height", "data", "additionalData", "ChelErrorSignatureError", "isRawSignedData", "serializedMessage", "sKeyId", "signature", "designatedKey", "ChelErrorSignatureKeyUnauthorized", "deserializedKey", "payloadToSign", "blake32Hash", "verifySignature", "message", "e", "signedIncomingData", "contractID", "state", "data", "height", "additionalData", "mapperFn", "stringValueFn", "verifySignedValue", "verifySignedValueFn", "verifySignatureData", "rootStateFn", "wrapper", "signedDataKeyId", "k", "isRawSignedData", "ChelErrorSignatureError", "has", "v", "rawSignedIncomingData", "rootStateFn", "esm_default", "proto", "wrapper", "o", "isEncryptedData", "encryptData", "stateOrContractID", "eKeyId", "data", "additionalData", "state", "designatedKey", "name", "newKeyId", "v", "key", "deserializedKey", "deserializeKey", "keyId", "encrypt", "_", "has", "decryptData", "height", "additionalKeys", "validatorFn", "ChelErrorDecryptionError", "isRawEncryptedData", "message", "ChelErrorDecryptionKeyNotFound", "ChelErrorUnexpected", "result", "decrypt", "e", "encryptedOutgoingData", "boundStringValueFn", "encryptedIncomingData", "contractID", "state", "data", "height", "additionalKeys", "additionalData", "validatorFn", "decryptedValue", "decryptedValueFn", "rootState", "rootStateFn", "decryptData", "isRawSignedData", "signedIncomingData", "wrapper", "encryptedDataKeyId", "encryptedIncomingForeignData", "_0", "_1", "encryptedDataKeyId", "data", "isRawEncryptedData", "ChelErrorDecryptionError", "v", "unwrapMaybeEncryptedData", "isEncryptedData", "e", "maybeEncryptedIncomingData", "contractID", "state", "height", "additionalKeys", "additionalData", "validatorFn", "encryptedIncomingData", "decryptedAndVerifiedDeserializedMessage", "head", "headJSON", "contractID", "parsedMessage", "additionalKeys", "state", "op", "height", "message", "SPMessage", "encryptedIncomingData", "key", "maybeEncryptedIncomingData", "value", "computedKeyId", "keyId", "decryptionFn", "decryptionContract", "encryptedIncomingForeignData", "msg", "signedIncomingData", "isRawSignedData", "opT", "opV", "_SPMessage", "previousHEAD", "previousKeyOp", "manifest", "messageToParams", "targetHead", "targetOp", "sources", "unwrapMaybeEncryptedDataFn", "unwrapMaybeEncryptedData", "parsedValue", "createCID", "multicodes", "rawSignedIncomingData", "authorizedKeys", "wk", "k", "signedMessageData", "hash", "result", "params", "type", "atomicTopLevel", "validate", "t", "m", "validated", "data", "isSignedData", "desc", "e", "keyOps", "serdesTagSymbol", "serdesSerializeSymbol", "serdesDeserializeSymbol", "serialized", "direction", "decryptedValue", "innerSigningKeyId", "mapping", "has", "messageJSON"]
}

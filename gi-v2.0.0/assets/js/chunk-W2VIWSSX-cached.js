import{o as l}from"./chunk-VUYUNB2W-cached.js";import{a}from"./chunk-OMOH7TRL-cached.js";var s=l(t=>{let e=t==="granted"||t==="prompt"&&Notification.permission==="granted",{notificationEnabled:i}=a("state/vuex/state").settings;console.info(`Browser notifications have been: ${e?"enabled":"disabled"}, notificationEnabled=${i}`),(!e||i)&&a("service-worker/setup-push-subscription").catch(n=>{console.error("[handler] Error calling service-worker/setup-push-subscription",n)})},250),u=()=>{if(!Notification.permission)return;let t=Notification.permission;s(t),setInterval(()=>{let e=Notification.permission;t!==e&&s(t=e)},1e3)},d=()=>{if(typeof navigator!="object"||typeof Notification!="function"||typeof PushManager!="function"||typeof ServiceWorker!="function"||typeof navigator.serviceWorker!="object"){console.warn("Notifications aren't available in this browser!");return}!(typeof navigator=="object"&&navigator.vendor==="Apple Computer, Inc.")&&typeof navigator.permissions=="object"&&typeof navigator.permissions.query=="function"?Promise.all([navigator.permissions.query({name:"notifications"}),navigator.permissions.query({name:"push",userVisibleOnly:!0})]).then(e=>{s(e[0].state),e[0].addEventListener("change",()=>{s(e[0].state)},!1),e[1].addEventListener("change",()=>{s(e[1].state)},!1)}).catch(e=>{console.error("Error querying notifications permission",e),u()}):u()};async function h({enableIfGranted:t}={enableIfGranted:!1}){if(typeof Notification!="function")return null;try{let e=await Notification.requestPermission();return t&&e==="granted"&&a("state/vuex/commit","setNotificationEnabled",!0),e}catch(e){return console.error("requestNotificationPermission:",e.message),null}}async function v({title:t,body:e,icon:i,path:n,groupID:c,sbpInvocation:f}){if(typeof Notification=="function"){if(typeof i=="object"&&i.manifestCid){let o=await a("gi.db/filesCache/load",i.manifestCid).catch(r=>{console.error("[Avatar.vue] Error loading file from cache",r)});o&&(i="data:;base64,"+encodeURIComponent(Buffer.from(o).toString("base64")))}if(typeof WorkerGlobalScope!="function")try{if(navigator.vendor==="Apple Computer, Inc.")throw new Error("Safari requires a service worker for the notification to be displayed");let o=new Notification(t,{body:e,icon:i});n&&(o.onclick=r=>{a("controller/router").push({path:n}).catch(console.warn)})}catch{return navigator.serviceWorker?.ready.then(r=>r.showNotification(t,{body:e,icon:i,data:{groupID:c,path:n,sbpInvocation:f}})).catch(console.warn)}else return self.clients.matchAll({type:"window"}).then(o=>{if(!o.some(r=>r.focused))return self.registration.showNotification(t,{body:e,icon:i,data:{groupID:c,path:n,sbpInvocation:f}}).catch(console.warn)})}}export{d as a,h as b,v as c};
//# sourceMappingURL=chunk-W2VIWSSX-cached.js.map

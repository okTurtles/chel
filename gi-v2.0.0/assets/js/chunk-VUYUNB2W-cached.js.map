{
  "version": 3,
  "sources": ["../../../node_modules/turtledash/dist/esm/index.js"],
  "sourcesContent": ["// manually implemented lodash functions are better than even:\n// https://github.com/lodash/babel-plugin-lodash\n// additional tiny versions of lodash functions are available in VueScript2\nexport function mapValues(obj, fn, o = {}) {\n    for (const key in obj) {\n        o[key] = fn(obj[key]);\n    }\n    return o;\n}\nexport function mapObject(obj, fn) {\n    return Object.fromEntries(Object.entries(obj).map(fn));\n}\nexport function pick(o, props) {\n    const x = Object.create(null);\n    for (const k of props) {\n        if (has(o, k)) {\n            x[k] = o[k];\n        }\n    }\n    return x;\n}\nexport function pickWhere(o, where) {\n    const x = Object.create(null);\n    for (const k in o) {\n        if (where(o[k])) {\n            x[k] = o[k];\n        }\n    }\n    return x;\n}\nexport function choose(array, indices) {\n    const x = [];\n    for (const idx of indices) {\n        x.push(array[idx]);\n    }\n    return x;\n}\nexport function omit(o, props) {\n    const x = Object.create(null);\n    for (const k in o) {\n        if (!props.includes(k)) {\n            x[k] = o[k];\n        }\n    }\n    return x;\n}\nexport function cloneDeep(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\nfunction isMergeableObject(val) {\n    const nonNullObject = val && typeof val === 'object';\n    return (nonNullObject &&\n        Object.prototype.toString.call(val) !== '[object RegExp]' &&\n        Object.prototype.toString.call(val) !== '[object Date]');\n}\nexport function merge(obj, src) {\n    const res = obj;\n    for (const key in src) {\n        const clone = isMergeableObject(src[key]) ? cloneDeep(src[key]) : undefined;\n        let x;\n        // `has` check needed to avoid using inherited properties. This is probably\n        // closer to the behaviour one expects and also avoids prototype pollution.\n        if (clone && has(obj, key) && isMergeableObject((x = res[key]))) {\n            merge(x, clone);\n            continue;\n        }\n        // The following simpler formulation isn't used because it can lead to\n        // prototype pollution. Instead, we use `Object.defineProperty`, which\n        // doesn't have this issue.\n        // // res[key] = clone || src[key] // DO NOT USE!\n        Object.defineProperty(res, key, {\n            configurable: true,\n            enumerable: true,\n            value: clone || src[key],\n            writable: true\n        });\n    }\n    return res;\n}\nexport function delay(msec) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, msec);\n    });\n}\nexport function randomBytes(length) {\n    return crypto.getRandomValues(new Uint8Array(length));\n}\nexport function randomHexString(length) {\n    return Array.from(randomBytes(length), byte => (byte % 16).toString(16)).join('');\n}\nexport function normalizeString(str) {\n    return str\n        // [1]. Normalize strings by replacing intial and final punctuation marks,\n        // which typically are used in smart quote substitution, with a standad\n        // character\n        // (reference issue: https://github.com/okTurtles/group-income/issues/2479)\n        .replace(/[\\p{Pf}\\p{Pi}]/gu, \"'\")\n        // [2]. Normalize the string based on 'Canonical equivalence'. eg) 'Am\u00E9lie' !== 'Ame\u0301lie' even when they are visually identical because their unicode sequences are different.\n        //      (reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize#canonical_equivalence_normalization)\n        .normalize('NFC');\n}\nexport function randomIntFromRange(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\nexport function randomFromArray(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n}\nexport function linearScale([d1, d2], [r1, r2]) {\n    // generate a function that takes a value between d1 and d2 and then\n    // returns a linearly-scaled output whose min and max values are r1 and r2 respectively.\n    const [dSpan, rSpan] = [d2 - d1, r2 - r1];\n    return function (value) {\n        if (value <= d1) {\n            return r1;\n        }\n        else if (value >= d2) {\n            return r2;\n        }\n        else {\n            const percent = (value - d1) / dSpan;\n            return r1 + rSpan * percent;\n        }\n    };\n}\nexport function flatten(arr) {\n    let flat = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (Array.isArray(arr[i])) {\n            flat = flat.concat(arr[i]);\n        }\n        else {\n            flat.push(arr[i]);\n        }\n    }\n    return flat;\n}\nexport function zip(...arr) {\n    const zipped = [];\n    let max = 0;\n    arr.forEach((current) => (max = Math.max(max, current.length)));\n    for (const current of arr) {\n        for (let i = 0; i < max; i++) {\n            zipped[i] = zipped[i] || [];\n            zipped[i].push(current[i]);\n        }\n    }\n    return zipped;\n}\nexport function uniq(array) {\n    return Array.from(new Set(array));\n}\nexport function union(...arrays) {\n    return uniq(Array.prototype.concat.apply([], arrays));\n}\nexport function intersection(a1, ...arrays) {\n    return uniq(a1).filter(v1 => arrays.every(v2 => v2.indexOf(v1) >= 0));\n}\nexport function difference(a1, ...arrays) {\n    const a2 = Array.prototype.concat.apply([], arrays);\n    return a1.filter(v => a2.indexOf(v) === -1);\n}\nexport function deepEqualJSONType(a, b) {\n    if (a === b)\n        return true;\n    if (a == null || b == null || typeof (a) !== typeof (b))\n        return false;\n    if (typeof a !== 'object')\n        return a === b;\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length)\n            return false;\n    }\n    else if (![Object.prototype, null].includes(Object.getPrototypeOf(a))) {\n        throw new Error(`not JSON type: ${a}`);\n    }\n    for (const key in a) {\n        if (!deepEqualJSONType(a[key], b[key]))\n            return false;\n    }\n    return true;\n}\nexport function hashableRepresentation(unsorted) {\n    if (!unsorted || typeof unsorted !== 'object') {\n        return unsorted;\n    }\n    if (Array.isArray(unsorted)) {\n        return unsorted.map(v => hashableRepresentation(v));\n    }\n    else {\n        return Object.keys(unsorted).sort().reduce((acc, curKey) => {\n            acc.push([\n                curKey,\n                hashableRepresentation(unsorted[curKey])\n            ]);\n            return acc;\n        }, []);\n    }\n}\n/**\n * Modified version of: https://github.com/component/debounce/blob/master/index.js\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear'\n * that is a function which will clear the timer to prevent previously scheduled executions.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param func function to wrap\n * @param wait timeout in ms (`100`)\n * @param immediate whether to execute at the beginning (`false`)\n * @api public\n */\nexport function debounce(func, wait, immediate) {\n    let timeout, args, context, timestamp, result;\n    if (wait == null)\n        wait = 100;\n    function later() {\n        const last = performance.now() - timestamp;\n        if (last < wait && last >= 0) {\n            timeout = setTimeout(later, wait - last);\n        }\n        else {\n            timeout = undefined;\n            if (!immediate) {\n                result = func.apply(context, args);\n                args = undefined;\n                context = undefined;\n            }\n        }\n    }\n    const debounced = function (...args_) {\n        args = args_;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        context = this;\n        timestamp = performance.now();\n        const callNow = immediate && !timeout;\n        if (!timeout)\n            timeout = setTimeout(later, wait);\n        if (callNow) {\n            result = func.apply(context, args);\n            args = undefined;\n            context = undefined;\n        }\n        return result;\n    };\n    debounced.clear = function () {\n        if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n        }\n    };\n    debounced.flush = function () {\n        if (timeout) {\n            result = func.apply(context, args);\n            args = undefined;\n            context = undefined;\n            clearTimeout(timeout);\n            timeout = undefined;\n        }\n    };\n    return debounced;\n}\nexport function throttle(func, delay) {\n    // reference: https://www.geeksforgeeks.org/javascript-throttling/\n    // Previously called time of the function\n    let prev = 0;\n    return (...args) => {\n        // Current called time of the function\n        const now = new Date().getTime();\n        // If difference is greater than delay call\n        if (now - prev > delay) {\n            prev = now;\n            return func(...args);\n        }\n    };\n}\n/**\n * Gets the value at `path` of `obj`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n */\nexport function get(obj, path, defaultValue) {\n    if (!path.length) {\n        return obj;\n    }\n    else if (obj == null) {\n        return defaultValue;\n    }\n    let result = obj;\n    let i = 0;\n    while (result && i < path.length) {\n        result = result[path[i]];\n        i++;\n    }\n    return result === undefined ? defaultValue : result;\n}\nexport const has = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n"],
  "mappings": "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",
  "names": ["omit", "o", "props", "x", "k", "cloneDeep", "obj", "isMergeableObject", "val", "merge", "src", "res", "key", "clone", "has", "delay", "msec", "resolve", "randomBytes", "length", "randomHexString", "byte", "normalizeString", "str", "randomIntFromRange", "min", "max", "randomFromArray", "arr", "linearScale", "d1", "d2", "r1", "r2", "dSpan", "rSpan", "value", "percent", "uniq", "array", "union", "arrays", "difference", "a1", "arrays", "a2", "v", "deepEqualJSONType", "a", "b", "key", "debounce", "func", "wait", "immediate", "timeout", "args", "context", "timestamp", "result", "later", "last", "debounced", "args_", "callNow", "throttle", "delay", "prev", "now", "get", "obj", "path", "defaultValue", "i", "has"]
}

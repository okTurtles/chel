{
  "version": 3,
  "sources": ["../../../node_modules/vue2-touch-events/index.js"],
  "sourcesContent": ["/**\n *\n * @author    Jerry Bendy\n * @since     4/12/2017\n */\n\nfunction touchX(event) {\n    if(event.type.indexOf('mouse') !== -1){\n        return event.clientX;\n    }\n    return event.touches[0].clientX;\n}\n\nfunction touchY(event) {\n    if(event.type.indexOf('mouse') !== -1){\n        return event.clientY;\n    }\n    return event.touches[0].clientY;\n}\n\nvar isPassiveSupported = (function() {\n    var supportsPassive = false;\n    try {\n        var opts = Object.defineProperty({}, 'passive', {\n            get: function() {\n                supportsPassive = true;\n            }\n        });\n        window.addEventListener('test', null, opts);\n    } catch (e) {}\n    return supportsPassive;\n})();\n\n\nvar vueTouchEvents = {\n    install: function (Vue, constructorOptions) {\n\n        var globalOptions = Object.assign({}, {\n            disableClick: false,\n            tapTolerance: 10,  // px\n            swipeTolerance: 30,  // px\n            touchHoldTolerance: 400,  // ms\n            longTapTimeInterval: 400,  // ms\n            touchClass: ''\n        }, constructorOptions);\n\n        function touchStartEvent(event) {\n            var $this = this.$$touchObj,\n                isTouchEvent = event.type.indexOf('touch') >= 0,\n                isMouseEvent = event.type.indexOf('mouse') >= 0,\n                $el = this;\n\n            if (isTouchEvent) {\n                $this.lastTouchStartTime = event.timeStamp;\n            }\n\n            if (isMouseEvent && $this.lastTouchStartTime && event.timeStamp - $this.lastTouchStartTime < 350) {\n                return;\n            }\n\n            if ($this.touchStarted) {\n                return;\n            }\n\n            addTouchClass(this);\n\n            $this.touchStarted = true;\n\n            $this.touchMoved = false;\n            $this.swipeOutBounded = false;\n\n            $this.startX = touchX(event);\n            $this.startY = touchY(event);\n\n            $this.currentX = 0;\n            $this.currentY = 0;\n\n            $this.touchStartTime = event.timeStamp;\n\n            // Trigger touchhold event after `touchHoldTolerance`ms\n            $this.touchHoldTimer = setTimeout(function() {\n                $this.touchHoldTimer = null;\n                triggerEvent(event, $el, 'touchhold');\n            }, $this.options.touchHoldTolerance);\n\n            triggerEvent(event, this, 'start');\n        }\n\n        function touchMoveEvent(event) {\n            var $this = this.$$touchObj;\n\n            $this.currentX = touchX(event);\n            $this.currentY = touchY(event);\n\n            if (!$this.touchMoved) {\n                var tapTolerance = $this.options.tapTolerance;\n\n                $this.touchMoved = Math.abs($this.startX - $this.currentX) > tapTolerance ||\n                    Math.abs($this.startY - $this.currentY) > tapTolerance;\n\n                if($this.touchMoved){\n                    cancelTouchHoldTimer($this);\n                    triggerEvent(event, this, 'moved');\n                }\n\n            } else if (!$this.swipeOutBounded) {\n                var swipeOutBounded = $this.options.swipeTolerance;\n\n                $this.swipeOutBounded = Math.abs($this.startX - $this.currentX) > swipeOutBounded &&\n                    Math.abs($this.startY - $this.currentY) > swipeOutBounded;\n            }\n\n            if($this.touchMoved){\n                triggerEvent(event, this, 'moving');\n            }\n        }\n\n        function touchCancelEvent() {\n            var $this = this.$$touchObj;\n\n            cancelTouchHoldTimer($this);\n            removeTouchClass(this);\n\n            $this.touchStarted = $this.touchMoved = false;\n            $this.startX = $this.startY = 0;\n        }\n\n        function touchEndEvent(event) {\n            var $this = this.$$touchObj,\n                isTouchEvent = event.type.indexOf('touch') >= 0,\n                isMouseEvent = event.type.indexOf('mouse') >= 0;\n\n            if (isTouchEvent) {\n                $this.lastTouchEndTime = event.timeStamp;\n            }\n\n            var touchholdEnd = isTouchEvent && !$this.touchHoldTimer;\n            cancelTouchHoldTimer($this);\n\n            $this.touchStarted = false;\n\n            removeTouchClass(this);\n\n            if (isMouseEvent && $this.lastTouchEndTime && event.timeStamp - $this.lastTouchEndTime < 350) {\n                return;\n            }\n\n            // Fix #33, Trigger `end` event when touch stopped\n            triggerEvent(event, this, 'end');\n\n            if (!$this.touchMoved) {\n                // detect if this is a longTap event or not\n                if ($this.callbacks.longtap && event.timeStamp - $this.touchStartTime > $this.options.longTapTimeInterval) {\n                    if (event.cancelable) {\n                        event.preventDefault();\n                    }\n                    triggerEvent(event, this, 'longtap');\n\n                } else if ($this.callbacks.touchhold && touchholdEnd) {\n                    if (event.cancelable) {\n                        event.preventDefault();\n                    }\n                    return;\n                } else {\n                    // emit tap event\n                    triggerEvent(event, this, 'tap');\n                }\n\n            } else if (!$this.swipeOutBounded) {\n                var swipeOutBounded = $this.options.swipeTolerance,\n                    direction;\n\n                if (Math.abs($this.startX - $this.currentX) < swipeOutBounded) {\n                    direction = $this.startY > $this.currentY ? 'top' : 'bottom';\n\n                } else {\n                    direction = $this.startX > $this.currentX ? 'left' : 'right';\n                }\n\n                // Only emit the specified event when it has modifiers\n                if ($this.callbacks['swipe.' + direction]) {\n                    triggerEvent(event, this, 'swipe.' + direction, direction);\n\n                } else {\n                    // Emit a common event when it has no any modifier\n                    triggerEvent(event, this, 'swipe', direction);\n                }\n            }\n        }\n\n        function mouseEnterEvent() {\n            addTouchClass(this);\n        }\n\n        function mouseLeaveEvent() {\n            removeTouchClass(this);\n        }\n\n        function triggerEvent(e, $el, eventType, param) {\n            var $this = $el.$$touchObj;\n\n            // get the callback list\n            var callbacks = $this.callbacks[eventType] || [];\n            if (callbacks.length === 0) {\n                return null;\n            }\n\n            for (var i = 0; i < callbacks.length; i++) {\n                var binding = callbacks[i];\n\n                if (binding.modifiers.stop) {\n                    e.stopPropagation();\n                }\n\n                if (binding.modifiers.prevent) {\n                    e.preventDefault();\n                }\n\n                // handle `self` modifier`\n                if (binding.modifiers.self && e.target !== e.currentTarget) {\n                    continue;\n                }\n\n                if (typeof binding.value === 'function') {\n                    if (param) {\n                        binding.value(param, e);\n                    } else {\n                        binding.value(e);\n                    }\n                }\n            }\n        }\n\n        function addTouchClass($el) {\n            var className = $el.$$touchObj.options.touchClass;\n            className && $el.classList.add(className);\n        }\n\n        function removeTouchClass($el) {\n            var className = $el.$$touchObj.options.touchClass;\n            className && $el.classList.remove(className);\n        }\n\n        function cancelTouchHoldTimer($this) {\n            if ($this.touchHoldTimer) {\n                clearTimeout($this.touchHoldTimer);\n                $this.touchHoldTimer = null;\n            }\n        }\n\n        function buildTouchObj($el, extraOptions) {\n            var touchObj = $el.$$touchObj || {\n                // an object contains all callbacks registered,\n                // key is event name, value is an array\n                callbacks: {},\n                // prevent bind twice, set to true when event bound\n                hasBindTouchEvents: false,\n                // default options, would be override by v-touch-options\n                options: globalOptions\n            };\n            if (extraOptions) {\n                touchObj.options = Object.assign({}, touchObj.options, extraOptions);\n            }\n            $el.$$touchObj = touchObj;\n            return $el.$$touchObj;\n        }\n\n        Vue.directive('touch', {\n            bind: function ($el, binding) {\n                // build a touch configuration object\n                var $this = buildTouchObj($el);\n                // declare passive option for the event listener. Defaults to { passive: true } if supported\n                var passiveOpt = isPassiveSupported ? { passive: true } : false;\n                // register callback\n                var eventType = binding.arg || 'tap';\n                switch (eventType) {\n                    case 'swipe':\n                        var _m = binding.modifiers;\n                        if (_m.left || _m.right || _m.top || _m.bottom) {\n                            for (var i in binding.modifiers) {\n                                if (['left', 'right', 'top', 'bottom'].indexOf(i) >= 0) {\n                                    var _e = 'swipe.' + i;\n                                    $this.callbacks[_e] = $this.callbacks[_e] || [];\n                                    $this.callbacks[_e].push(binding);\n                                }\n                            }\n                        } else {\n                            $this.callbacks.swipe = $this.callbacks.swipe || [];\n                            $this.callbacks.swipe.push(binding);\n                        }\n                        break;\n                    \n                    case 'start':\n                    case 'moving':\n                        if (binding.modifiers.disablePassive) {\n                            // change the passive option for the moving event if disablePassive modifier exists\n                            passiveOpt = false;\n                        }\n                    default:\n                        $this.callbacks[eventType] = $this.callbacks[eventType] || [];\n                        $this.callbacks[eventType].push(binding);\n                }\n\n                // prevent bind twice\n                if ($this.hasBindTouchEvents) {\n                    return;\n                }\n\n                $el.addEventListener('touchstart', touchStartEvent, passiveOpt);\n                $el.addEventListener('touchmove', touchMoveEvent, passiveOpt);\n                $el.addEventListener('touchcancel', touchCancelEvent);\n                $el.addEventListener('touchend', touchEndEvent);\n\n                if (!$this.options.disableClick) {\n                    $el.addEventListener('mousedown', touchStartEvent);\n                    $el.addEventListener('mousemove', touchMoveEvent);\n                    $el.addEventListener('mouseup', touchEndEvent);\n                    $el.addEventListener('mouseenter', mouseEnterEvent);\n                    $el.addEventListener('mouseleave', mouseLeaveEvent);\n                }\n\n                // set bind mark to true\n                $this.hasBindTouchEvents = true;\n            },\n\n            unbind: function ($el) {\n                $el.removeEventListener('touchstart', touchStartEvent);\n                $el.removeEventListener('touchmove', touchMoveEvent);\n                $el.removeEventListener('touchcancel', touchCancelEvent);\n                $el.removeEventListener('touchend', touchEndEvent);\n\n                if ($el.$$touchObj && !$el.$$touchObj.options.disableClick) {\n                    $el.removeEventListener('mousedown', touchStartEvent);\n                    $el.removeEventListener('mousemove', touchMoveEvent);\n                    $el.removeEventListener('mouseup', touchEndEvent);\n                    $el.removeEventListener('mouseenter', mouseEnterEvent);\n                    $el.removeEventListener('mouseleave', mouseLeaveEvent);\n                }\n\n                // remove vars\n                delete $el.$$touchObj;\n            }\n        });\n\n        Vue.directive('touch-class', {\n            bind: function ($el, binding) {\n                buildTouchObj($el, {\n                    touchClass: binding.value\n                });\n            }\n        });\n\n        Vue.directive('touch-options', {\n            bind: function($el, binding) {\n                buildTouchObj($el, binding.value);\n            }\n        });\n    }\n};\n\n\n/*\n * Exports\n */\nif (typeof module === 'object') {\n    module.exports = vueTouchEvents;\n\n} else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n        return vueTouchEvents;\n    });\n} else if (window.Vue) {\n    window.vueTouchEvents = vueTouchEvents;\n    Vue.use(vueTouchEvents);\n}\n"],
  "mappings": "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",
  "names": ["require_vue2_touch_events", "__commonJSMin", "exports", "module", "touchX", "event", "touchY", "isPassiveSupported", "supportsPassive", "opts", "vueTouchEvents", "Vue", "constructorOptions", "globalOptions", "touchStartEvent", "$this", "isTouchEvent", "isMouseEvent", "$el", "addTouchClass", "triggerEvent", "touchMoveEvent", "swipeOutBounded", "tapTolerance", "cancelTouchHoldTimer", "touchCancelEvent", "removeTouchClass", "touchEndEvent", "touchholdEnd", "direction", "mouseEnterEvent", "mouseLeaveEvent", "e", "eventType", "param", "callbacks", "binding", "className", "buildTouchObj", "extraOptions", "touchObj", "passiveOpt", "_m", "_e"]
}
